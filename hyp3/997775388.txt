most dynamic recompilers are used to convert machine code between architectures at runtime in other cases , a system may employ dynamic recompilation as part of an adaptive optimization strategy to execute a portable program representation such as java or full-speed debuggers also utilize dynamic recompilation to reduce the space overhead incurred in most deoptimization techniques , and other features such as dynamic thread migration suppose a program is being run in an emulator and needs to copy a null-terminated string this processor can only copy a byte at a time , and must do so by first reading it from the source string into a register , then writing it from that register into the destination string the emulator might be running on a processor which is similar , but extremely good at copying strings , and the emulator knows it can take advantage of this it also knows that the addresses of the strings will be in registers a and b , so it increments a and b by 16 every time it executes , ready for the next copy many java virtual machine feature dynamic recompilation later versions of the mac 68k emulator used in classic mac os to run 680x0 code on the powerpc hardware running games written for the original xbox ) is widely assumed to use dynamic recompilation gem , a game boy emulator for msx uses an optimizing dynamic recompiler 