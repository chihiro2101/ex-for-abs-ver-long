the factory method design pattern is one of the design patterns that describe how to solve recurring design problems to design flexible and reusable object-oriented software , that is , objects that are easier to implement , change , test , and reuse the factory method design pattern is used instead of the regular class constructor for keeping within the solid principles of programming , decoupling the construction of objects from the objects themselves the vehicle constructor code then calls a motor factory method , to create the desired motor that complies with the imotor interface creating an object directly within the class that requires or uses the object is inflexible because it commits the class to a particular object and makes it impossible to change the instantiation independently of the class the factory method design pattern is used by first defining a separate operation , a factory method , for creating an object , and then using this factory method by calling it to create the object the factory method lets a class defer instantiation it uses to subclasses the factory method pattern relies on inheritance , as object creation is delegated to subclasses that implement the factory method to create objects none in the above uml class diagram , the creator class that requires a product object does n't instantiate the product1 class directly 