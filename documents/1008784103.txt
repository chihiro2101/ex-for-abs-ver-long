Photon mapping

effects . caustics . light refracted or reflected causes patterns called caustics , usually visible as concentrated patches of light on nearby surfaces . for example , as light rays pass through a wine glass sitting on a table , they are refracted and patterns of light are visible on the table . photon mapping can trace the paths of individual photons to model where these concentrated patches of light will appear . diffuse interreflection . diffuse interreflection is apparent when light from one diffuse object is reflected onto another . photon mapping is particularly adept at handling this effect because the algorithm reflects photons from one surface to another based on that surface 's bidirectional reflectance distribution function ( brdf ) , and thus light from one object striking another is a natural result of the method . diffuse interreflection was first modeled using radiosity solutions . photon mapping differs though in that it separates the light transport from the nature of the geometry in the scene . color bleed is an example of diffuse interreflection . subsurface scattering . subsurface scattering is the effect evident when light enters a material and is scattered before being absorbed or reflected in a different direction . subsurface scattering can accurately be modeled using photon mapping . this was the original way jensen implemented it ; however , the method becomes slow for highly scattering materials , and bidirectional surface scattering reflectance distribution functions ( bssrdfs ) are more efficient in these situations . usage . construction of the photon map ( 1st pass ) . with photon mapping , light packets called photons are sent out into the scene from the light sources . whenever a photon intersects with a surface , the intersection point and incoming direction are stored in a cache called the photon map . typically , two photon maps are created for a scene : one especially for caustics and a global one for other light . after intersecting the surface , a probability for either reflecting , absorbing , or transmitting/refracting is given by the material . a monte carlo method called russian roulette is used to choose one of these actions . if the photon is absorbed , no new direction is given , and tracing for that photon ends . if the photon reflects , the surface 's bidirectional reflectance distribution function is used to determine the ratio of reflected radiance . finally , if the photon is transmitting , a function for its direction is given depending upon the nature of the transmission . once the photon map is constructed ( or during construction ) , it is typically arranged in a manner that is optimal for the k-nearest neighbor algorithm , as photon look-up time depends on the spatial distribution of the photons . jensen advocates the usage of kd-trees . the photon map is then stored on disk or in memory for later usage . rendering ( 2nd pass ) . in this step of the algorithm , the photon map created in the first pass is used to estimate the radiance of every pixel of the output image . for each pixel , the scene is ray traced until the closest surface of intersection is found . at this point , the rendering equation is used to calculate the surface radiance leaving the point of intersection in the direction of the ray that struck it . to facilitate efficiency , the equation is decomposed into four separate factors : direct illumination , specular reflection , caustics , and soft indirect illumination . for an accurate estimate of direct illumination , a ray is traced from the point of intersection to each light source . as long as a ray does not intersect another object , the light source is used to calculate the direct illumination . for an approximate estimate of indirect illumination , the photon map is used to calculate the radiance contribution . specular reflection can be , in most cases , calculated using ray tracing procedures ( as it handles reflections well ) . the contribution to the surface radiance from caustics is calculated using the caustics photon map directly . the number of photons in this map must be sufficiently large , as the map is the only source for caustics information in the scene . for soft indirect illumination , radiance is calculated using the photon map directly . this contribution , however , does not need to be as accurate as the caustics contribution and thus uses the global photon map . calculating radiance using the photon map . in order to calculate surface radiance at an intersection point , one of the cached photon maps is used . the steps are : gather the n nearest photons using the nearest neighbor search function on the photon map . let s be the sphere that contains these n photons . for each photon , divide the amount of flux ( real photons ) that the photon represents by the area of s and multiply by the brdf applied to that photon . the sum of those results for each photon represents total surface radiance returned by the surface intersection in the direction of the ray that struck it . optimizations . to avoid emitting unneeded photons , the initial direction of the outgoing photons is often constrained . instead of simply sending out photons in random directions , they are sent in the direction of a known object that is a desired photon manipulator to either focus or diffuse the light . there are many other refinements that can be made to the algorithm : for example , choosing the number of photons to send , and where and in what pattern to send them . it would seem that emitting more photons in a specific direction would cause a higher density of photons to be stored in the photon map around the position where the photons hit , and thus measuring this density would give an inaccurate value for irradiance . this is true ; however , the algorithm used to compute radiance does not depend on irradiance estimates . for soft indirect illumination , if the surface is lambertian , then a technique known as irradiance caching may be used to interpolate values from previous calculations . to avoid unnecessary collision testing in direct illumination , shadow photons can be used . during the photon mapping process , when a photon strikes a surface , in addition to the usual operations performed , a shadow photon is emitted in the same direction the original photon came from that goes all the way through the object . the next object it collides with causes a shadow photon to be stored in the photon map . then during the direct illumination calculation , instead of sending out a ray from the surface to the light that tests collisions with objects , the photon map is queried for shadow photons . if none are present , then the object has a clear line of sight to the light source and additional calculations can be avoided . to optimize image quality , particularly of caustics , jensen recommends use of a cone filter . essentially , the filter gives weight to photons ' contributions to radiance depending on how far they are from ray-surface intersections . this can produce sharper images . image space photon mapping achieves real-time performance by computing the first and last scattering using a gpu rasterizer . variations . although photon mapping was designed to work primarily with ray tracers , it can also be extended for use with scanline rendering . references . external links . global illumination using photon maps realistic image synthesis using photon mapping photon mapping introduction from worcester polytechnic institute bias in rendering siggraph paper