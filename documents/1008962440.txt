Passphrase

security . considering that the entropy of written english is less than 1.1 bits per character , passphrases can be relatively weak . nist has estimated that the 23-character passphrase '' iamthecapitanofthepina4 '' contains a 45-bit strength . the equation employed here is : : 4 bits ( 1st character ) + 14 bits ( characters 2 & ndash ; 8 ) + 18 bits ( characters 9 & ndash ; 20 ) + 3 bits ( characters 21 & ndash ; 23 ) + 6 bits ( bonus for upper case , lower case , and alphanumeric ) 45 bits ( this calculation does not take into account that this is a well-known quote from the operetta h.m.s . pinafore . an md5 hash of this passphrase can be cracked in 4 seconds using crackstation.net , indicating that the phrase is found in password cracking databases . ) using this guideline , to achieve the 80-bit strength recommended for high security ( non-military ) by nist , a passphrase would need to be 58 characters long , assuming a composition that includes uppercase and alphanumeric . there is room for debate regarding the applicability of this equation , depending on the number of bits of entropy assigned . for example , the characters in five-letter words each contain 2.3 bits of entropy , which would mean only a 35-character passphrase is necessary to achieve 80 bit strength . if the words or components of a passphrase may be found in a language dictionary—especially one available as electronic input to a software program—the passphrase is rendered more vulnerable to dictionary attack . this is a particular issue if the entire phrase can be found in a book of quotations or phrase compilations . however , the required effort ( in time and cost ) can be made impracticably high if there are enough words in the passphrase and how randomly they are chosen and ordered in the passphrase . the number of combinations which would have to be tested under sufficient conditions make a dictionary attack so difficult as to be infeasible . these are difficult conditions to meet , and selecting at least one word that can not be found in any dictionary significantly increases passphrase strength . if passphrases are chosen by humans they are usually biased by frequency of particular words in natural language . in the case of four word phrases , actual entropy rarely exceeds 30 bits . on the other hand , user-selected passwords tend to be much weaker than that and encouraging users to use even 2-word passphrases may be able to raise entropy from below 10 bits to over 20 bits . joseph bonneau , ekaterina shutova , linguistic properties of multi-word passphrases , university of cambridge for example , the widely used cryptography standard openpgp requires that a user make up a passphrase that must be entered whenever decrypting or signing messages . internet services like hushmail provide free encrypted e-mail or file sharing services , but the security present depends almost entirely on the quality of the chosen passphrase . compared to passwords . passphrases differ from passwords . a password is usually short & mdash ; six to ten characters . such passwords may be adequate for various applications ( if frequently changed , if chosen using an appropriate policy , if not found in dictionaries , if sufficiently random , and/or if the system prevents online guessing , etc . ) such as : logging onto computer systems negotiating keys in an interactive setting ( e.g . using password-authenticated key agreement ) enabling a smart-card or pin for an atm card ( e.g . where the password data ( hopefully ) can not be extracted ) but passwords are typically not safe to use as keys for standalone security systems ( e.g . , encryption systems ) that expose data to enable offline password guessing by an attacker . passphrases are theoretically stronger , and so should make a better choice in these cases . first , they usually are ( and always should be ) much longer & mdash ; 20 to 30 characters or more is typical & mdash ; making some kinds of brute force attacks entirely impractical . second , if well chosen , they will not be found in any phrase or quote dictionary , so such dictionary attacks will be almost impossible . third , they can be structured to be more easily memorable than passwords without being written down , reducing the risk of hardcopy theft . however , if a passphrase is not protected appropriately by the authenticator and the clear-text passphrase is revealed its use is no better than other passwords . for this reason it is recommended that passphrases not be reused across different or unique sites and services . in 2012 , two cambridge university researchers analyzed passphrases from the amazon payphrase system and found that a significant percentage are easy to guess due to common cultural references such as movie names and sports teams , losing much of the potential of using long passwords . when used in cryptography , commonly the password protects a long ( machine generated ) key , and the key protects the data . the key is so long a brute force attack ( directly on the data ) is impossible . a key derivation function is used , involving many thousands of iterations ( salted & hashed ) , to slow down password cracking attacks . passphrase selection . typical advice about choosing a passphrase includes suggestions that it should be : long enough to be hard to guess not a famous quotation from literature , holy books , et cetera hard to guess by intuition—even by someone who knows the user well easy to remember and type accurately for better security , any easily memorable encoding at the user 's own level can be applied . not reused between sites , applications and other different sources . example methods . one method to create a strong passphrase is to use dice to select words at random from a long list , a technique often referred to as diceware . while such a collection of words might appear to violate the '' not from any dictionary '' rule , the security is based entirely on the large number of possible ways to choose from the list of words and not from any secrecy about the words themselves . for example , if there are 7776 words in the list and six words are chosen randomly , then there are 7776 6 & nbsp ; 221073919720733357899776 combinations , providing about 78 bits of entropy . ( the number 7776 was chosen to allow words to be selected by throwing five dice . 7776 & nbsp ; & nbsp ; 6 5 ) random word sequences may then be memorized using techniques such as the memory palace . another is to choose two phrases , turn one into an acronym , and include it in the second , making the final passphrase . for instance , using two english language typing exercises , we have the following . the quick brown fox jumps over the lazy dog , becomes tqbfjotld . including it in , now is the time for all good men to come to the aid of their country , might produce , now is the time for all good tqbfjotld to come to the aid of their country as the passphrase . there are several points to note here , all relating to why this example passphrase is not a good one . it has appeared in public and so should be avoided by everyone . it is long ( which is a considerable virtue in theory ) and requires a good typist as typing errors are much more likely for extended phrases . individuals and organizations serious about cracking computer security have compiled lists of passwords derived in this manner from the most common quotations , song lyrics , and so on . the pgp passphrase faq suggests a procedure that attempts a better balance between theoretical security and practicality than this example . all procedures for picking a passphrase involve a tradeoff between security and ease of use ; security should be at least '' adequate '' while not '' too seriously '' annoying users . both criteria should be evaluated to match particular situations . another supplementary approach to frustrating brute-force attacks is to derive the key from the passphrase using a key derivation function , such as pbkdf2 as described in rfc 2898 . windows support . if backward compatibility with microsoft lan manager is not needed , in versions of windows nt ( including windows 2000 , windows xp and later ) , a passphrase can be used as a substitute for a windows password . if the passphrase is longer than 14 characters , this will also avoid the generation of a very weak lm hash . unix support . in recent versions of unix-like operating systems such as linux , openbsd , netbsd , solaris and freebsd , up to 255-character passphrases can be used . see also . keyfile password-based cryptography . references . . external links . diceware page xkcd password strength common-viewed explanation of concept