UUCP

technology . before the widespread availability of internet access , computers were only connected by smaller local area networks within a company or organization . they were also often equipped with modems so they could be used remotely from character-mode terminals via dial-up telephone lines . uucp used the computers ' modems to dial out to other computers , establishing temporary , point-to-point links between them . each system in a uucp network has a list of neighbor systems , with phone numbers , login names and passwords , etc . when work ( file transfer or command execution requests ) is queued for a neighbor system , the program typically calls that system to process the work . the program can also poll its neighbors periodically to check for work queued on their side ; this permits neighbors without dial-out capability to participate . over time , dial-up links were replaced by internet connections , and uucp added a number of new link layer protocols . these newer connections also reduced the need for uucp at all , as newer application protocols developed to take advantage of the new networks . today , uucp is rarely used over dial-up links , but is occasionally used over tcp/ip . the number of systems involved , as of early 2006 , ran between 1500 and 2000 sites across 60 enterprises . uucp 's longevity can be attributed to its low cost , extensive logging , native failover to dialup , and persistent queue management . sessions . uucp is normally started by having a user log into the target system and then running the uucp program . in most cases , this is automated by logging into a known user account used for transfers , whose account 's shell has been set to . thus , for automated transfers , another machine simply has to open a modem connection to the called machine and log into the known account . when uucico runs , it will expect to receive commands from another uucp program on the caller 's machine and begin a session . the session has three distinct stages : initial handshake file request ( s ) final handshake . initial handshake . on starting , uucico will respond by sending an identification string , \20shere hostname\0 , where \20 is the control-p character , and \0 is a trailing null . the caller 's uucp responds with \20shostname options\0 , where options is a string containing zero or more unix-like option switches . these can include packet and window sizes , the maximum supported file size , debugging options , and others . depending on the setup of the two systems , the call may end here . for instance , when the caller responds with their system name , the called system may optionally hang up if it does not recognize the caller , sending the ryou are unknown to me\0 response string and then disconnecting . file requests . if the two systems successfully handshake , the caller will now begin to send a series of file requests . there are four types : : s causes a file to be sent from the caller to the called system ( upload ) . the from and to names are provided , allowing the filename to be changed on the receiver . when the s command is received on the called system , it responds with sy if it succeeded and it is ready to accept the file , or snx if it failed , where x is a failure reason . if an sy is received by the caller , it begins uploading the file using the protocol selected during the initial handshake ( see below ) . when the transfer is complete , the called system responds with cy if it successfully received the file , or cn5 if it failed . : r is a request for the called system to send a file to the caller ( download ) . it is otherwise similar to s , using ry and rn to indicate the command was accepted and it will begin to send data or had a problem , and expecting a cy and cn5 from the caller at the end of the transfer . : x uploads commands to be executed on the called system . this can be used to make that system call another and deliver files to it . the called system responds with xy if it succeeded , or xn if it failed . : h , for hangup , indicates the caller is done . the called system responds with hy if it succeeded , or hn if it failed . final handshake . after sending an h command , the calling system sends a final packet ( control-p , six ohs , null-terminator ) and the called system responds with ( control-p , seven ohs , null-terminator ) . some systems will simply hang up on the successful reception of the h command and not bother with the final handshake . g-protocol . within the suite of protocols in uucp , the underlying g-protocol is responsible for transferring information in an error-free form . the protocol originated as a general-purpose system for packet delivery , and thus offers a number of features that are not used by the uucp package as a whole . these include a secondary channel that can send command data interspersed with a file transfer , and the ability to renegotiate the packet and window sizes during transmission . these extra features may not be available in some implementations of the uucp stack . the packet format consisted of a 6-byte header and then between zero and 4096 bytes in the payload . the packet starts with a single \020 ( control-p ) . this is followed by a single byte , known as '' k '' , containing a value of 1 to 8 indicating a packet size from 32 to 4096 bytes , or a 9 indicating a control packet . many systems only supported k 2 , meaning 64 bytes . the next two bytes were a 16-bit checksum of the payload , not including the header . the next byte is the data type and finally , the last byte is the xor of the header , allowing it to be checked separately from the payload . the control byte consists of three bit-fields in the format ttxxxyyy . tt is the packet type , 0 for control packets ( which also requires k 9 to be valid ) , 1 for alternate data ( not used in uucp ) , 2 for data , and 3 indicates a short packet that re-defines the meaning of k . in a data packet , xxx is the packet number for this packet from 0 to 7 , and yyy is the last that was received correctly . this provides up to 8 packets in a window . in a control packet , xxx indicates the command and yyy is used for various parameters . for instance , transfers are started by sending a short control packet with tt 0 ( control ) , xxx 7 and yyy the number of packets in a window , then sending another packet with xxx 6 and yyy as the packet length ( encoded as it would be in k ) and then a third packet that is identical to the first but xxx 5 . g-protocol uses a simple sliding window system to deal with potentially long latencies between endpoints . the protocol allows packets to size from 64 to 4096 8-bit bytes , and windows that include 1 to 7 packets . in theory , a system using 4k packets and 7 packet windows ( 4096x7 ) would offer performance matching or beating the best file-transfer protocols like zmodem . in practice , many implementations only supported a single setting of 64x3 . as a result , the g-protocol has an undeserved reputation for poor performance . confusion over the packet and window sizes led to the g-protocol , differing only in that it always used 4096x3 . taylor uucp did not support g , but did support any valid requested window or packet size , so remote systems starting g would work fine with taylor 's g , while two taylor systems could negotiate even faster connections . telebit modems used protocol spoofing to improve the performance of g-protocol transfers by noticing end-of-packet markers being sent to the remote system and immediately sending an back to the local host , pretending that the remote system had already received the packet and decoded it correctly . this triggered the software stack to send the next packet , so rapidly that the transfer became almost continuous . the data between the two modems was error-corrected using a proprietary protocol based on mnp that ran over telebit 's half-duplex connections much better than g-protocol would normally , because in the common 64x3 case the remote system would be sending a constant stream of s that would overflow the low-speed return channel . combined with the modem 's naturally higher data rates , they greatly improved overall throughput and generally performed about seven times the speed of a 2400 bps modem . they were widely used on uucp hosts as they could quickly pay for themselves in reduced long-distance charges . other protocols . uucp implementations also include other transfer protocols for use over certain links . f-protocol is designed to run over 7-bit error-corrected links . this was originally intended for use on x.25 links , which were popular for a time in the 1980s . it does not packetize data , instead , the entire file is sent as a single long string followed by a whole-file checksum . the similar x-protocol appears to have seen little or no use . d-protocol was similar to x , but intended for use on the obsolete datakit network . t-protocol originated in the bsd versions of uucp and is designed to run over 8-bit error-free tcp/ip links . it has no error correction at all , and the protocol consists simply of breaking up command and file data into 512 or 1024-byte packets to easily fit within typical tcp frames . the less-used e-protocol , which originated the honeydanber versions as opposed to t from bsd , differs only in that commands are not packetized and are instead sent as normal strings , while files are padded to the nearest 20 bytes . . history . uucp was originally written at at & t bell laboratories by mike lesk . by 1978 it was in use on 82 unix machines inside the bell system , primarily for software distribution . it was released in 1979 as part of version 7 unix . version 7 unix manual : '' uucp implementation description '' by d . a . nowitz , and '' a dial-up network of unix systems '' by d . a . nowitz and m . e . lesk the original uucp was rewritten by at & t researchers peter honeyman , david a . nowitz , and brian e . redman around 1983 . the rewrite is referred to as hdb or honeydanber uucp , which was later enhanced , bug fixed , and repackaged as bnu uucp ( '' basic network utilities '' ) . each of these versions was distributed as proprietary software , which inspired ian lance taylor to write a new free software version from scratch in 1991 . taylor uucp was released under the gnu general public license . taylor uucp addressed security holes which allowed some of the original network worms to remotely execute unexpected shell commands . taylor uucp also incorporated features of all previous versions of uucp , allowing it to communicate with any other version and even use similar config file formats from other versions . uucp was also implemented for non-unix operating systems , most-notably dos systems . packages such as uuslave/gnuucp ( john gilmore , garry paxinos , tim pozar ) , uupc/extended ( drew derbyshire of kendra electronic wonderworks ) and fsuucp ( christopher ambler of iodesign ) , brought early internet connectivity to personal computers , expanding the network beyond the interconnected university systems . fsuucp formed the basis for many bulletin board system ( bbs ) packages such as galacticomm 's major bbs and mustang software 's wildcat ! bbs to connect to the uucp network and exchange email and usenet traffic . as an example , ufgate ( john galvin , garry paxinos , tim pozar ) was a package that provided a gateway between networks running fidonet and uucp protocols . fsuucp was the only other implementation of taylor 's enhanced ' i ' protocol , a significant improvement over the standard ' g ' protocol used by most uucp implementations . mail routing . the and capabilities could be used to send email between machines , with suitable mail user interfaces and delivery agent programs . a simple uucp mail address was formed from the adjacent machine name , an exclamation mark ( often pronounced bang ) , followed by the user name on the adjacent machine . for example , the address barbox ! user would refer to user user on adjacent machine barbox . mail could furthermore be routed through the network , traversing any number of intermediate nodes before arriving at its destination . initially , this had to be done by specifying the complete path , with a list of intermediate host names separated by bangs . for example , if machine barbox is not connected to the local machine , but it is known that barbox is connected to machine foovax which does communicate with the local machine , the appropriate address to send mail to would be foovax ! barbox ! user . user barbox ! user would generally publish their uucp email address in a form such as … ! bigsite ! foovax ! barbox ! user . this directs people to route their mail to machine bigsite ( presumably a well-known and well-connected machine accessible to everybody ) and from there through the machine foovax to the account of user user on barbox . publishing a full path would be pointless , because it would be different , depending on where the sender was . ( e.g . ann at one site may have to send via path gway ! tcol ! canty ! uoh ! bigsite ! foovax ! barbox ! user , whereas from somewhere else , bill has to send via the path pdp10 ! router22 ! bigsite ! foovax ! barbox ! user ) . many users would suggest multiple routes from various large well-known sites , providing even better and perhaps faster connection service from the mail sender . bang path . an email address of this form was known as a bang path . bang paths of eight to ten machines ( or hops ) were not uncommon in 1981 , and late-night dial-up uucp links would cause week-long transmission times . bang paths were often selected by both transmission time and reliability , as messages would often get lost . some hosts went so far as to try to '' rewrite '' the path , sending mail via '' faster '' routes—this practice tended to be frowned upon . the '' pseudo-domain '' ending . uucp was sometimes used to designate a hostname as being reachable by uucp networking , although this was never formally registered in the domain name system ( dns ) as a top-level domain . the uucp community administered itself and did not mesh well with the administration methods and regulations governing the dns ; . uucp works where it needs to ; some hosts punt mail out of smtp queue into uucp queues on gateway machines if a . uucp address is recognized on an incoming smtp connection . usenet traffic was originally transmitted over the uucp protocol using bang paths . these are still in use within usenet message format path header lines . they now have only an informational purpose , and are not used for routing , although they can be used to ensure that loops do not occur . in general , like other non-internet email address , bang paths have now been superseded by the '' notation '' , even by sites still using uucp . a uucp-only site can register a dns domain name , and have the dns server that handles that domain provide mx records that cause internet mail to that site to be delivered to a uucp host on the internet that can then deliver the mail to the uucp site . uucpnet and mapping . uucpnet was the name for the totality of the network of computers connected through uucp . this network was very informal , maintained in a spirit of mutual cooperation between systems owned by thousands of private companies , universities , and so on . often , particularly in the private sector , uucp links were established without official approval from the companies ' upper management . the uucp network was constantly changing as new systems and dial-up links were added , others were removed , etc . the uucp mapping project was a volunteer , largely successful effort to build a map of the connections between machines that were open mail relays and establish a managed namespace . each system administrator would submit , by e-mail , a list of the systems to which theirs would connect , along with a ranking for each such connection . these submitted map entries were processed by an automatic program that combined them into a single set of files describing all connections in the network . these files were then published monthly in a newsgroup dedicated to this purpose . the uucp map files could then be used by software such as '' pathalias '' to compute the best route path from one machine to another for mail , and to supply this route automatically . the uucp maps also listed contact information for the sites , and so gave sites seeking to join uucpnet an easy way to find prospective neighbors . connections with the internet . many uucp hosts , particularly those at universities , were also connected to the internet in its early years , and e-mail gateways between internet smtp-based mail and uucp mail were developed . a user at a system with uucp connections could thereby exchange mail with internet users , and the internet links could be used to bypass large portions of the slow uucp network . a '' uucp zone '' was defined within the internet domain namespace to facilitate these interfaces . with this infrastructure in place , uucp 's strength was that it permitted a site to gain internet e-mail and usenet connectivity with only a dial-up modem link to another cooperating computer . this was at a time when true internet access required a leased line providing a connection to an internet point of presence , both of which were expensive and difficult to arrange . by contrast , a link to the uucp network could usually be established with a few phone calls to the administrators of prospective neighbor systems . neighbor systems were often close enough to avoid all but the most basic charges for telephone calls . remote commands . uux is remote command execution over uucp . the uux command is used to execute a command on a remote system , or to execute a command on the local system using files from remote systems . the command is run by the daemon , which handles remote execution requests as simply another kind of file to batch-send to the remote system whenever a next-hop node is available . the remote system will then execute the requested command and return the result , when the original system is available . both of these transfers may be indirect , via multi-hop paths , with arbitrary windows of availability . even when executing a command on an always-available neighbor , uux is not instant . decline . uucp usage began to die out with the rise of internet service providers offering inexpensive slip and ppp services . the uucp mapping project was formally shut down in late 2000 . the uucp protocol has now mostly been replaced by the internet tcp/ip based protocols smtp for mail and nntp for usenet news . in july 2012 , dutch internet provider xs4all closed down its uucp service , claiming it was '' probably one of the last providers in the world that still offered it '' ; it had only 13 users at that time ( however prior to its shut-down it had refused requests from new users for several years ) . . current uses and legacy . one surviving feature of uucp is the chat file format , largely inherited by the expect software package . uucp was in use over special-purpose high cost links ( e.g . marine satellite links ) long after its disappearance elsewhere , and still remains in legacy use . in addition to legacy use , in 2021 new and innovative uucp uses are growing , especially for telecommunications in the hf band , for example , for communities in the amazon rainforest for email exchange and other uses . a patch to ian 's uucp was contributed to uucp debian linux package to adapt for the hermes ( high-frequency emergency and rural multimedia exchange system ) project , which provides uucp hf connectivity . in the mid 2000s , uucp over tcp/ip ( often encrypted , using the ssh protocol ) was proposed for use when a computer does not have any fixed ip addresses but is still willing to run a standard mail transfer agent ( mta ) like sendmail or postfix . bang-like paths are still in use within the usenet network , though not for routing ; they are used to record , in the header of a message , the nodes through which that message has passed , rather than to direct where it will go next . '' bang path '' is also used as an expression for any explicitly specified routing path between network hosts . that usage is not necessarily limited to uucp , ip routing , email messaging , or usenet . the concept of delay-tolerant networking protocols was revisited in the early 2000s . similar techniques as those used by uucp can apply to other networks that experience delay or significant disruption . . see also . routing sitename mesh networking fidonet berknet . references . external links . using & managing uucp . ed ravin , tim o'reilly , dale doughtery , and grace todino . 1996 , o'reilly & associates , inc . mark horton ( 1986 ) . rfc 976 : uucp mail interchange format standard . internet engineering task force requests for comment . setting up taylor uucp + qmail on freebsd 5.1 taylor uucp is a gpl licensed uucp package . taylor uucp documentation – useful information about uucp in general and various uucp protocols . the uucp project : history the uucp mapping project uuhecnet - hobbyist uucp network that offers free feeds