Material Exchange Format

summary . mxf when used in form of '' operational pattern op1a or opatom '' be used as a '' container '' or '' wrapper '' or '' reference file '' format which supports a number of different streams of coded '' essence '' , encoded in any of a variety of video and audio compression formats , together with a metadata wrapper which describes the material contained within the mxf file . other '' operational patterns '' can contain or reference multiple materials just like a simple timeline of a video editing program . mxf has full timecode and metadata support , and is intended as a platform-agnostic stable standard for future professional video and audio applications . mxf was developed to carry a subset of the advanced authoring format ( aaf ) data model , under a policy known as the zero divergence directive ( zdd ) . this theoretically enables mxf/aaf workflows between non-linear editing ( nle ) systems using aaf and cameras , servers , and other devices using mxf . usage . from the year 2004 , mxf was in the process of evolving from standard to deployment . the breadth of the standard was subject to lead to interoperability problems as vendors implement different parts of the standard or interpret misleading parts of the standard differently . mxf is fairly effective at the interchange of d10 ( imx ) material , mainly because of the success of the sony evtr and sony 's evtr rdd to smpte . workflows combining the evtr , avid nle systems , and broadcast servers using mxf in coordination with aaf are now possible . long-gop mpeg-2 material interchange between video servers is possible , as broadcasters develop application specifications they expect their vendors to implement . as of autumn 2005 , there were major interoperability problems with mxf in broadcast post-production use . the two data-recording camera systems which produced mxf at that time , sony 's xdcam and panasonic 's dvcpro p2 , produced mutually incompatible files due to opaque subformat options obscured behind the mxf file extension . without advanced tools , it was impossible to distinguish these incompatible formats . additionally , many mxf systems produce split-file a/v ( that is , the video and audio stored in separate files ) , and use a file naming convention which relies on randomly generated filenames to link them . not only does this exacerbate the issue of knowing exactly what is in an mxf file without specialized tools , but it breaks the functionality of standard desktop computer techniques which are generally used to manipulate data on a level as fundamental as moving , copying , renaming , and deleting . using a randomly generated filename is uninformative to the user , but changing the name breaks the loose database structure between files . one example problem that caused interopability problems in 2004 : some of the in 2004 popular mxf export tools ( i.e . the ones that are free or cost the least ) will not allow the user to create a stereo aes file within the mxf wrapper , nor will they allow the user to add free-text annotation to the mxf file so created ( in order , for instance , that the next user of the file be able to interpret his or her intentions ) . thus , an mxf file received & unwrapped may reveal smpte d10 compliant essence with eight mono aes audio components ; the recipient has no way of knowing whether these components are multiple stereo pairs , 5.1 or serve some other purpose . some of the incompatibilities were addressed and ratified in the 2009 version of the standard . mxf is used as the audio and video packaging format for digital cinema package ( dcp ) . it is also used in the stanag specification documents . the file extension for mxf files is '' . mxf '' . the macintosh file type code registered with apple for mxf files is '' mxf '' , including a trailing space . tools . mxf converters . this list represents some examples of free and open-source products that support the mxf standard in a way that the reading and writing is compatible to professional products . ffmpeg , an open source project added support for muxing and demuxing of mxf and mxf d-10 in ffmpeg 0.5 , released in march 2009 . : note that up to 2019 , ffmpeg implements only the base mxf standard but does not provide vendor specific profiles , e.g . one can not produce a mxf file that is compatible to sony xdcam devices due to missing header metadata entries ( for further information see ffmpeg trac ticket 5097 ) gstreamer is an open source material exchange format ( mxf ) library . pitivi uses this tool . xmedia recode is an freeware converter tool that support mxf files . ingex is an open-source ( gpl ) suite of software for the digital capture of audio and video data , developed and heavily used by the bbc . sdi capture is supported , as well as real-time transcoding ( with mxf ) . portions of the suite also act as a network file server for media files , as well as archiving to lto-3 data tape . . the mxf standards . base documents . smpte 377m : the mxf file format specification ( the overall master document ) smpte eg41 : mxf engineering guide ( a guide explaining how to use mxf ) smpte eg42 : mxf descriptive metadata ( a guide explaining how to use descriptive metadata in mxf ) . operational patterns . smpte 390m : op-atom ( a very simple and highly constrained layout for simple mxf files ) smpte 378m : op-1a ( the layout options for a minimal simple mxf file ) smpte 391m : op-1b smpte 392m : op-2a smpte 393m : op-2b smpte 407m : op-3a , op-3b smpte 408m : op-1c , op-2c , op-3c . generic containers . smpte 379m : generic container ( the way that essence is stored in mxf files ) smpte 381m : gc-mpeg ( how to store mpeg essence data in mxf using the generic container ) smpte 383m : gc-dv ( how to store dv essence data in mxf using the generic container ) smpte 385m : gc-cp ( how to store sdti-cp essence data in mxf using the generic container ) smpte 386m : gc-d10 ( how to store smpte d10 essence data in mxf using the generic container ) smpte 387m : gc-d11 ( how to store smpte d11 essence data in mxf using the generic container ) smpte 382m : gc-aesbwf ( how to store aes/ebu and broadcast wave audio essence data in mxf using the generic container ) smpte 384m : gc-up ( how to store uncompressed picture essence data in mxf using the generic container ) smpte 388m : gc-aa ( how to store a-law coded audio essence data in mxf using the generic container ) smpte 389m : generic container reverse play system element smpte 394m : system item scheme-1 for generic container smpte 405m : elements and individual data items for the gc si scheme 1 . metadata , dictionaries and registries . smpte 380m : dms1 ( a standard set of descriptive metadata to use with mxf files ) smpte 436m : mxf mappings for vbi lines and ancillary data smpte rp210 : smpte metadata dictionary ( the latest version is available here . ) smpte rp224 : registry of smpte universal labels . availability of standards . smpte 's top standards page has information , for the ordering of cd-roms , which would hold formal copy of the smpte standards . judging by smpte 's index , all of the standards , referenced above , would be contained on those cd-roms , as available from smpte . irt test center contains up-to-date information on the status of the smpte documents .