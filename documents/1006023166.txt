Public key infrastructure

capabilities . pki provides '' trust services '' - in plain terms trusting the actions or outputs of entities , be they people or computers . trust service objectives respect one or more of the following capabilities : confidentiality , integrity and authenticity ( cia ) . confidentiality : assurance that no entity can maliciously or unwittingly view a payload in clear text . data is encrypted to make it secret , such that even if it was read , it appears as gibberish . perhaps the most common use of pki for confidentiality purposes is in the context of transport layer security ( tls ) . tls is a capability underpinning the security of data in transit , i.e . during transmission . a classic example of tls for confidentiality is when using an internet browser to log on to a service hosted on an internet based web site by entering a password . integrity : assurance that if an entity changed ( tampered ) with transmitted data in the slightest way , it ’ d be obvious it happened as its integrity would have been compromised . often it ’ s not of utmost importance to prevent the integrity being compromised ( tamper proof ) , however , it 's of utmost importance that if integrity is compromised there 's clear evidence of it having done so ( tamper evident ) . authenticity : assurance that you have certainty of what you are connecting to , or evidencing your legitimacy when connecting to a protected service . the former is termed server-side authentication - typically used when authenticating to a web server using a password . the latter is termed client-side authentication - sometimes used when authenticating using a smart card ( hosting a digital certificate and private key ) . design . public key cryptography is a cryptographic technique that enables entities to secure communication on an insecure public network , and reliably verify the identity of an entity via digital signatures . a public key infrastructure ( pki ) is a system for the creation , storage , and distribution of digital certificates which are used to verify that a particular public key belongs to a certain entity . the pki creates digital certificates which map public keys to entities , securely stores these certificates in a central repository and revokes them if needed . a pki consists of : a certificate authority ( ca ) that stores , issues and signs the digital certificates ; a registration authority ( ra ) which verifies the identity of entities requesting their digital certificates to be stored at the ca ; a central directory—i.e . , a secure location in which keys are stored and indexed ; a certificate management system managing things like the access to stored certificates or the delivery of the certificates to be issued ; a certificate policy stating the pki 's requirements concerning its procedures . its purpose is to allow outsiders to analyze the pki 's trustworthiness . methods of certification . broadly speaking , there have traditionally been three approaches to getting this trust : certificate authority ( cas ) , web of trust ( wot ) , and simple public key infrastructure ( spki ) . certificate authorities . the primary role of the ca is to digitally sign and publish the public key bound to a given user . this is done using the ca 's own private key , so that trust in the user key relies on one 's trust in the validity of the ca 's key . when the ca is a third party separate from the user and the system , then it is called the registration authority ( ra ) , which may or may not be separate from the ca . '' mike meyers comptia security+ certification passport '' , by t . j . samuelle , p . 137 . the key-to-user binding is established , depending on the level of assurance the binding has , by software or under human supervision . the term trusted third party ( ttp ) may also be used for certificate authority ( ca ) . moreover , pki is itself often used as a synonym for a ca implementation . . issuer market share . in this model of trust relationships , a ca is a trusted third party – trusted both by the subject ( owner ) of the certificate and by the party relying upon the certificate . according to netcraft report from 2015 , the industry standard for monitoring active transport layer security ( tls ) certificates , states that '' although the global tls ecosystem is competitive , it is dominated by a handful of major cas — three certificate authorities ( symantec , sectigo , godaddy ) account for three-quarters of all issued tls certificates on public-facing web servers . the top spot has been held by symantec ( or verisign before it was purchased by symantec ) ever since our survey began , with it currently accounting for just under a third of all certificates . to illustrate the effect of differing methodologies , amongst the million busiest sites symantec issued 44 % of the valid , trusted certificates in use — significantly more than its overall market share . '' following major issues in how certificate issuing were managed , all major players gradually distrusted symantec issued certificates starting from 2017 . . temporary certificates and single sign-on . this approach involves a server that acts as an offline certificate authority within a single sign-on system . a single sign-on server will issue digital certificates into the client system , but never stores them . users can execute programs , etc . with the temporary certificate . it is common to find this solution variety with x.509-based certificates . single sign-on technology for sap enterprises : what does sap have to say ? starting sep 2020 , tls certificate validity reduced to 13 months . web of trust . an alternative approach to the problem of public authentication of public key information is the web-of-trust scheme , which uses self-signed certificates and third-party attestations of those certificates . the singular term '' web of trust '' does not imply the existence of a single web of trust , or common point of trust , but rather one of any number of potentially disjoint '' webs of trust '' . examples of implementations of this approach are pgp ( pretty good privacy ) and gnupg ( an implementation of openpgp , the standardized specification of pgp ) . because pgp and implementations allow the use of e-mail digital signatures for self-publication of public key information , it is relatively easy to implement one 's own web of trust . one of the benefits of the web of trust , such as in pgp , is that it can interoperate with a pki ca fully trusted by all parties in a domain ( such as an internal ca in a company ) that is willing to guarantee certificates , as a trusted introducer . if the '' web of trust '' is completely trusted then , because of the nature of a web of trust , trusting one certificate is granting trust to all the certificates in that web . a pki is only as valuable as the standards and practices that control the issuance of certificates and including pgp or a personally instituted web of trust could significantly degrade the trustworthiness of that enterprise 's or domain 's implementation of pki . ed gerck , overview of certification systems : x.509 , ca , pgp and skip , in the black hat briefings '99 , and the web of trust concept was first put forth by pgp creator phil zimmermann in 1992 in the manual for pgp version 2.0 : . simple public key infrastructure . another alternative , which does not deal with public authentication of public key information , is the simple public key infrastructure ( spki ) that grew out of three independent efforts to overcome the complexities of x.509 and pgp 's web of trust . spki does not associate users with persons , since the key is what is trusted , rather than the person . spki does not use any notion of trust , as the verifier is also the issuer . this is called an '' authorization loop '' in spki terminology , where authorization is integral to its design . this type of pki is specially useful for making integrations of pki that do not rely on third parties for certificate authorization , certificate information , etc . ; a good example of this is an air-gapped network in an office . decentralized pki . decentralized identifiers ( dids ) eliminates dependence on centralized registries for identifiers as well as centralized certificate authorities for key management , which is the standard in hierarchical pki . in cases where the did registry is a distributed ledger , each entity can serve as its own root authority . this architecture is referred to as decentralized pki ( dpki ) . . blockchain-based pki . an emerging approach for pki is to use the blockchain technology commonly associated with modern cryptocurrency . since blockchain technology aims to provide a distributed and unalterable ledger of information , it has qualities considered highly suitable for the storage and management of public keys . some cryptocurrencies support the storage of different public key types ( ssh , gpg , rfc 2230 , etc . ) and provides open source software that directly supports pki for openssh servers . while blockchain technology can approximate the proof of work often underpinning the confidence in trust that relying parties have in a pki , issues remain such as administrative conformance to policy , operational security and software implementation quality . a certificate authority paradigm has these issues regardless of the underlying cryptographic methods and algorithms employed , and pki that seeks to endow certificates with trustworthy properties must also address these issues . here is a list of known blockchain-based pki : certcoin flyclient blockquick . history . developments in pki occurred in the early 1970s at the british intelligence agency gchq , where james ellis , clifford cocks and others made important discoveries related to encryption algorithms and key distribution . because developments at gchq are highly classified , the results of this work were kept secret and not publicly acknowledged until the mid-1990s . the public disclosure of both secure key exchange and asymmetric key algorithms in 1976 by diffie , hellman , rivest , shamir , and adleman changed secure communications entirely . with the further development of high-speed digital electronic communications ( the internet and its predecessors ) , a need became evident for ways in which users could securely communicate with each other , and as a further consequence of that , for ways in which users could be sure with whom they were actually interacting . assorted cryptographic protocols were invented and analyzed within which the new cryptographic primitives could be effectively used . with the invention of the world wide web and its rapid spread , the need for authentication and secure communication became still more acute . commercial reasons alone ( e.g . , e-commerce , online access to proprietary databases from web browsers ) were sufficient . taher elgamal and others at netscape developed the ssl protocol ( 'https ' in web urls ) ; it included key establishment , server authentication ( prior to v3 , one-way only ) , and so on . a pki structure was thus created for web users/sites wishing secure communications . vendors and entrepreneurs saw the possibility of a large market , started companies ( or new projects at existing companies ) , and began to agitate for legal recognition and protection from liability . an american bar association technology project published an extensive analysis of some of the foreseeable legal aspects of pki operations ( see aba digital signature guidelines ) , and shortly thereafter , several u.s . states ( utah being the first in 1995 ) and other jurisdictions throughout the world began to enact laws and adopt regulations . consumer groups raised questions about privacy , access , and liability considerations , which were more taken into consideration in some jurisdictions than in others . the enacted laws and regulations differed , there were technical and operational problems in converting pki schemes into successful commercial operation , and progress has been much slower than pioneers had imagined it would be . by the first few years of the 21st century , the underlying cryptographic engineering was clearly not easy to deploy correctly . operating procedures ( manual or automatic ) were not easy to correctly design ( nor even if so designed , to execute perfectly , which the engineering required ) . the standards that existed were insufficient . pki vendors have found a market , but it is not quite the market envisioned in the mid-1990s , and it has grown both more slowly and in somewhat different ways than were anticipated . stephen wilson , december 2005 , '' the importance of pki today '' , china communications , retrieved on 2010-12-13 pkis have not solved some of the problems they were expected to , and several major vendors have gone out of business or been acquired by others . pki has had the most success in government implementations ; the largest pki implementation to date is the defense information systems agency ( disa ) pki infrastructure for the common access cards program . uses . pkis of one type or another , and from any of several vendors , have many uses , including providing public keys and bindings to user identities which are used for : encryption and/or sender authentication of e-mail messages ( e.g . , using openpgp or s/mime ) ; encryption and/or authentication of documents ( e.g . , the xml signature or xml encryption standards if documents are encoded as xml ) ; authentication of users to applications ( e.g . , smart card logon , client authentication with ssl ) . there 's experimental usage for digitally signed http authentication in the enigform and mod_openpgp projects ; bootstrapping secure communication protocols , such as internet key exchange ( ike ) and ssl . in both of these , initial set-up of a secure channel ( a '' security association '' ) uses asymmetric key—i.e . , public key—methods , whereas actual communication uses faster symmetric key—i.e . , secret key—methods ; mobile signatures are electronic signatures that are created using a mobile device and rely on signature or certification services in a location independent telecommunication environment ; mark gasson , martin meints , kevin warwick ( 2005 ) , d3.2 : a study on pki and biometrics , fidis deliverable ( 3 ) 2 , july 2005 internet of things requires secure communication between mutually trusted devices . a public key infrastructure enables devices to obtain and renew x509 certificates which are used to establish trust between devices and encrypt communications using tls . open source implementations . openssl is the simplest form of ca and tool for pki . it is a toolkit , developed in c , that is included in all major linux distributions , and can be used both to build your own ( simple ) ca and to pki-enable applications . ( apache licensed ) ejbca is a full-featured , enterprise-grade , ca implementation developed in java . it can be used to set up a ca both for internal use and as a service . ( lgpl ) xipki , ca and ocsp responder . with sha3 support , implemented in java . ( apache licensed ) openca is a full-featured ca implementation using a number of different tools . openca uses openssl for the underlying pki operations . xca is a graphical interface , and database . xca uses openssl for the underlying pki operations . ( discontinued ) tinyca was a graphical interface for openssl . iot_pki is a simple pki built using the python cryptography library dogtag is a full featured ca developed and maintained as part of the fedora project . cfssl open source toolkit developed by cloudflare for signing , verifying , and bundling tls certificates . ( bsd licenses 2-clause ) vault tool for securely managing secrets ( tls certificates included ) developed by hashicorp . ( mozilla public license ) . criticism . some argue that purchasing certificates for securing websites by ssl and securing software by code signing is a costly venture for small businesses . however , the emergence of free alternatives , such as let 's encrypt , has changed this . http/2 , the latest version of http protocol , allows unsecured connections in theory ; in practice , major browser companies have made it clear that they would support this protocol only over a pki secured tls connection . web browser implementation of http/2 including chrome , firefox , opera , and edge supports http/2 only over tls by using alpn extension of tls protocol . this would mean that , to get the speed benefits of http/2 , website owners would be forced to purchase ssl certificates controlled by corporations . currently the majority of web browsers are shipped with pre-installed intermediate certificates issued and signed by a certificate authority , by public keys certified by a so-called root certificates . this means browsers need to carry a large number of different certificate providers , increasing the risk of a key compromise . when a key is known to be compromised , it could be fixed by revoking the certificate , but such a compromise is not easily detectable and can be a huge security breach . browsers have to issue a security patch to revoke intermediary certificates issued by a compromised root certificate authority . . see also . certificate-less authenticated encryption crypto-agility