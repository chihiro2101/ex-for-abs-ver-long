Cut, copy, and paste

history . origins . the term '' cut and paste '' comes from the traditional practice in manuscript-editings whereby people would cut paragraphs from a page with scissors and paste them onto another page . this practice remained standard into the 1980s . stationery stores formerly sold '' editing scissors '' with blades long enough to cut an 8½ '' -wide page . the advent of photocopiers made the practice easier and more flexible . the act of copying/transferring text from one part of a computer-based document ( '' buffer '' ) to a different location within the same or different computer-based document was a part of the earliest on-line computer editors . as soon as computer data entry moved from punch-cards to online files ( in the mid/late 1960s ) there were '' commands '' for accomplishing this operation . this mechanism was often used to transfer frequently-used commands or text snippets from additional buffers into the document , as was the case with the qed text editor . , p . 793 . . early methods . the earliest editors ( designed for teleprinter terminals ) provided keyboard commands to delineate a contiguous region of text , then delete or move it . since moving a region of text requires first removing it from its initial location and then inserting it into its new location , various schemes had to be invented to allow for this multi-step process to be specified by the user . often this was done with a '' move '' command , but some text editors required that the text be first put into some temporary location for later retrieval/placement . in 1983 , the apple lisa became the first text editing system to call that temporary location '' the clipboard '' . earlier control schemes such as nls used a word order command structure , where the command name was provided first and the object to be copied or moved was second . the inversion from verb—object to object—verb on which copy and paste are based , where the user selects the object to be operated before initiating the operation , was an innovation crucial for the success of the desktop metaphor as it allowed copy and move operations based on direct manipulation . many command line text editors , which predate their more popular gui equivalents , including : ed , emacs , sed , and vi , have copy-paste features . popularization . inspired by early line and character editors that broke a move or copy operation into two steps—between which the user could invoke a preparatory action such as navigation—larry tesler proposed the names '' cut '' and '' copy '' for the first step and '' paste '' for the second step . beginning in 1974 , he and colleagues at xerox parc implemented several text editors that used cut/copy-and-paste commands to move/copy text . apple computer widely popularized the computer-based cut/copy-and-paste paradigm through the lisa ( 1983 ) and macintosh ( 1984 ) operating systems and applications . apple mapped the functionalities to key combinations consisting of the command key ( a special modifier key ) held down while typing the letters x ( for cut ) , c ( for copy ) , and v ( for paste ) , choosing a handful of keyboard shortcuts to control basic editing operations . the keys involved all cluster together at the left end of the bottom row of the standard qwerty keyboard , and each key is combined with a special modifier key to perform the desired operation : z to undo x to cut c to copy v to paste the ibm common user access ( cua ) standard also uses combinations of the insert , del , shift and control keys . early versions of windows used the ibm standard . microsoft later also adopted the apple key combinations with the introduction of windows , using the control key as modifier key . for users migrating to windows from ms-dos this was a big change as ms-dos users used the '' copy '' and '' move '' commands . similar patterns of key combinations , later borrowed by others , remain widely available in most gui text editors , word processors , and file system browsers . the original copy/cut/paste workflow , as implemented at parc , utilized a unique workflow : with two windows on the same screen , the user could use the mouse to pick a point at which to make an insertion in one window ( or a segment of text to replace ) . then , by holding shift and selecting the copy source elsewhere on the same screen , the copy would be made as soon as the shift was released . similarly , holding shift and control would copy and cut ( delete ) the source . this workflow requires many fewer keystrokes/mouse clicks than the current multi-step workflows , and did not require an explicit copy buffer . it was dropped , one presumes , because the original apple and ibm guis were not high enough density to permit multiple windows , as were the parc machines , and so multiple simultaneous windows were rarely used . cut and paste . computer-based editing can involve very frequent use of cut-and-paste operations . most software-suppliers provide several methods for performing such tasks , and this can involve ( for example ) key combinations , pulldown menus , pop-up menus , or toolbar buttons . the user selects or '' highlights '' the text or file for moving by some method , typically by dragging over the text or file name with the pointing-device or holding down the shift key while using the arrow keys to move the text cursor . the user performs a '' cut '' operation via key combination for macintosh users ) , menu , or other means . visibly , '' cut '' text immediately disappears from its location . '' cut '' files typically change color to indicate that they will be moved . conceptually , the text has now moved to a location often called the clipboard . the clipboard typically remains invisible . on most systems only one clipboard location exists , hence another cut or copy operation overwrites the previously stored information . many unix text-editors provide multiple clipboard entries , as do some macintosh programs such as clipboard master , and windows clipboard manager programs such as the one in microsoft office . the user selects a location for insertion by some method , typically by clicking at the desired insertion point . a paste operation takes place which visibly inserts the clipboard text at the insertion point . ( the paste operation does not typically destroy the clipboard text : it remains available in the clipboard and the user can insert additional copies at other points ) . whereas cut-and-paste often takes place with a mouse-equivalent in windows-like gui environments , it may also occur entirely from the keyboard , especially in unix text editors , such as pico or vi . cutting and pasting without a mouse can involve a selection ( for which is pressed in most graphical systems ) or the entire current line , but it may also involve text after the cursor until the end of the line and other more sophisticated operations . when a software environment provides cut and paste functionality , a nondestructive operation called copy usually accompanies them ; copy places a copy of the selected text in the clipboard without removing it from its original location . the clipboard usually stays invisible , because the operations of cutting and pasting , while actually independent , usually take place in quick succession , and the user ( usually ) needs no assistance in understanding the operation or maintaining mental context . some application programs provide a means of viewing , or sometimes even editing , the data on the clipboard . copy and paste . the term '' copy-and-paste '' refers to the popular , simple method of reproducing text or other data from a source to a destination . it differs from cut and paste in that the original source text or data does not get deleted or removed . the popularity of this method stems from its simplicity and the ease with which users can move data between various applications visually – without resorting to disk storage . once one has copied data into the clipboard , one may paste the contents of the clipboard into a destination document . the x window system maintains an additional clipboard containing the most recently selected text ; middle-clicking pastes the content of this '' selection '' clipboard into whatever the pointer is on at that time . most terminal emulators and some other applications support the key combinations ctrl-insert to copy and shift-insert to paste . this is in accordance with the ibm common user access ( cua ) standard . for similar functionality in historical text-mode terminals in unix systems such as linux and freebsd , see gpm or moused . find and go . the nextstep operating system extended the concept of having a single copy buffer by adding a second system-wide used for searching . the find buffer is also available in macos . text can be placed in the find buffer by either using the find panel or by selecting text and hitting . the text can then be searched with find next and find previous . the functionality comes in handy when for example editing source code . to find the occurrence of a variable or function name elsewhere in the file , simply select the name by double clicking , hit and then jump to the next or previous occurrence with / . note that this does not destroy your copy buffer as with other uis like windows or the x window system . together with copy and paste this can be used for quick and easy replacement of repeated text : select the text that you want to replace ( i.e . by double clicking ) put the text in the find buffer with overwrite the selected text with your replacement text select the replacement text ( try to avoid lifting your hands from the keyboard ) copy the replacement text find the next or previous occurrence / paste the replacement text repeat the last two steps as often as needed or in short : select , replstr , , , , , , . while this might sound a bit complicated at first , it is often much faster than using the find panel , especial when only a few occurrences shall be replaced or when only some of the occurrences shall be replaced . when a text shall not be replaced , simply hit again to skip to the next occurrence . the find buffer is system wide . that is , if you enter a text in the find panel ( or with in one application and then switch to another application you can immediately start searching without having to enter the search text again . common keyboard shortcuts . copy and paste automation . copying data one by one from one application to another , such as from excel to a web form , might involve a lot of manual work . copy and paste can be automated with the help of a program that would iterate through the values list and paste them to the active window ( computing ) . such programs might come in the form of macros or dedicated programs which involve more or less scripting . alternatively , applications supporting simultaneous editing may be used to copy or move collections of items . additional differences between moving and copying . in a spreadsheet , moving ( cut and paste ) need not equate to copying ( copy and paste ) and then deleting the original : when moving , references to the moved cells may move accordingly . windows explorer also differentiates moving from merely copy-and-delete : a '' cut '' file will not actually disappear until pasted elsewhere and can not be pasted more than once . the icon fades to show the transient '' cut '' state until it is pasted somewhere . cutting a second file while the first one is cut will release the first from the '' cut '' state and leave it unchanged . shift+delete can not be used to cut files ; instead it deletes them without using the recycle bin . multiple clipboards . several editors allow copying text into or pasting text from specific clipboards , typically using a special keystroke-sequence to specify a particular clipboard-number . clipboard managers can be very convenient productivity-enhancers by providing many more features than system-native clipboards . thousands of clips from the clip history are available for future pasting , and can be searched , edited , or deleted . favorite clips that a user frequently pastes ( for example , the current date , or the various fields of a user 's contact info ) can be kept standing ready to be pasted with a few clicks or keystrokes . similarly , a kill ring provides a lifo stack used for cut-and-paste operations as a type of clipboard capable of storing multiple pieces of data . for example , the gnu emacs text editor provides a kill ring . each time a user performs a cut or copy operation , the system adds the affected text to the ring . the user can then access the contents of a specific ( relatively numbered ) buffer in the ring when performing a subsequent paste-operation . one can also give kill-buffers individual names , thus providing another form of multiple-clipboard functionality . pejorative use of expression . an action can be described as '' cut/copy-and-paste '' in a pejorative sense , to mean that a person creating some item has , in fact , merely copied from a previously existing item . examples may include film screenplays , books , and other creative endeavors that appear to '' lift '' their content substantially from existing sources , and papers submitted for examinations which are directly copied from other reference sources . use in healthcare . concerns exist over the use of copy and paste functions in healthcare documentation and electronic health records . there is potential for the introduction of errors , information overload , and fraud . . use in software development . copy and paste programming is an anti-pattern arising from the careless pasting of pre-existing code into another source code file . shared interfaces ( '' abstract classes '' ) with the same named methods should be exposed , and each module should subclass the interface to provide needed differences in functionality . use on websites . web users copy on website different things for different reasons , including words and phrases to look up elsewhere , key sentences for use in citations and text summaries , and programming code fragments for use in software development . tracking and recording copy operations of users and using that data as implicit user feedback on the website content can be beneficial in a wide range of applications and uses , including in automatic summarization , and in text simplification .