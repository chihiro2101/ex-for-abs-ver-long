TI Advanced Scientific Computer

history . ti began as a division of geophysical service incorporated ( gsi ) , a company that performed seismic surveys for oil exploration companies . gsi was now a subsidiary of ti , and ti wanted to apply the latest computer technology to the processing and analysis of seismic datasets . the asc project started as the advanced seismic computer . as the project developed , ti decided to expand its scope . '' seismic '' was replaced by '' scientific '' in the name , allowing the project to retain the designation asc . originally the software , including an operating system and a fortran compiler , were done under contract by computer usage company , under direction of george r . trimble , jr . but later taken over by ti itself . southern methodist university in dallas developed an algol compiler for the asc . architecture . the asc was based around a single high-speed shared memory , which was accessed by the cpu and eight i/o channel controllers , in an organization similar to seymour cray 's groundbreaking cdc 6600 . memory was accessed solely under the control of the memory control unit ( mcu ) . the mcu was a two-way , 256-bit per channel parallel network that could support up to eight independent processors , with a ninth channel for accessing '' main memory '' ( referred to as '' extended memory '' ) . the mcu also acted as a cache controller , offering high-speed access to a semiconductor-based memory for the eight processor ports , and handling all communications to the 24-bit address space in main memory . the mcu was designed to operate asynchronously , allowing it to work at a variety of speeds and scale across a number of performance points . for instance , main memory could be constructed out of slower but less expensive core memory , although this was not used in practice . at the fastest , it could sustain transfer rates of 80 million 32-bit words per second per port , for a total transfer rate of 640 million words per second . this was well beyond the capabilities of even the fastest memories of the era . the cpu had a 60 & nbsp ; ns clock cycle ( 16.67 & nbsp ; mhz clock frequency ) and its logic was built from 20-gate emitter-coupled logic integrated circuits originally developed by ti for the illiac iv supercomputer . the cpu had an extremely advanced architecture and organization for its era , supporting microcoded arithmetic and mathematical instructions that operated on scalars , vectors , or matrices . the vector processing facilities had a memory-to-memory architecture ; where the vector operands were read from , and the resulting vector written to , memory . the cpu could be have one , two , or four vector lanes , allowing the cpu to produce one to four vector results every cycle , depending on the number of vector lanes installed . the vector lanes were also used for scalar instructions , and each lane could keep up to 12 scalar instructions in-flight simultaneously . the cpu , with four lanes , allowed up to 36 instructions in total across the entire cpu . the processor had forty-eight 32-bit registers , a huge number for the time . 16 of the registers were used for addressing , 16 for scalar operations , 8 for index offsets , and 8 for specifying the various parameters for vector instructions . data was moved between the registers and memory by load/store instructions , which could transfer from 4â€“64 & nbsp ; bits ( two registers ) at a time . most vector processors tended to be memory bandwidth-limited , that is , they could process data faster than they could get it from memory . this remains a major problem on modern simd designs as well , which is why considerable effort has been put into increasing memory throughput in modern computer designs ( although largely unsuccessfully ) . in the asc this was improved somewhat with a lookahead unit that predicted upcoming memory accesses and loaded them into the scalar registers invisibly , using a memory interface in the cpu called the memory buffer unit ( mbu ) . the '' peripheral processor '' was a separate system dedicated entirely to quickly running the operating system and programs running within it , as well as feeding data to the cpu . the pp was built out of eight '' virtual processors '' ( vps ) , which were designed to handle instructions and basic integer arithmetic only . each vp had its own program counter and registers , and the system could thus run eight programs at the same time , limited only by memory accesses . keeping eight programs running allowed the system to shuffle execution of programs on the cpu depending on what data was available on the memory bus at that time , minimizing '' dead time '' where the cpu had to wait for data from the memory . the pp also included a set of sixty-four 32-bit communications registers ( crs ) . the crs stored the state required for communication between the various parts of the asc : the cpu , vps , and channel controllers . the asc instruction set include a bit-reverse instruction that was intended to speed up the calculation of fast fourier transforms ( ffts ) . by the time the asc was in production , better fft algorithms had been developed that did not require this operation . ti offered a bounty to the first person to come up with a valid use for this instruction , but was never collected . market reception . when asc machines first became available in the early 1970s , they outperformed almost all other machines , including the cdc star-100 , and under certain conditions matched that of the one-off illiac iv . however , only seven had been installed when the cray-1 was announced in 1975 . the cray-1 dedicated almost all of its design to sustained high-speed access to memory , including over one million 64-bit words of semiconductor memory and a cycle time that was one-fifth that of the asc ( 12.5 & nbsp ; ns ) . although the asc was in some ways a more expandable design , in the supercomputer market speed is preferred , and the cray-1 was much faster . asc sales ended almost overnight , and although an upgraded asc had been designed with a cycle time one-fifth that of the original , texas instruments decided to exit the market . vector processing applications . the asc 1 prototype was a one pipe system and brought up in austin , texas , off site from ti 's main plant for proprietary information reasons . it was later upgraded to two pipes and renamed as asc 1a . it was then used by ti 's gsi division for seismic data processing . asc 2 was leased to shell oil company in the netherlands and also used for seismic data processing . asc 3 was installed at the redstone arsenal in huntsville , alabama , for anti ballistic missile interception technology development . with the salt treaty , the system was later redeployed to the army corps of engineers in vicksburg , mississippi , for dam stress analysis . asc 4 was used by noaa at princeton university for developing weather forecasting models . asc systems 5 and 6 were installed at ti 's main plant in austin and also used by gsi for seismic data processing . asc 7 went to the naval research lab in washington , d.c . for plasma physics studies . references . peter m . kogge ( 1981 ) . the architecture of pipelined computers . taylor & francis . pp . & nbsp ; 159 & ndash ; 162 . external links . the ti asc : a highly modular and flexible super computer architecture ti asc documentation at bitsavers.org