SPICE

introduction . unlike board-level designs composed of discrete parts , it is not practical to breadboard integrated circuits before manufacture . further , the high costs of photomask and other manufacturing prerequisites make it essential to design the circuit to be as close to perfect as possible before the integrated circuit is first built . simulating the circuit with spice is the industry-standard way to verify circuit operation at the transistor level before committing to manufacturing an integrated circuit . board-level circuit designs can often be breadboarded for testing . even with a breadboard , some circuit properties may not be accurate compared to the final printed wiring board , such as parasitic resistances and capacitances . these parasitic components can often be estimated more accurately using spice simulation . also , designers may want more information about the circuit than is available from a single mock-up . for instance , circuit performance is affected by component manufacturing tolerances . in these cases it is common to use spice to perform monte carlo simulations of the effect of component variations on performance , a task which is impractical using calculations by hand for a circuit of any appreciable complexity . circuit simulation programs , of which spice and derivatives are the most prominent , take a text netlist describing the circuit elements ( transistors , resistors , capacitors , etc . ) and their connections , and translate this description into equations to be solved . the general equations produced are nonlinear differential algebraic equations which are solved using implicit integration methods , newton 's method and sparse matrix techniques . origins . spice was developed at the electronics research laboratory of the university of california , berkeley by laurence nagel with direction from his research advisor , prof . donald pederson . spice1 is largely a derivative of the cancer program , which nagel had worked on under prof . ronald rohrer . cancer is an acronym for '' computer analysis of nonlinear circuits , excluding radiation '' , a hint to berkeley 's liberalism in the 1960s : life of spice at these times many circuit simulators were developed under contracts with the united states department of defense that required the capability to evaluate the radiation hardness of a circuit . when nagel 's original advisor , prof . rohrer , left berkeley , prof . pederson became his advisor . pederson insisted that cancer , a proprietary program , be rewritten enough that restrictions could be removed and the program could be put in the public domain . spice1 was first presented at a conference in 1973 . 2nd spice1 ref spice1 is coded in fortran and uses nodal analysis to construct the circuit equations . nodal analysis has limitations in representing inductors , floating voltage sources and the various forms of controlled sources . spice1 has relatively few circuit elements available and uses a fixed-timestep transient analysis . the real popularity of spice started with spice2 2nd spice2 ref in 1975 . spice2 , also coded in fortran , is a much-improved program with more circuit elements , variable timestep transient analysis using either the trapezoidal ( second order adams-moulton method ) or the gear integration method ( also known as bdf ) , equation formulation via modified nodal analysis ( avoiding the limitations of nodal analysis ) , and an innovative fortran-based memory allocation system developed by another graduate student , ellis cohen . the last fortran version of spice is 2g.6 in 1983 . spice3 quarles , thomas l . , analysis of performance and convergence issues for circuit simulation , memorandum no . ucb/erl m89/42 , university of california , berkeley , april 1989 . was developed by thomas quarles ( with a . richard newton as advisor ) in 1989 . it is written in c , uses the same netlist syntax , and added x window system plotting . as an early public domain software program with source code available , history-of-spice on allaboutcircuits.com . '' the origin of spice traces back to another circuit simulation program called cancer . developed by professor ronald rohrer of u.c . berkeley along with some of his students in the late 1960s , cancer continued to be improved through the early 1970s . when rohrer left berkeley , cancer was re-written and re-named to spice , released as version 1 to the public domain in may of 1972 . version 2 of spice was released in 1975 ( version 2g6—the version used in this book—is a minor revision of this 1975 release ) . instrumental in the decision to release spice as a public-domain computer program was professor donald pederson of berkeley , who believed that all significant technical progress happens when information is freely shared . i for one thank him for his vision . '' spice was widely distributed and used . its ubiquity became such that '' to spice a circuit '' remains synonymous with circuit simulation . spice source code was from the beginning distributed by uc berkeley for a nominal charge ( to cover the cost of magnetic tape ) . the license originally included distribution restrictions for countries not considered friendly to the us , but the source code is currently covered by the bsd license . the birth of spice was named an ieee milestone in 2011 ; the entry mentions that spice '' evolved to become the worldwide standard integrated circuit simulator '' . nagel was awarded the 2019 ieee donald o . pederson award in solid-state circuits for the development of spice . donald o . pederson solid-state circuits award , ieee solid-state circuits society , june 2018 . successors . open-source successors . no newer versions of berkeley spice have been released after version 3f.5 in 1993 . since then , the open-source or academic continuations of spice include : xspice , code-level modeling in xspice , f . l . cox e.a . , proceedings ieee international symposium on circuits and systems , 1992 ( iscas 92 ) , vol . 2 , pp . 871-874 , 10–13 may 1992 developed at georgia tech , which added mixed analog/digital '' code models '' for behavioral simulation ; cider codecs : a mixed-level circuit and device simulator , k . mayaram , memorandum no . ucb/erl m88/71 , berkeley , 1988 , ( previously codecs ) , developed by uc berkeley and oregon state university , which added semiconductor device modeling ; spice opus , developed and maintained by the university of ljubljana based on spice 3f.4 and on xspice ; and ngspice , based on spice 3f.5 , xspice and cider . '' ngspice , current status and future developments '' , h . vogt , fosdem , brussels 2019 . commercial versions and spinoffs . berkeley spice inspired and served as a basis for many other circuit simulation programs , in academia , in industry , and in commercial products . the first commercial version of spice is ispice , vladimirescu , andrei , spice – the third decade , proc . 1990 ieee bipolar circuits and technology meeting , minneapolis , september 1990 , pp . 96–101 an interactive version on a timeshare service , national css . the most prominent commercial versions of spice include hspice ( originally commercialized by ashawna hailey of meta software , but now owned by synopsys ) and pspice ( now owned by cadence design systems ) . the integrated circuit industry adopted spice quickly , and until commercial versions became well developed many ic design houses had proprietary versions of spice . k . s . kundert , the designer 's guide to spice and spectre , kluwer . academic publishers , boston , 1995 today a few ic manufacturers , typically the larger companies , have groups continuing to develop spice-based circuit simulation programs . among these are adice at analog devices , ltspice at analog devices ( available to the public as freeware ) , mica at freescale semiconductor , and tina-ti spice-based analog simulation program - tina-ti - ti software folder at texas instruments . both ltspice and tina-ti come bundled with models from their respective company . analog devices offers a similar free tool called adisimpe ( based on the simetrix/simplis simertrix/simplis implementation of spice ) . other companies maintain internal circuit simulators which are not directly based upon spice , among them powerspice at ibm , titan at infineon technologies , lynx at intel corporation , and pstar at nxp semiconductor . program features and structure . spice became popular because it contained the analyses and models needed to design integrated circuits of the time , and was robust enough and fast enough to be practical to use . nagel , l . , is it time for spice4 ? , 2004 numerical aspects of device and circuit modeling workshop , june 23–25 , 2004 , santa fe , new mexico . retrieved on 2007-11-10 precursors to spice often had a single purpose : the bias program , for example , did simulation of bipolar transistor circuit operating points ; the slic program did only small-signal analyses . spice combined operating point solutions , transient analysis , and various small-signal analyses with the circuit elements and device models needed to successfully simulate many circuits . analyses . spice2 includes these analyses : ac analysis ( linear small-signal frequency domain analysis ) dc analysis ( nonlinear quiescent point calculation ) dc transfer curve analysis ( a sequence of nonlinear operating points calculated while sweeping an input voltage or current , or a circuit parameter ) noise analysis ( a small signal analysis done using an adjoint matrix technique which sums uncorrelated noise currents at a chosen output point ) transfer function analysis ( a small-signal input/output gain and impedance calculation ) transient analysis ( time-domain large-signal solution of nonlinear differential algebraic equations ) since spice is generally used to model nonlinear circuits , the small signal analyses are necessarily preceded by a quiescent point calculation at which the circuit is linearized . spice2 also contains code for other small-signal analyses : sensitivity analysis , pole–zero plot , and small-signal distortion analysis . analysis at various temperatures is done by automatically updating semiconductor model parameters for temperature , allowing the circuit to be simulated at temperature extremes . other circuit simulators have since added many analyses beyond those in spice2 to address changing industry requirements . parametric sweeps were added to analyze circuit performance with changing manufacturing tolerances or operating conditions . loop gain and stability calculations were added for analog circuits . harmonic balance or time-domain steady state analyses were added for rf and switched-capacitor circuit design . however , a public-domain circuit simulator containing the modern analyses and features needed to become a successor in popularity to spice has not yet emerged . it is very important to use appropriate analyses with carefully chosen parameters . for example , application of linear analysis to nonlinear circuits should be justified separately . also , application of transient analysis with default simulation parameters can lead to qualitatively wrong conclusions on circuit dynamics . . device models . spice2 includes many semiconductor device compact models : three levels of mosfet model , a combined ebers–moll and gummel–poon model , a jfet model , and a model for a diode . in addition , it had many other elements : resistors , capacitors , inductors ( including coupling ) , independent voltage and current sources , ideal transmission lines , active components and voltage and current controlled sources . spice3 added more sophisticated mosfet models , which were required due to advances in semiconductor technology . in particular , the bsim family of models were added , which were also developed at uc berkeley . commercial and industrial spice simulators have added many other device models as technology advanced and earlier models became inadequate . to attempt standardization of these models so that a set of model parameters may be used in different simulators , an industry working group was formed , the compact model council , to choose , maintain and promote the use of standard models . the standard models today include bsim3 , bsim4 , bsimsoi , psp , hicum , and mextram . exclusion for integrated photonic circuits . traditional photonic device simulators apply direct methods to solve maxwell 's equations for the complete structure , whereas photonic circuit simulators are based on a segmentation into logic block ( bbs ) , each of which is represented at a logic level by a photonic device , '' coupled to other bbs by guided modes of optical waveguides '' . at the circuit-level modeling , a photonic integrated circuit ( pic ) contain both electrical wires and optical signals , respectively described by voltage/current and by complex-valued envelope for the forward- and backward-propagating modes . the building block netlist of both the photonic and electronic circuits , including their net and port connections , can be expressed in a spice format with some schematic editors , like the ones used for electronic design automation . to reproduce the complete photonic signal information , without losing eventual optical phenomena , it is needed the real-time waveform of both the electric and the magnetic field for every mode or polarization in the waveguide . while spice works with femtosecond time steps , timescale datacommunications of ≈10–100 picosecond are common . to make the amount of information tractable , the modulation increases of complexity , having to encode both amplitude and phase , in a way similar as in the simulation of rf circuits . however , photonic integrated circuit simulators need to test multiple communication channels in match with different carrier frequencies , or equivalently more amplitudes in any single channel , a type of sophisticated signal that is unsupported on the program features and structure as described above . at 2019 , spice can not be used to '' simulate photonics and electronics together in a photonic circuit simulator '' , and thus it is not yet considered as a test simulator for photonic integrated circuits . input and output : netlists , schematic capture and plotting . spice2 takes a text netlist as input and produces line-printer listings as output , which fits with the computing environment in 1975 . these listings are either columns of numbers corresponding to calculated outputs ( typically voltages or currents ) , or line-printer ascii art . spice3 retaines the netlist for circuit description , but allows analyses to be controlled from a command-line interface similar to the c shell . spice3 also added basic x plotting , as unix and engineering workstations became common . vendors and various free software projects have added schematic capture front-ends to spice , allowing a schematic diagram of the circuit to be drawn and the netlist to be automatically generated . also , graphical user interfaces were added for selecting the simulations to be done and manipulating the voltage and current output vectors . in addition , very capable graphing utilities have been added to see waveforms and graphs of parametric dependencies . several free versions of these extended programs are available , some as introductory pspice , and some linear technology . transient analysis . since transient analysis is dependent on time , it uses different analysis algorithms , control options with different convergence-related issues and different initialization parameters than dc analysis . however , since a transient analysis first performs a dc operating point analysis ( unless the uic option is specified in the . tran statement ) , most of the dc analysis algorithms , control options , and initialization and convergence issues apply to transient analysis . initial conditions for transient analysis . some circuits , such as oscillators or circuits with feedback , do not have stable operating point solutions . for these circuits , either the feedback loop must be broken so that a dc operating point can be calculated or the initial conditions must be provided in the simulation input . the dc operating point analysis is bypassed if the uic parameter is included in the . tran statement . if uic is included in the . tran statement , a transient analysis is started using node voltages specified in an . ic statement . if a node is set to 5 v in a . ic statement , the value at that node for the first time point ( time 0 ) is 5 v . you can use the . op statement to store an estimate of the dc operating point during a transient analysis . . tran 1ns 100ns uic . op 20ns the . tran statement uic parameter in the above example bypasses the initial dc operating point analysis . the . op statement calculates transient operating point at t 20 ns during the transient analysis . although a transient analysis might provide a convergent dc solution , the transient analysis itself can still fail to converge . in a transient analysis , the error message '' internal timestep too small '' indicates that the circuit failed to converge . the convergence failure might be due to stated initial conditions that are not close enough to the actual dc operating point values . see also . comparison of eda software list of free electronics circuit simulators input output buffer information specification ( ibis ) transistor models