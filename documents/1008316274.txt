PIC microcontrollers

history . original concept . thumb the original pic was intended to be used with general instrument 's new cp1600 16-bit central processing unit ( cpu ) . the cp1600 was a powerful processor for its era , implementing most of the pdp-11 minicomputer 's instruction set architecture in a microcomputer package . whilst most people considered the cp1600 a good cpu , it had one significant problem ; to reduce pin count of its physical dip packaging , the address bus and data bus shared pins . for cpus that had separate i/o channels , like the intel 8008 , this would not have been a problem , but the 1600 also used the pdp-11 's memory-mapped i/o concept . this meant that communicating with a device required the device to watch for key memory locations being accessed on one machine cycle , and then read the data on the next . this made i/o on the machine slower as the bus alternated between address and data modes , and more expensive to implement as the devices had to latch inputs over multiple cycles . all of this complexity was repeated on the cpu side in the corresponding device driver . to address this shortcoming of the 1600 , the 8-bit pic was developed in 1975 . the idea was that a system would have one or more of the low-cost pics performing the actual i/o with the devices , and then sending that data to the cpu . the pic used simple microcode stored in rom to perform its tasks , and although the term risc was not used at the time , it shares some common features with risc designs . after the 1600 . in 1985 , general instrument sold their microelectronics division and the new owners cancelled almost everything which by this time was mostly out-of-date . the pic , however , was upgraded with an internal eprom to produce a programmable channel i/o . at the same time plessey in the uk released nmos processors numbered pic1650 and pic1655 based on the gi design , using the same instruction sets , either user mask programmable or versions pre-programed for auto-diallers and keyboard interfaces . plessey satellite cable tv integrated circuit handbook may 1986 in 1998 microchip introduced the pic 16f84 , a flash programmable and erasable version of its successful serial programmable pic16c84 . in 2001 , microchip introduced more flash programmable devices , with full production commencing in 2002 . today , a huge variety of pics are available with various on-board peripherals ( serial communication modules , uarts , motor control kernels , etc . ) and program memory from 256 words to 64k words and more ( a '' word '' is one assembly language instruction , varying in length from 8 to 16 bits , depending on the specific pic micro family ) . pic and picmicro are now registered trademarks of microchip technology . it is generally thought that pic stands for peripheral interface controller , although general instruments ' original acronym for the initial pic1640 and pic1650 devices was '' programmable interface controller '' . the acronym was quickly replaced with '' programmable intelligent computer '' . the microchip 16c84 ( pic16x84 ) , introduced in 1993 , was the first microchip cpu with on-chip eeprom memory . by 2013 , microchip was shipping over one billion pic microcontrollers every year . . device families . pic micro chips are designed with a harvard architecture , and are offered in various device families . the baseline and mid-range families use 8-bit wide data memory , and the high-end families use 16-bit data memory . the latest series , pic32mz is a 32-bit mips-based microcontroller . instruction words are in sizes of 12-bit ( pic10 and pic12 ) , 14-bit ( pic16 ) and 24-bit ( pic24 and dspic ) . the binary representations of the machine instructions vary by family and are shown in pic instruction listings . within these families , devices may be designated picnncxxx ( cmos ) or picnnfxxx ( flash ) . '' c '' devices are generally classified as '' not suitable for new development '' ( not actively promoted by microchip ) . the program memory of '' c '' devices is variously described as otp , rom , or eeprom . as of october 2016 , the only otp product classified as '' in production '' is the pic16hv540 . '' c '' devices with quartz windows ( for erasure ) , are in general no longer available . pic10 and pic12 . these devices feature a 12-bit wide code memory , a 32-byte register file , and a tiny two level deep call stack . they are represented by the pic10 series , as well as by some pic12 and pic16 devices . baseline devices are available in 6-pin to 40-pin packages . generally the first 7 to 9 bytes of the register file are special-purpose registers , and the remaining bytes are general purpose ram . pointers are implemented using a register pair : after writing an address to the fsr ( file select register ) , the indf ( indirect f ) register becomes an alias for the addressed register . if banked ram is implemented , the bank number is selected by the high 3 bits of the fsr . this affects register numbers 16–31 ; registers 0–15 are global and not affected by the bank select bits . because of the very limited register space ( 5 bits ) , 4 rarely read registers were not assigned addresses , but written by special instructions ( option and tris ) . the rom address space is 512 words ( 12 bits each ) , which may be extended to 2048 words by banking . call and goto instructions specify the low 9 bits of the new code location ; additional high-order bits are taken from the status register . note that a call instruction only includes 8 bits of address , and may only specify addresses in the first half of each 512-word page . lookup tables are implemented using a computed goto ( assignment to pcl register ) into a table of retlw instructions . this '' baseline core '' does not support interrupts ; all i/o must be polled . there are some '' enhanced baseline '' variants with interrupt support and a four-level call stack . pic10f32x devices feature a mid-range 14-bit wide code memory of 256 or 512 words , a 64-byte sram register file , and an 8-level deep hardware stack . these devices are available in 6-pin smd and 8-pin dip packages ( with two pins unused ) . one input only and three i/o pins are available . a complex set of interrupts are available . clocks are an internal calibrated high-frequency oscillator of 16 & nbsp ; mhz with a choice of selectable speeds via software and a 31 & nbsp ; khz low-power source . pic16 . these devices feature a 14-bit wide code memory , and an improved 8-level deep call stack . the instruction set differs very little from the baseline devices , but the two additional opcode bits allow 128 registers and 2048 words of code to be directly addressed . there are a few additional miscellaneous instructions , and two additional 8-bit literal instructions , add and subtract . the mid-range core is available in the majority of devices labeled pic12 and pic16 . the first 32 bytes of the register space are allocated to special-purpose registers ; the remaining 96 bytes are used for general-purpose ram . if banked ram is used , the high 16 registers ( 0x70–0x7f ) are global , as are a few of the most important special-purpose registers , including the status register which holds the ram bank select bits . ( the other global registers are fsr and indf , the low 8 bits of the program counter pcl , the pc high preload register pclath , and the master interrupt control register intcon . ) the pclath register supplies high-order instruction address bits when the 8 bits supplied by a write to the pcl register , or the 11 bits supplied by a goto or call instruction , is not sufficient to address the available rom space . pic17 . the 17 series never became popular and has been superseded by the pic18 architecture ( however , see clones below ) . the 17 series is not recommended for new designs , and availability may be limited to users . improvements over earlier cores are 16-bit wide opcodes ( allowing many new instructions ) , and a 16-level deep call stack . pic17 devices were produced in packages from 40 to 68 pins . the 17 series introduced a number of important new features : a memory mapped accumulator read access to code memory ( table reads ) direct register to register moves ( prior cores needed to move registers through the accumulator ) an external program memory interface to expand the code space an 8-bit × 8-bit hardware multiplier a second indirect register pair auto-increment/decrement addressing controlled by control bits in a status register ( alusta ) a significant limitation was that ram space was limited to 256 bytes ( 26 bytes of special function registers , and 232 bytes of general-purpose ram ) , with awkward bank-switching in the models that supported more . pic18 . in 2000 , microchip introduced the pic18 architecture . unlike the 17 series , it has proven to be very popular , with a large number of device variants presently in manufacture . in contrast to earlier devices , which were more often than not programmed in assembly , c has become the predominant development language . the 18 series inherits most of the features and instructions of the 17 series , while adding a number of important new features : call stack is 21 bits wide and much deeper ( 31 levels deep ) the call stack may be read and written ( tosu : tosh : tosl registers ) conditional branch instructions indexed addressing mode ( plusw ) extending the fsr registers to 12 bits , allowing them to linearly address the entire data address space the addition of another fsr register ( bringing the number up to 3 ) the ram space is 12 & nbsp ; bits , addressed using a 4-bit bank select register and an 8-bit offset in each instruction . an additional '' access '' bit in each instruction selects between bank 0 ( a 0 ) and the bank selected by the bsr ( a 1 ) . a 1-level stack is also available for the status , wreg and bsr registers . they are saved on every interrupt , and may be restored on return . if interrupts are disabled , they may also be used on subroutine call/return by setting the s bit ( appending '' , fast '' to the instruction ) . the auto increment/decrement feature was improved by removing the control bits and adding four new indirect registers per fsr . depending on which indirect file register is being accessed it is possible to postdecrement , postincrement , or preincrement fsr ; or form the effective address by adding w to fsr . in more advanced pic18 devices , an '' extended mode '' is available which makes the addressing even more favorable to compiled code : a new offset addressing mode ; some addresses which were relative to the access bank are now interpreted relative to the fsr2 register the addition of several new instructions , notable for manipulating the fsr registers . pic18 devices are still developed ( 2017 ) and fitted with cip ( core independent peripherals ) . pic24 and dspic . in 2001 , microchip introduced the dspic series of chips , which entered mass production in late 2004 . they are microchip 's first inherently 16-bit microcontrollers . pic24 devices are designed as general purpose microcontrollers . dspic devices include digital signal processing capabilities in addition . although still similar to earlier pic architectures , there are significant enhancements : all registers are 16 bits wide program counter is 22 bits ( bits 22:1 ; bit 0 is always 0 ) instructions are 24 bits wide data address space expanded to 64 & nbsp ; kib first 2 & nbsp ; kib is reserved for peripheral control registers data bank switching is not required unless ram exceeds 62 & nbsp ; kib '' f operand '' direct addressing extended to 13 bits ( 8 & nbsp ; kib ) 16 w registers available for register-register operations . ( but operations on f operands always reference w0 . ) instructions come in byte and ( 16-bit ) word forms stack is in ram ( with w15 as stack pointer ) ; there is no hardware stack w14 is the frame pointer data stored in rom may be accessed directly ( '' program space visibility '' ) vectored interrupts for different interrupt sources some features are : ( 16×16 ) -bit single-cycle multiplication and other digital signal processing operations hardware multiply–accumulate ( mac ) hardware divide assist ( 19 cycles for 32/16-bit divide ) barrel shifter - for both accumulators and general purpose registers bit reversal hardware support for loop indexing peripheral direct memory access dspics can be programmed in c using microchip 's xc16 compiler ( formerly called c30 ) which is a variant of gcc . instruction rom is 24 bits wide . software can access rom in 16-bit words , where even words hold the least significant 16 bits of each instruction , and odd words hold the most significant 8 bits . the high half of odd words reads as zero . the program counter is 23 bits wide , but the least significant bit is always 0 , so there are 22 modifiable bits . instructions come in two main varieties , with most important operations ( add , xor , shifts , etc . ) allowing both forms . the first is like the classic pic instructions , with an operation between a specified f register ( i.e . the first 8k of ram ) and a single accumulator w0 , with a destination select bit selecting which is updated with the result . ( the w registers are memory-mapped . so the f operand may be any w register . ) the second form is more conventional , allowing three operands , which may be any of 16 w registers . the destination and one of the sources also support addressing modes , allowing the operand to be in memory pointed to by a w register . pic32m mips-based line . . pic32mx . in november 2007 , microchip introduced the pic32mx family of 32-bit microcontrollers , based on the mips32 m4k core . the device can be programmed using the microchip mplab c compiler for pic32 mcus , a variant of the gcc compiler . the first 18 models currently in production ( pic32mx3xx and pic32mx4xx ) are pin to pin compatible and share the same peripherals set with the pic24fxxga0xx family of ( 16-bit ) devices allowing the use of common libraries , software and hardware tools . today , starting at 28 pin in small qfn packages up to high performance devices with ethernet , can and usb otg , full family range of mid-range 32-bit microcontrollers are available . the pic32 architecture brought a number of new features to microchip portfolio , including : the highest execution speed 80 & nbsp ; mips ( 120+ dhrystone the largest flash memory : 512 & nbsp ; kb one instruction per clock cycle execution the first cached processor allows execution from ram full speed host/dual role and otg usb capabilities full jtag and 2-wire programming and debugging real-time trace . pic32mz . in november 2013 , microchip introduced the pic32mz series of microcontrollers , based on the mips m14k core . the pic32mz series include : 252 mhz core speed , 415 dmips up to 2 & nbsp ; mb flash and 512kb ram new peripherals including high-speed usb , crypto engine and sqi in 2015 , microchip released the pic32mz ef family , using the updated mips m5150 warrior m-class processor . in 2017 , microchip introduced the pic32mz da family , featuring an integrated graphics controller , graphics processor and 32mb of ddr2 dram . . pic32mm . in june 2016 , microchip introduced the pic32mm family , specialized for low-power and low-cost applications . the pic32mm features core-independent peripherals , sleep modes down to 500 na , and 4 x 4 & nbsp ; mm packages . the pic32mm microcontrollers use the mips technologies m4k , a 32-bit mips32 processor . they are meant for very low power consumption and limited to 25 & nbsp ; mhz . their key advantage is to support the 16bits instructions of mips making program size much more compact ( about 40 % ) . pic32mk . microchip introduced the pic32mk family in 2017 , specialized for motor control , industrial control , industrial internet of things ( iiot ) and multi-channel can applications . . core architecture . the pic architecture is characterized by its multiple attributes : separate code and data spaces ( harvard architecture ) . except pic32 : the mips m4k architecture 's separate data and instruction paths are effectively merged into a single common address space by the system bus matrix module . a small number of fixed-length instructions most instructions are single-cycle ( 2 clock cycles , or 4 clock cycles in 8-bit models ) , with one delay cycle on branches and skips one accumulator ( w0 ) , the use of which ( as source operand ) is implied ( i.e . is not encoded in the opcode ) all ram locations function as registers as both source and/or destination of math and other functions . a hardware stack for storing return addresses a small amount of addressable data space ( 32 , 128 , or 256 bytes , depending on the family ) , extended through banking data-space mapped cpu , port , and peripheral registers alu status flags are mapped into the data space the program counter is also mapped into the data space and writable ( this is used to implement indirect jumps ) . there is no distinction between memory space and register space because the ram serves the job of both memory and registers , and the ram is usually just referred to as the register file or simply as the registers . data space ( ram ) . pics have a set of registers that function as general-purpose ram . special-purpose control registers for on-chip hardware resources are also mapped into the data space . the addressability of memory varies depending on device series , and all pic devices have some bank switching to extend addressing to additional memory . later series of devices feature move instructions , which can cover the whole addressable space , independent of the selected bank . in earlier devices , any register move had to be achieved through the accumulator . to implement indirect addressing , a '' file select register '' ( fsr ) and '' indirect register '' ( indf ) are used . a register number is written to the fsr , after which reads from or writes to indf will actually be from or to the register pointed to by fsr . later devices extended this concept with post- and pre- increment/decrement for greater efficiency in accessing sequentially stored data . this also allows fsr to be treated almost like a stack pointer ( sp ) . external data memory is not directly addressable except in some pic18 devices with high pin count . code space . the code space is generally implemented as on-chip rom , eprom or flash rom . in general , there is no provision for storing code in external memory due to the lack of an external memory interface . the exceptions are pic17 and select high pin count pic18 devices . . word size . all pics handle ( and address ) data in 8-bit chunks . however , the unit of addressability of the code space is not generally the same as the data space . for example , pics in the baseline ( pic12 ) and mid-range ( pic16 ) families have program memory addressable in the same wordsize as the instruction width , i.e . 12 or 14 bits respectively . in contrast , in the pic18 series , the program memory is addressed in 8-bit increments ( bytes ) , which differs from the instruction width of 16 bits . in order to be clear , the program memory capacity is usually stated in number of ( single-word ) instructions , rather than in bytes . stacks . pics have a hardware call stack , which is used to save return addresses . the hardware stack is not software-accessible on earlier devices , but this changed with the 18 series devices . hardware support for a general-purpose parameter stack was lacking in early series , but this greatly improved in the 18 series , making the 18 series architecture more friendly to high-level language compilers . instruction set . pic 's instructions vary from about 35 instructions for the low-end pics to over 80 instructions for the high-end pics . the instruction set includes instructions to perform a variety of operations on registers directly , the accumulator and a literal constant or the accumulator and a register , as well as for conditional execution , and program branching . some operations , such as bit setting and testing , can be performed on any numbered register , but bi-operand arithmetic operations always involve w ( the accumulator ) , writing the result back to either w or the other operand register . to load a constant , it is necessary to load it into w before it can be moved into another register . on the older cores , all register moves needed to pass through w , but this changed on the '' high-end '' cores . pic cores have skip instructions , which are used for conditional execution and branching . the skip instructions are '' skip if bit set '' and '' skip if bit not set '' . because cores before pic18 had only unconditional branch instructions , conditional jumps are implemented by a conditional skip ( with the opposite condition ) followed by an unconditional branch . skips are also of utility for conditional execution of any immediate single following instruction . it is possible to skip skip instructions . for example , the instruction sequence '' skip if a ; skip if b ; c '' will execute c if a is true or if b is false . the 18 series implemented shadow registers , registers which save several important registers during an interrupt , providing hardware support for automatically saving processor state when servicing interrupts . in general , pic instructions fall into five classes : operation on working register ( wreg ) with 8-bit immediate ( '' literal '' ) operand . e.g . movlw ( move literal to wreg ) , andlw ( and literal with wreg ) . one instruction peculiar to the pic is retlw , load immediate into wreg and return , which is used with computed branches to produce lookup tables . operation with wreg and indexed register . the result can be written to either the working register ( e.g . addwf reg , w ) . or the selected register ( e.g . addwf reg , f ) . bit operations . these take a register number and a bit number , and perform one of 4 actions : set or clear a bit , and test and skip on set/clear . the latter are used to perform conditional branches . the usual alu status flags are available in a numbered register so operations such as '' branch on carry clear '' are possible . control transfers . other than the skip instructions previously mentioned , there are only two : goto and call . a few miscellaneous zero-operand instructions , such as return from subroutine , and sleep to enter low-power mode . performance . the architectural decisions are directed at the maximization of speed-to-cost ratio . the pic architecture was among the first scalar cpu designs and is still among the simplest and cheapest . the harvard architecture , in which instructions and data come from separate sources , simplifies timing and microcircuit design greatly , and this benefits clock speed , price , and power consumption . the pic instruction set is suited to implementation of fast lookup tables in the program space . such lookups take one instruction and two instruction cycles . many functions can be modeled in this way . optimization is facilitated by the relatively large program space of the pic ( e.g . 4096 × 14-bit words on the 16f690 ) and by the design of the instruction set , which allows embedded constants . for example , a branch instruction 's target may be indexed by w , and execute a '' retlw '' , which does as it is named return with literal in w . interrupt latency is constant at three instruction cycles . external interrupts have to be synchronized with the four-clock instruction cycle , otherwise there can be a one instruction cycle jitter . internal interrupts are already synchronized . the constant interrupt latency allows pics to achieve interrupt-driven low-jitter timing sequences . an example of this is a video sync pulse generator . this is no longer true in the newest pic models , because they have a synchronous interrupt latency of three or four cycles . advantages . small instruction set to learn risc architecture built-in oscillator with selectable speeds easy entry level , in-circuit programming plus in-circuit debugging pickit units available for less than 50 inexpensive microcontrollers wide range of interfaces including i²c , spi , usb , usart , a/d , programmable comparators , pwm , lin , can , psp , and ethernet availability of processors in dil package make them easy to handle for hobby use . limitations . one accumulator register-bank switching is required to access the entire ram of many devices operations and registers are not orthogonal ; some instructions can address ram and/or immediate constants , while others can use the accumulator only . the following stack limitations have been addressed in the pic18 series , but still apply to earlier cores : the hardware call stack is not addressable , so preemptive task switching can not be implemented software-implemented stacks are not efficient , so it is difficult to generate reentrant code and support local variables with paged program memory , there are two page sizes to worry about : one for call and goto and another for computed goto ( typically used for table lookups ) . for example , on pic16 , call and goto have 11 bits of addressing , so the page size is 2048 instruction words . for computed gotos , where you add to pcl , the page size is 256 instruction words . in both cases , the upper address bits are provided by the pclath register . this register must be changed every time control transfers between pages . pclath must also be preserved by any interrupt handler . . compiler development . while several commercial compilers are available , in 2008 , microchip released their own c compilers , c18 and c30 , for the line of 18f 24f and 30/33f processors . as of 2013 , microchip offers their xc series of compilers , for use with mplab . microchip will eventually phase out its older compilers , such as c18 , and recommends using their xc series compilers for new designs . the risc instruction set of the pic assembly language code can make the overall flow difficult to comprehend . judicious use of simple macros can increase the readability of pic assembly language . for example , the original parallax pic assembler ( '' spasm '' ) has macros , which hide w and make the pic look like a two-address machine . it has macro instructions like mov b , a ( move the data from address a to address b ) and add b , a ( add data from address a to data in address b ) . it also hides the skip instructions by providing three-operand branch macro instructions , such as cjne a , b , dest ( compare a with b and jump to dest if they are not equal ) . hardware features . pic devices generally feature : flash memory ( program memory , programmed using mplab devices ) sram ( data memory ) eeprom memory ( programmable at run-time ) sleep mode ( power savings ) watchdog timer various crystal or rc oscillator configurations , or an external clock . variants . within a series , there are still many device variants depending on what hardware resources the chip features : gpio internal clock oscillators 8/16/32 & nbsp ; bit timers synchronous/asynchronous serial interface usart mssp peripheral for i²c and spi communications capture/compare and pwm modules analog-to-digital converters ( up to ~1.0 msps ) usb , ethernet , can interfacing support external memory interface integrated analog rf front ends ( pic16f639 , and rfpic ) . keeloq rolling code encryption peripheral ( encode/decode ) and many more . trends . the first generation of pics with eprom storage are almost completely replaced by chips with flash memory . likewise , the original 12-bit instruction set of the pic1650 and its direct descendants has been superseded by 14-bit and 16-bit instruction sets . microchip still sells otp ( one-time-programmable ) and windowed ( uv-erasable ) versions of some of its eprom based pics for legacy support or volume orders . the microchip website lists pics that are not electrically erasable as otp . uv erasable windowed versions of these chips can be ordered . part number . the f in a picmicro part number generally indicates the picmicro uses flash memory and can be erased electronically . conversely , a c generally means it can only be erased by exposing the die to ultraviolet light ( which is only possible if a windowed package style is used ) . an exception to this rule is the pic16c84 which uses eeprom and is therefore electrically erasable . an l in the name indicates the part will run at a lower voltage , often with frequency limits imposed . parts designed specifically for low voltage operation , within a strict range of 3 - 3.6 volts , are marked with a j in the part number . these parts are also uniquely i/o tolerant as they will accept up to 5 & nbsp ; v as inputs . . development tools . microchip provides a freeware ide package called mplab , which includes an assembler , linker , software simulator , and debugger . they also sell c compilers for the pic10 , pic12 , pic16 , pic18 , pic24 , pic32 and dspic , which integrate cleanly with mplab x . free versions of the c compilers are also available with all features . but for the free versions , optimizations will be disabled after 60 days . several third parties develop c language compilers for pics , many of which integrate to mplab and/or feature their own ide . a fully featured compiler for the picbasic language to program pic microcontrollers is available from melabs , inc . mikroelektronika offers pic compilers in c , basic and pascal programming languages . a graphical programming language , flowcode , exists capable of programming 8- and 16-bit pic devices and generating pic-compatible c code . it exists in numerous versions from a free demonstration to a more complete professional edition . the proteus design suite is able to simulate many of the popular 8 and 16-bit pic devices along with other circuitry that is connected to the pic on the schematic . the program to be simulated can be developed within proteus itself , mplab or any other development tool . . device programmers . devices called '' programmers '' are traditionally used to get program code into the target pic . most pics that microchip currently sells feature icsp ( in circuit serial programming ) and/or lvp ( low voltage programming ) capabilities , allowing the pic to be programmed while it is sitting in the target circuit . microchip offers programmers/debuggers under the mplab and pickit series . mplab icd4 and mplab real ice are the current programmers and debuggers for professional engineering , while pickit 3 is a low-cost programmer / debugger line for hobbyists and students . bootloading . many of the higher end flash based pics can also self-program ( write to their own program memory ) , a process known as bootloading . demo boards are available with a small bootloader factory programmed that can be used to load user programs over an interface such as rs-232 or usb , thus obviating the need for a programmer device . alternatively there is bootloader firmware available that the user can load onto the pic using icsp . after programming the bootloader onto the pic , the user can then reprogram the device using rs232 or usb , in conjunction with specialized computer software . the advantages of a bootloader over icsp is faster programming speeds , immediate program execution following programming , and the ability to both debug and program using the same cable . third party . there are many programmers for pic microcontrollers , ranging from the extremely simple designs which rely on icsp to allow direct download of code from a host computer , to intelligent programmers that can verify the device at several supply voltages . many of these complex programmers use a pre-programmed pic themselves to send the programming commands to the pic that is to be programmed . the intelligent type of programmer is needed to program earlier pic models ( mostly eprom type ) which do not support in-circuit programming . third party programmers range from plans to build your own , to self-assembly kits and fully tested ready-to-go units . some are simple designs which require a pc to do the low-level programming signalling ( these typically connect to the serial or parallel port and consist of a few simple components ) , while others have the programming logic built into them ( these typically use a serial or usb connection , are usually faster , and are often built using pics themselves for control ) . debugging . in-circuit debugging . all newer pic devices feature an icd ( in-circuit debugging ) interface , built into the cpu core , that allows for interactive debugging of the program in conjunction with mplab ide . mplab icd and mplab devices debuggers can communicate with this interface using the icsp interface . this debugging system comes at a price however , namely limited breakpoint count ( 1 on older devices , 3 on newer devices ) , loss of some i/o ( with the exception of some surface mount 44-pin pics which have dedicated lines for debugging ) and loss of some on-chip features . some devices do not have on-chip debug support , due to cost or lack of pins . some larger chips also have no debug module . to debug these devices , a special -icd version of the chip mounted on a daughter board which provides dedicated ports is required . some of these debug chips are able to operate as more than one type of chip by the use of selectable jumpers on the daughter board . this allows broadly identical architectures that do not feature all the on chip peripheral devices to be replaced by a single -icd chip . for example : the 12f690-icd will function as one of six different parts each of which features one , some or all of five on chip peripherals . microchip document no . ds51292r . in-circuit emulators . microchip offers three full in-circuit emulators : the mplab devices ( parallel interface , a usb converter is available ) ; the newer mplab devices ( usb 2.0 connection ) ; and most recently , the real ice ( usb 2.0 connection ) . all such tools are typically used in conjunction with mplab ide for source-level interactive debugging of code running on the target . operating systems . pic projects may utilize real time operating systems such as freertos , avix rtos , urtos , salvo rtos or other similar libraries for task scheduling and prioritization . an open source project by serge vakulenko adapts 2.11bsd to the pic32 architecture , under the name retrobsd . this brings a familiar unix-like operating system , including an onboard development environment , to the microcontroller , within the constraints of the onboard hardware . . clones . parallax . parallax produced a series of picmicro-like microcontrollers known as the parallax sx . it is currently discontinued . designed to be architecturally similar to the pic microcontrollers used in the original versions of the basic stamp , sx microcontrollers replaced the pic in several subsequent versions of that product . parallax 's sx are 8-bit risc microcontrollers , using a 12-bit instruction word , which run fast at 75 & nbsp ; mhz ( 75 mips ) . they include up to 4096 12-bit words of flash memory and up to 262 bytes of random access memory , an eight bit counter and other support logic . there are software library modules to emulate i²c and spi interfaces , uarts , frequency generators , measurement counters and pwm and sigma-delta a/d converters . other interfaces are relatively easy to write , and existing modules can be modified to get new features . pkk milandr . russian pkk milandr produces microcontrollers using the pic17 architecture as the 1886 series . program memory consists of up to 64kb flash memory in the 1886ve2u or 8kb eeprom in the 1886ve5u ( 1886ве5у ) . the 1886ve5u ( 1886ве5у ) through 1886ve7u ( 1886ве7у ) are specified for the military temperature range of -60 & nbsp ; °c to +125 & nbsp ; °c . hardware interfaces in the various parts include usb , can , i2c , spi , as well as a/d and d/a converters . the 1886ve3u ( 1886ве3у ) contains a hardware accelerator for cryptographic functions according to gost 28147-89 . there are even radiation-hardened chips with the designations 1886ve8u ( 1886ве8у ) and 1886ve10u ( 1886ве10у ) . . elan microelectronics . elan microelectronics corp . in taiwan make a line of microcontrollers based on the pic16 architecture , with 13-bit instructions and a smaller ( 6-bit ) ram address space . . holtek semiconductor . holtek make a large number of very cheap microcontrollers ( as low as 8.5 cents in quantity ) with a 14-bit instruction set strikingly similar to the pic16 . other manufacturers in asia . many ultra-low-cost otp microcontrollers from asian manufacturers , found in low-cost consumer electronics are based on the pic architecture or modified form . most clones only target the baseline parts ( pic16c5x/pic12c50x ) . microchip has attempted to sue some manufacturers when the copying is particularly egregious , without success . . see also . pic16x84 atmel avr arduino basic atom basic stamp oopic picaxe ti msp430 maximite . references . further reading . microcontroller theory and applications , with the pic18f ; 2nd ed ; m . rafiquzzaman ; wiley ; 544 pages ; 2018 ; . microcontroller system design using pic18f processors ; nicolas k . haddad ; igi global ; 428 pages ; 2017 ; . pic microcontroller projects in c : basic to advanced ( for pic18f ) ; 2nd ed ; dogan ibrahim ; newnes ; 660 pages ; 2014 ; . ( 1st ed ) microcontroller programming : microchip pic ; sanchez and canton ; crc press ; 824 pages ; 2006 ; . ( 1st ed ) pic microcontroller project book ; john iovine ; tab ; 272 pages ; 2000 ; . ( 1st ed ) . external links . . official microchip website pic wifi projects website