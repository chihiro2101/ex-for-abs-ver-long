Futurebus

history . in the late 1970s , vmebus was faster than the parts plugged into it . it was quite reasonable to connect a cpu and ram to vme on separate cards to build a computer . however , as the speed of the cpus and ram rapidly increased , vme was quickly overwhelmed . increasing the speed of vme was not easy , because all of the parts plugged into it would have to be able to support these faster speeds as well . futurebus looked to fix these problems and create a successor to systems like vmebus with a system that could grow in speed without affecting existing devices . in order to do this the primary technology of futurebus was built using asynchronous links , allowing the devices plugged into it to talk at whatever speed they wished . another problem that needed to be addressed was the ability to have several cards in the system as '' masters '' , allowing futurebus to build multiprocessor machines . this required some form of '' distributed arbitration '' to allow the various cards to gain access to the bus at any point , as opposed to vme , which put a single master in slot 0 with overall control . in order to have a clear performance benefit , futurebus was designed to have the performance needed ten years in the future . typical ieee standards start with a company building a device , and then submitting it to the ieee for the standardization effort . in the case of futurebus this was reversed , the whole system was being designed during the standardization effort . this proved to be its downfall . as companies came to see futurebus as the system , they all joined in . soon the standards meetings had hundreds of people attending , all of them demanding that their particular needs and wants be included . as the complexity grew , the standards process slowed . in the end it took eight long years before the specification was finally agreed on in 1987 . tektronix did make a few workstations based on futurebus . american logic machines ( alm ) continues to build end to end system futurebus hybrid solutions , including vme-to-futurebus+ and other bus-to-futurebus bridge technologies . that was just in time for the us navy who had been looking for a new high-speed system for the next generation computer resources ( ngcr ) project for passing sonar data around in their newly designed seawolf-class submarine , and they said they would standardize on futurebus if only a few more changes would be made . seeing a potential massive government buy , the additions effort started immediately on futurebus+ . it took another four years for the futurebus+ standard to be released by this time custom variation of futurebus took the lead in industry . all of the futurebus+ proponents had their idea of what futurebus+ should be . this degenerated into '' profiles '' , different versions of futurebus+ targeted towards a particular market . boards that were compliant with one futurebus+ profile were not guaranteed to work with boards built to a different profile . the futurebus+ standards development politics got so complicated that the ieee 896 committee split from the ieee microcomputer standards committee and formed the ieee bus architecture standards committee ( basc ) . in the end very little use of futurebus was attempted . the decade-long performance gap they gave the system had evaporated in the decade-long standards process , and conventional local bus systems like pci were close in performance terms . meanwhile , the vme ecosystem had evolved to such a degree that it continues to be used today , another decade on . custom implementations of the futurebus technology are currently used as backplane technologies for high-end network applications , enterprise class routers , high performance blade servers , and application with high demand-content such as video on demand . futurebus effort did act as a catalyst for simpler serial technologies . a group then organized to create a system aimed directly at this need , which eventually led to scalable coherent interface ( sci ) . meanwhile , another member decided to simple re-create the entire concept on a much simpler basis , which resulted in quickring . due to the simplicity of these standards , both standards were completed before futurebus+ . futurebus+ was ahead of its time in the 1980s . vme and other parallel bus standards are still trying to adapt concepts that are implemented in the futurebus , specially in high performance applications . futurebus was the source of some of the original work on cache coherency , live insertion of boards , and trapezoidal transceivers . trapezoidal transceivers have a controlled risetime and make backplane and bus design much simpler . the original trapezoidal transceivers were made by national semiconductor . newer futurebus+ transceivers that meet the ieee std 1194.1-1991 backplane transceiver logic ( btl ) standard are still made by texas instruments . futurebus+ was used as the i/o bus in the dec 4000 axp and dec 10000 axp systems . futurebus+ fddi boards are still supported in the openvms operating system . futurebus+ custom chips support advanced symmetric and asymmetric versions of unix-like operating systems supported by companies such as american logic machines . many of the technical features ( asynchronous data bus , distributed bus arbitration , large board size ) are shared with ieee standard fastbus . fastbus was used as a data acquisition system in many high-energy physics experiments in the 1980s and 1990s . description . futurebus is described in just a few ieee standards : 896.1-1987 ieee standard backplane bus specifications for multiprocessor architectures : futurebus 1101-1987 ieee standard for mechanical core specifications for microcomputers using iec 603-2 connectors futurebus systems were implemented with 9ux280 eurocard mechanics using 96-pin din connectors resulting in a backplane that supported both 16 and 32 bit bus widths . to understand futurebus+ you need to read many ieee standards : 896.1-1991 ieee standard for futurebus+ — logical protocol specification 896.2-1991 ieee standard backplane bus specification for multiprocessor architectures : futurebus+ 896.3-1993 ieee recommended practice for futurebus+ 896.4-1993 ieee standard for conformance test requirements for futurebus+ 896.5-1993 ieee standard for futurebus+ , profile m ( military ) 896.6 futurebus+ telecommunications systems , profile t ( telecommunications ) 896.7 interconnect between futurebus+ systems 896.8 small computer expandibility module for futurebus+ systems , profile d ( desktop ) 896.9-1994 fault tolerant extensions to the futurebus+ architecture 896.10-1997 standard for futurebus+ spaceborne systems - profile s 896.11 standard for ieee 1355 links on futurebus+ backplane connector 896.12 standard for fault tolerance classification of computer-based systems 1194.1-1991 ieee standard for electrical characteristics of backplane transceiver logic ( btl ) interface circuits 1301 standard for metric equipment practice for microcomputers - coordination document 1301.1-1991 ieee standard for a metric equipment practice for microcomputers—convection-cooled with 2 & nbsp ; mm connectors 1156.1 standard microprocessor environmental specifications for computer modules eia is-64 ( 1991 ) 2 & nbsp ; mm two-part connectors for use with printed boards and backplanes 896.2 contains three profiles for target markets , a for general purpose systems , b for an i/o bus , and f for a futurebus+ will all the options that will make it go fast . profile a was sponsored by the vmebus community . profile b was sponsored by digital equipment corporation and implemented in vax and alpha systems as an i/o bus . profile f was sponsored by john theus while he worked at tektronix and was intended for high end workstations . futurebus+ supports bus widths from 32 to 256 bits . it is possible to build a board that supports all of these bus widths and will interoperate with boards that only support a subset . split bus transactions are supported so that slow response to a read or write will not tie up the backplane bus . cache coherence , implemented using the mesi protocols , was very complicated but significantly improved performance . futurebus+ was one of the first open standards to support live insertion which allowed boards to be replaced while the system was running . futurebus+ boards are 12sux12su hard metric size defined in the ieee 1301 standards . one of the most elegant features of the futurebus design is its distributed bus arbitration mechanism . see us patent number 5060139 for more information . in the end this was replaced by a central arbiter . see also . infiniband quickring sci bus topology the futurebus+ handbook , john theus , vita futurebus+ handbook for digital systems , digital equipment corporation fastbus . external links .