Windowing system

technical details . the main component of any windowing system is usually called the display server , although alternative denominations such as window server or compositor are also in use . any application that runs and presents its gui in a window , is a client of the display server . the display server and its clients communicate with each other over a communications protocol , which is usually called display server protocol , the display server being the mediator between the clients and the user . it receives all the input from the kernel , that the kernel receives from all attached input devices , such as keyboard , pointing devices , or touchscreen and transmits it to the correct client . the display server is also responsible for the output of the clients to the computer monitor . the output of sound is usually not managed by the display server , but the sound volume is usually handled through gui applets and it is the display server who decides which applications are on top . a windowing system enables the computer user to work with several programs at the same time . each program presents its gui in its own window , which is generally a rectangular area of the screen . from a programmer 's point of view , a windowing system implements graphical primitives . for example : rendering fonts or drawing a line on the screen . it provides an abstraction of the graphics hardware for use by higher-level elements of the graphical interface such as a window manager . a display server protocol can be network capable or even network transparent , facilitating the implementation of thin clients . display server . a display server or window server is a program whose primary task is to coordinate the input and output of its clients to and from the rest of the operating system , the hardware , and each other . the display server communicates with its clients over the display server protocol , a communications protocol , which can be network-transparent or simply network-capable . the display server is a key component in any graphical user interface , specifically the windowing system . display server communications protocols . x11 . one example of a display server is the x.org server , which runs on top of the kernel ( usually a unix-based kernel , such as linux or bsd ) . it receives user input data ( e.g . from evdev on linux ) and passes it to one of its clients . the display server also receives data from its clients ; it processes the data , it does the compositing and on linux it passes the data to one of three kernel components & ndash ; drm , gem or kms driver . the component writes the data into the framebuffer and content of the framebuffer is transmitted to the connected screen and displayed . x relies on glx . one of the implementations of display server concept is x window system , in particular its actually used version & ndash ; x.org server and xlib and xcb client libraries . the x.org server is a display server , but in its current implementation it relies on a second program , the compositing window manager , to do the compositing . examples are mutter or kwin . notable examples of display servers implementing the x11 display server protocol are x.org server , xfree86 , xquartz and cygwin/x , while client libraries implementing the x11 display server protocol are xlib and xcb . wayland . display servers that implement the wayland display server protocol , are called wayland compositors . like any display server , a wayland compositor is responsible for handling input and output for its clients and – in contrast to x11 – additionally for the compositing . examples are weston , mutter , kwin or enlightenment . wayland compositors communicate with wayland clients over the wayland display server protocol . this protocol defines that clients can directly write data into the framebuffer using the egl rendering api . the display server still gets to decide which window is on top and thus visible to the user and also still is responsible for passing data regarding to input devices from evdev to its clients . wayland is used to a certain degree in some linux desktop distributions , such as fedora . it is also well suited for mobile computing and has been adopted , for example , by the smartphone- and tablet-focused projects tizen , sailfish os and asteroidos . an implementation of wayland is available under the mit license , the libwayland-client and libwayland-server libraries . there is an ongoing effort to add wayland support to chrome os . . mir . the mir ( software ) comes with its own mir display server protocol which is different from those used by x11 and wayland . mir additionally supports the x11 protocol . it was developed by canonical and was intended to be the display server of choice for ubuntu . as of 2017 , it has been replaced with the wayland display server for desktop editions of ubuntu . there are implementations of the mir display server , the libmir-server and the libmir-client libraries available under the gplv3 . surfaceflinger . google developed a display server called surfaceflinger for android ( another linux kernel-based operating system primarily for mobile devices ) : everything in android is rendered to a '' surface '' ; '' surfaces '' are produced by applications and placed into a queue that is managed by surfaceflinger . yet another android-specific solution is '' gralloc '' . gralloc handles device memory i.e . it does allocation , arbitration , it handles synchronization via android/linux fence file descriptors ( fds ) . gralloc competes with other solutions like e.g . mesa 's generic buffer management ( gbm ) or nvidia 's eglstreams . the gralloc hardware abstraction layer ( hal ) is used to allocate the buffers that underlie '' surfaces '' . for compositing in android , surfaces are sent to surfaceflinger , which uses opengl es to do the compositing . hardware composer hal ( hwc ) was introduced in android 3.0 and has evolved steadily over the years . its primary purpose is to determine the most efficient way to composite buffers with the available hardware . as a hal , its implementation is device-specific and usually done by the display hardware oem . quartz compositor . for apple 's macos family of operating systems , quartz compositor fulfils the tasks of a display server and of a window manager in the windowing system . desktop window manager . for microsoft windows , from windows vista onward , desktop window manager enables the use of hardware acceleration to render the graphical user interface . it was originally created to enable portions of the new '' windows aero '' user experience , which allowed for effects such as transparency , 3d window switching and more . it is also included with windows server 2008 , but requires the '' desktop experience '' feature and compatible graphics drivers to be installed . list of windowing systems . for unix-like operating systems . 8½ and rio for plan 9 framebufferui ( fbui ) in-kernel windowing system hp windows sapphire for the perq manager ( mgr ) metisse mir news / openwindows nextstep orbital ( redox ) qt extended quartz compositor ( mac os x ) sunview twin ( text windows ) w window system wayland x window system xfast xynth . for windows nt operating systems . desktop window manager ( dwm ) in microsoft windows ( vista and later ) reactos classic shell pokki retroui talisman desktop . web windowing systems . dojo extjs tibco general interface webwm . other . dm gem opie intuition microwindows minigui oohg visi on vax workstation software commercial systems such as microsoft windows ( xp , 9x and earlier ) , the classic mac os ( version 9 and earlier ) , and palm os , contain a windowing system which is integrated with the os . see also . list of display servers history of the graphical user interface widget toolkit desktop environment