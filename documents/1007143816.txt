Universal Plug and Play

overview . the upnp architecture allows device-to-device networking of consumer electronics , mobile devices , personal computers , and networked home appliances . it is a distributed , open architecture protocol based on established standards such as the internet protocol suite ( tcp/ip ) , http , xml , and soap . upnp control points ( cps ) are devices which use upnp protocols to control upnp controlled devices ( cds ) . the upnp architecture supports zero configuration networking . a upnp compatible device from any vendor can dynamically join a network , obtain an ip address , announce its name , advertise or convey its capabilities upon request , and learn about the presence and capabilities of other devices . dynamic host configuration protocol ( dhcp ) and domain name system ( dns ) servers are optional and are only used if they are available on the network . devices can disconnect from the network automatically without leaving state information . upnp was published as a 73-part international standard , iso/iec 29341 , in december , 2008 . other upnp features include : ; media and device independence : upnp technology can run on many media that support ip including ethernet , firewire , ir ( irda ) , home wiring ( g.hn ) and rf ( bluetooth , wi-fi ) . no special device driver support is necessary ; common network protocols are used instead . ; user interface ( ui ) control : optionally , the upnp architecture enables devices to present a user interface through a web browser ( see presentation below ) . ; operating system and programming language independence : any operating system and any programming language can be used to build upnp products . upnp stacks are available for most platforms and operating systems in both closed and open source forms . ; extensibility : each upnp product can have device-specific services layered on top of the basic architecture . in addition to combining services defined by upnp forum in various ways , vendors can define their own device and service types , and can extend standard devices and services with vendor-defined actions , state variables , data structure elements , and variable values . protocol . upnp uses common internet technologies . it assumes the network must run internet protocol ( ip ) and then leverages http , soap and xml on top of ip , in order to provide device/service description , actions , data transfer and eventing . device search requests and advertisements are supported by running http on top of udp using multicast ( known as httpmu ) . responses to search requests are also sent over udp , but are instead sent using unicast ( known as httpu ) . upnp uses udp due to its lower overhead in not requiring confirmation of received data and retransmission of corrupt packets . httpu and httpmu were initially submitted as an internet draft but it expired in 2001 ; these specifications have since been integrated into the actual upnp specifications . upnp uses udp port 1900 and all used tcp ports are derived from the ssdp alive and response messages . . addressing . the foundation for upnp networking is ip addressing . each device must implement a dhcp client and search for a dhcp server when the device is first connected to the network . if no dhcp server is available , the device must assign itself an address . the process by which a upnp device assigns itself an address is known within the upnp device architecture as autoip . in upnp device architecture version 1.0 , autoip is defined within the specification itself ; in upnp device architecture version 1.1 , autoip references ietf rfc 3927 . if during the dhcp transaction , the device obtains a domain name , for example , through a dns server or via dns forwarding , the device should use that name in subsequent network operations ; otherwise , the device should use its ip address . discovery . once a device has established an ip address , the next step in upnp networking is discovery . the upnp discovery protocol is known as the simple service discovery protocol ( ssdp ) . when a device is added to the network , ssdp allows that device to advertise its services to control points on the network . this is achieved by sending ssdp alive messages . when a control point is added to the network , ssdp allows that control point to actively search for devices of interest on the network or listen passively to the ssdp alive messages of device . the fundamental exchange is a discovery message containing a few essential specifics about the device or one of its services , for example , its type , identifier , and a pointer ( network location ) to more detailed information . description . after a control point has discovered a device , the control point still knows very little about the device . for the control point to learn more about the device and its capabilities , or to interact with the device , the control point must retrieve the device 's description from the location ( url ) provided by the device in the discovery message . the upnp device description is expressed in xml and includes vendor-specific manufacturer information like the model name and number , serial number , manufacturer name , ( presentation ) urls to vendor-specific web sites , etc . the description also includes a list of any embedded services . for each service , the device description document lists the urls for control , eventing and service description . each service description includes a list of the commands , or actions , to which the service responds , and parameters , or arguments , for each action ; the description for a service also includes a list of variables ; these variables model the state of the service at run time , and are described in terms of their data type , range , and event characteristics . control . having retrieved a description of the device , the control point can send actions to a device 's service . to do this , a control point sends a suitable control message to the control url for the service ( provided in the device description ) . control messages are also expressed in xml using the soap ( protocol ) ( soap ) . much like function calls , the service returns any action-specific values in response to the control message . the effects of the action , if any , are modeled by changes in the variables that describe the run-time state of the service . event notification . another capability of upnp networking is event notification , or eventing . the event notification protocol defined in the upnp device architecture is known as general event notification architecture ( gena ) . a upnp description for a service includes a list of actions the service responds to and a list of variables that model the state of the service at run time . the service publishes updates when these variables change , and a control point may subscribe to receive this information . the service publishes updates by sending event messages . event messages contain the names of one or more state variables and the current value of those variables . these messages are also expressed in xml . a special initial event message is sent when a control point first subscribes ; this event message contains the names and values for all evented variables and allows the subscriber to initialize its model of the state of the service . to support scenarios with multiple control points , eventing is designed to keep all control points equally informed about the effects of any action . therefore , all subscribers are sent all event messages , subscribers receive event messages for all '' evented '' variables that have changed , and event messages are sent no matter why the state variable changed ( either in response to a requested action or because the state the service is modeling changed ) . presentation . the final step in upnp networking is presentation . if a device has a url for presentation , then the control point can retrieve a page from this url , load the page into a web browser , and depending on the capabilities of the page , allow a user to control the device and/or view device status . the degree to which each of these can be accomplished depends on the specific capabilities of the presentation page and device . upnp av standards . upnp av architecture is an audio and video extension of the upnp , supporting a variety of devices such as tvs , vcrs , cd/dvd players/jukeboxes , settop boxes , stereos systems , mp3 players , still image cameras , camcorders , electronic picture frames ( epfs ) , and personal computers . the upnp av architecture allows devices to support different types of formats for the entertainment content , including mpeg2 , mpeg4 , jpeg , mp3 , windows media audio ( wma ) , bitmaps ( bmp ) , and ntsc , pal or atsc formats . multiple types of transfer protocols are supported , including ieee 1394 , http , rtp and tcp/ip . on 12 july 2006 , the upnp forum announced the release of version 2 of the upnp audio and video specifications , with new mediaserver ( ms ) version 2.0 and mediarenderer ( mr ) version 2.0 classes . these enhancements are created by adding capabilities to the mediaserver and mediarenderer device classes , allowing a higher level of interoperability between products made by different manufacturers . some of the early devices complying with these standards were marketed by philips under the streamium brand name . since 2006 , versions 3 and 4 of the upnp audio and video device control protocols have been published . in march 2013 , an updated upnp av architecture specification was published , incorporating the updated device control protocols . the upnp av standards have been referenced in specifications published by other organizations including digital living network alliance networked device interoperability guidelines , international electrotechnical commission iec 62481-1 , and cablelabs opencable home networking protocol . . upnp av components . media server . a is the upnp-server ( '' master '' device ) that provides media library information and streams media-data ( like audio/video/picture/files ) to upnp clients on the network . it is a computer system or a similar digital appliance that stores digital media , such as photographs , movies , or music and shares these with other devices . upnp av media servers provide a service to upnp av client devices , so-called control points , for browsing the media content of the server and request the media server to deliver a file to the control point for playback . upnp media servers are available for most operating systems and many hardware platforms . upnp av media servers can either be categorized as software-based or hardware-based . software-based upnp av media servers can be run on a pc . hardware-based upnp av media servers may run on any nas devices or any specific hardware for delivering media , such as a dvr . as of may 2008 , there were more software-based upnp av media servers than there were hardware-based servers . other components . upnp mediaserver controlpoint - which is the upnp-client ( a 'slave ' device ) that can auto-detect upnp-servers on the network to browse and stream media/data-files from them . upnp mediarenderer dcp - which is a 'slave ' device that can render ( play ) content . upnp renderingcontrol dcp - control mediarenderer settings ; volume , brightness , rgb , sharpness , and more . upnp remote user interface ( rui ) client/server - which sends/receives control-commands between the upnp-client and upnp-server over network , ( like record , schedule , play , pause , stop , etc . ) . web4ce ( cea 2014 ) for upnp remote ui - cea-2014 standard designed by consumer electronics association 's r7 home network committee . web-based protocol and framework for remote user interface on upnp networks and the internet ( web4ce ) . this standard allows a upnp-capable home network device to provide its interface ( display and control options ) as a web page to display on any other device connected to the home network . that means that one can control a home networking device through any web browser-based communications method for ce devices on a upnp home network using ethernet and a special version of html called ce-html . qos ( quality of service ) - is an important ( but not mandatory ) service function for use with upnp av ( audio and video ) . quality of service refers to control mechanisms that can provide different priority to different users or data flows , or guarantee a certain level of performance to a data flow in accordance with requests from the application program . since upnp av is mostly to deliver streaming media that is often near real-time or real-time audio/video data which it is critical to be delivered within a specific time or the stream is interrupted . quality of service guarantees are especially important if the network capacity is limited , for example public networks , like the internet . quality of service for upnp consist of sink device ( client-side/front-end ) and source device ( server-side/back-end ) service functions . with classes such as ; traffic class that indicates the kind of traffic in the traffic stream , ( for example , audio or video ) . traffic identifier ( tid ) which identifies data packets as belonging to a unique traffic stream . traffic specification ( tspec ) which contains a set of parameters that define the characteristics of the traffic stream , ( for example operating requirement and scheduling ) . traffic stream ( ts ) which is a unidirectional flow of data that originates at a source device and terminates at one or more sink device ( s ) . remote access - defines methods for connecting upnp device sets that are not in the same multicast domain . nat traversal . one solution for nat traversal , called the internet gateway device protocol ( igd protocol ) , is implemented via upnp . many routers and firewalls expose themselves as internet gateway devices , allowing any local upnp control point to perform a variety of actions , including retrieving the external ip address of the device , enumerating existing port mappings , and adding or removing port mappings . by adding a port mapping , a upnp controller behind the igd can enable traversal of the igd from an external address to an internal client . problems with upnp . authentication . the upnp protocol , as default , does not implement any authentication , so upnp device implementations must implement the additional device protection service , or implement the device security service . there also exists a non-standard solution called upnp-up ( universal plug and play - user profile ) which proposes an extension to allow user authentication and authorization mechanisms for upnp devices and applications . many upnp device implementations lack authentication mechanisms , and by default assume local systems and their users are completely trustworthy . when the authentication mechanisms are not implemented , routers and firewalls running the upnp igd protocol are vulnerable to attack . for example , adobe flash programs running outside the sandbox of the browser ( e.g . this requires specific version of adobe flash with acknowledged security issues ) are capable of generating a specific type of http request which allows a router implementing the upnp igd protocol to be controlled by a malicious web site when someone with a upnp-enabled router simply visits that web site . this only applies to the nat traversal ; it does not apply when the igd does not support upnp or upnp has been disabled on the igd . also , not all routers can have such things as dns server settings altered by upnp because much of the specification ( including lan host configuration ) is optional for upnp enabled routers . as a result , some upnp devices ship with upnp turned off by default as a security measure . access from the internet . in 2011 , researcher daniel garcia developed a tool designed to exploit a flaw in some upnp igd device stacks that allow upnp requests from the internet . the tool was made public at defcon 19 and allows portmapping requests to external ip addresses from the device and internal ip addresses behind the nat . the problem is widely propagated around the world , with scans showing millions of vulnerable devices at a time . in january 2013 the security company rapid7 in boston reported on a six-month research programme . a team scanned for signals from upnp-enabled devices announcing their availability for internet connection . some 6900 network-aware products from 1500 companies at 81 million ip-addresses responded to their requests . 80 % of the devices are home routers ; others include printers , webcams and surveillance cameras . using the upnp-protocol , many of those devices can be accessed and/or manipulated . in february 2013 , the upnp forum responded in a press release by recommending more recent versions of the used upnp stacks , and by improving the certification program to include checks to avoid further such issues . igmp snooping and reliability . upnp is often the only significant multicast application in use in digital home networks ; therefore , multicast network misconfiguration or other deficiencies can appear as upnp issues rather than underlying network issues . if igmp snooping is enabled on a switch , or more commonly a wireless router/switch , it will interfere with upnp/dlna device discovery ( ssdp ) if incorrectly or incompletely configured ( e.g . without an active querier or igmp proxy ) , making upnp appear unreliable . typical scenarios observed include a server or client ( e.g . smart tv ) appearing after power on , and then disappearing after a few minutes ( often 30 by default configuration ) due to igmp group membership expiring . callback vulnerability . on 8 june 2020 yet another protocol design flaw was announced . dubbed '' callstranger '' by its discoverer , it allows an attacker to subvert the event subscription mechanism and execute a variety of attacks : amplification of requests for use in ddos ; enumeration ; and data exfiltration . ocf had published a fix to the protocol specification in april 2020 , but since many devices running upnp are not easily upgradable , callstranger is likely to remain a threat for a long time to come . callstranger has fueled calls for end-users to abandon upnp because of repeated failures in security of its design and implementation . . future developments . in the fall of 2008 , the upnp forum ratified the successor to upnp 1.0 device architecture upnp 1.1 . the devices profile for web services ( dpws ) standard was a candidate successor to upnp , but upnp 1.1 was selected by the upnp forum . version 2 of igd is standardized . the upnp internet gateway device ( igd ) standard has a wanipconnection service , which provides similar functionality to ietf-standard port control protocol . the nat-pmp specification contains a list of the problems with igdp that prompted the creation of nat-pmp and its successor pcp . see also . comparison of upnp av media servers devices profile for web services digital living network alliance ( dlna ) list of upnp av media servers and clients port control protocol nat port mapping protocol ( nat-pmp ) internet gateway device protocol port ( computer networking ) zeroconf . references . sources . golden g . richard : service and device discovery : protocols and programming , mcgraw-hill professional , michael jeronimo , jack weast : upnp design by example : a software developer 's guide to universal plug and play , intel press , . external links . the upnp forum iso/iec 29341-1:2011