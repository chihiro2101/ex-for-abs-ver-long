Cisco IOS

history . the ios network operating system was developed in the 1980s for routers that had only 256 & nbsp ; kb memory and low cpu processing power . through modular extensions ios has been adapted to increasing hardware capabilities and new networking protocols . when ios was developed , cisco systems ' main product line were routers . the company acquired a number of young companies that focused on network switches , such as the inventor of the first ethernet switch kalpana , and as a result cisco switches did not run the ios . the cisco catalyst series would for some time run the catos . in early modular chassis network switches from cisco , modules with layer 3 routing functionalities were separate devices that ran ios , while the layer 2 switch modules ran catos . cisco eventually introduced the native mode for chassis , so that they only run one operating system . for the nexus switches cisco developed nx-os , which is similar to ios , except that it is linux-based . . command-line interface . the ios command-line interface ( cli ) provides a fixed set of multiple-word commands . the set available is determined by the '' mode '' and the privilege level of the current user . '' global configuration mode '' provides commands to change the system 's configuration , and '' interface configuration mode '' provides commands to change the configuration of a specific interface . all commands are assigned a privilege level , from 0 to 15 , and can only be accessed by users with the necessary privilege . through the cli , the commands available to each privilege level can be defined . most builds of ios include a tcl interpreter . using the embedded event manager feature , the interpreter can be scripted to react to events within the networking environment , such as interface failure or periodic timers . available command modes include : user exec mode privileged exec mode global configuration mode rom monitor mode setup mode more than 100 configuration modes and submodes . architecture . cisco ios has a monolithic architecture , owing to the limited hardware resources of routers and switches in the 1980s . this means that all processes have direct hardware access to conserve cpu processing time . there is no memory protection between processes and ios has a run to completion scheduler , which means that the kernel does not pre-empt a running process . instead the process must make a kernel call before other processes get a chance to run . ios considers each process a single thread and assigns it a priority value , so that high priority processes are executed on the cpu before queued low priority processes , but high priority processes can not interrupt running low priority processes . the cisco ios monolithic kernel does not implement memory protection for the data of different processes . the entire physical memory is mapped into one virtual address space . the cisco ios kernel does not perform any memory paging or swapping . therefore the addressable memory is limited to the physical memory of the network device on which the operating system is installed . ios does however support aliasing of duplicated virtual memory contents to the same physical memory . this architecture was implemented by cisco in order to ensure system performance and minimize the operational overheads of the operating system . the disadvantage of the ios architecture is that it increases the complexity of the operating system , data corruption is possible as one process can write over the data of another , and one process can destabilize the entire operating system or even cause a software-forced crash . in the event of an ios crash , the operating system automatically reboots and reloads the saved configuration . . routing . in all versions of cisco ios , routing and forwarding ( switching ) are distinct functions . routing and other protocols run as cisco ios processes and contribute to the routing information base ( rib ) . this is processed to generate the final ip forwarding table ( fib , forwarding information base ) , which is used by the forwarding function of the router . on router platforms with software-only forwarding ( e.g . , cisco 7200 ) , most traffic handling , including access control list filtering and forwarding , is done at interrupt level using cisco express forwarding ( cef ) or dcef ( distributed cef ) . this means ios does not have to do a process context switch to forward a packet . routing functions such as ospf or bgp run at the process level . in routers with hardware-based forwarding , such as the cisco 12000 series , ios computes the fib in software and loads it into the forwarding hardware ( such as an asic or network processor ) , which performs the actual packet forwarding function . interface descriptor block . an interface descriptor block , or simply idb , is a portion of memory or cisco ios internal data structure that contains information such as the ip address , interface state , and packet statistics for networking data . cisco 's ios software maintains one idb for each hardware interface in a particular cisco switch or router and one idb for each subinterface . the number of idbs present in a system varies with the cisco hardware platform type . packages and feature sets . ios is shipped as a unique file that has been compiled for specific cisco network devices . each ios image therefore include a feature set , which determine the command-line interface ( cli ) commands and features that are available on different cisco devices . upgrading to another feature set therefore entails the installation of a new ios image on the networking device and reloading the ios operating system . information about the ios version and feature-set running on a cisco device can be obtained with the show version command . most cisco products that run ios also have one or more '' feature sets '' or '' packages '' , typically eight packages for cisco routers and five packages for cisco network switches . for example , cisco ios releases meant for use on catalyst switches are available as '' standard '' versions ( providing only basic ip routing ) , '' enhanced '' versions , which provide full ipv4 routing support , and '' advanced ip services '' versions , which provide the enhanced features as well as ipv6 support . beginning with the 1900 , 2900 and 3900 series of isr routers , cisco revised the licensing model of ios . to simplify the process of enlarging the feature-set and reduce the need for network operating system reloads , cisco introduced universal ios images , that include all features available for a device and customers may unlock certain features by purchasing an additional software license . the exact feature set required for a particular function can be determined using the cisco feature set browser . routers come with ip base installed , and additional feature pack licenses can be installed as bolt-on additions to expand the feature set of the device . the available feature packs are : data adds features like bfd , ip slas , ipx , l2tpv3 , mobile ip , mpls , sctp . security adds features like vpn , firewall , ip slas , nac . unified comms adds features like callmanager express , gatekeeper , h.323 , ip slas , mgcp , sip , voip , cube ( sbc ) . ios images can not be updated with software bug fixes . to patch a vulnerability in an ios , a binary file with the entire operating system needs to be loaded . . versioning . cisco ios is versioned using three numbers and some letters , in the general form a.b ( c.d ) e , where : a is the major version number . b is the minor version number . c is the release number , which begins at one and increments as new releases in a same way a.b train are released . '' train '' is cisco-speak for '' a vehicle for delivering cisco software to a specific set of platforms and features . '' d ( omitted from general releases ) is the interim build number . e ( zero , one or two letters ) is the software release train identifier , such as none ( which designates the mainline , see below ) , t ( for technology ) , e ( for enterprise ) , s ( for service provider ) , xa as a special functionality train , xb as a different special functionality train , etc . rebuilds – often a rebuild is compiled to fix a single specific problem or vulnerability for a given ios version . for example , 12.1 ( 8 ) e14 is a rebuild , the 14 denoting the 14th rebuild of 12.1 ( 8 ) e . rebuilds are produced to either quickly repair a defect , or to satisfy customers who do not want to upgrade to a later major revision because they may be running critical infrastructure on their devices , and hence prefer to minimize change and risk . interim releases – are usually produced on a weekly basis , and form a roll-up of current development effort . the cisco advisory web site may list more than one possible interim to fix an associated issue ( the reason for this is unknown to the general public ) . maintenance releases – rigorously tested releases that are made available and include enhancements and bug fixes . cisco recommend upgrading to maintenance releases where possible , over interim and rebuild releases . trains . cisco says , '' a train is a vehicle for delivering cisco software to a specific set of platforms and features . '' . until 12.4 . before cisco ios release 15 , releases were split into several trains , each containing a different set of features . trains more or less map onto distinct markets or groups of customers that cisco targeted . the mainline train is intended to be the most stable release the company can offer , and its feature set never expands during its lifetime . updates are released only to address bugs in the product . the previous technology train becomes the source for the current mainline train — for example , the 12.1t train becomes the basis for the 12.2 mainline . therefore , to determine the features available in a particular mainline release , look at the previous t train release . the t – technology train , gets new features and bug fixes throughout its life , and is therefore potentially less stable than the mainline . ( in releases prior to cisco ios release 12.0 , the p train served as the technology train . ) cisco does n't recommend usage of t train in production environments unless there is urgency to implement a certain t train 's new ios feature . the s – service provider train , runs only on the company 's core router products and is heavily customized for service provider customers . the e – enterprise train , is customized for implementation in enterprise environments . the b – broadband train , supports internet based broadband features . the x ( xa , xb , etc . ) – special release train , contains one-off releases designed to fix a certain bug or provide a new feature . these are eventually merged with one of the above trains . there were other trains from time to time , designed for specific needs — for example , the 12.0aa train contained new code required for cisco 's as5800 product . since 15.0 . starting with cisco ios release 15 , there is just a single train , the m/t train . this train includes both extended maintenance releases and standard maintenance releases . the m releases are extended maintenance releases , and cisco will provide bug fixes for 44 months . the t releases are standard maintenance releases , and cisco will only provide bug fixes for 18 months . security and vulnerabilities . because ios needs to know the cleartext password for certain uses , ( e.g . , chap authentication ) passwords entered into the cli by default are weakly encrypted as 'type 7 ' ciphertext , such as '' router ( config ) username jdoe password 7 0832585b1910010713181f '' . this is designed to prevent '' shoulder-surfing '' attacks when viewing router configurations and is not secure – they are easily decrypted using software called '' getpass '' available since 1995 , or '' ios7crypt '' , ios7crypt a modern variant , although the passwords can be decoded by the router using the '' key chain '' command and entering the type 7 password as the key , and then issuing a '' show key '' command ; the above example decrypts to '' stupidpass '' . insecure.org cisco password decryption however , the program will not decrypt 'type 5 ' passwords or passwords set with the enable secret command , which uses salted md5 hashes . cisco recommends that all cisco ios devices implement the authentication , authorization , and accounting ( aaa ) security model . aaa can use local , radius , and tacacs+ databases . however , a local account is usually still required for emergency situations . at the black hat briefings conference in july 2005 , michael lynn , working for internet security systems at the time , presented information about a vulnerability in ios . cisco had already issued a patch , but asked that the flaw not be disclosed . cisco filed a lawsuit , but settled after an injunction was issued to prevent further disclosures . . ios xr train . for cisco products that required very high availability , such as the cisco crs-1 , the limitations of a monolithic kernel were not acceptable . in addition , competitive router operating systems that emerged 10–20 years after ios , such as juniper 's junos , were designed not to have these limitations . juniper networks : junos cisco 's response was to develop a tree of the cisco ios that offered modularity and memory protection between processes , lightweight threads , preemption ( computing ) and the ability to independently restart failed processes . the ios xr development train used the real-time operating system microkernel ( qnx ) , so a large part of the ios source code was re-written to take advantage of the features offered by the kernel . in 2005 cisco introduced the cisco ios xr network operating system on the cisco 12000 of network routers , extending the microkernel architecture from the crs-1 routers to cisco 's widely deployed core routers . in 2006 cisco introduced ios software modularity , which extends the microkernel architecture into the ios environment , while still providing the software upgrade capabilities .