RADIUS

protocol components . radius is an aaa protocol that manages network access . aaa stands for authentication , authorization and accounting . radius uses two packet types to manage the full aaa process : access-request , which manages authentication and authorization ; and accounting-request , which manages accounting . authentication and authorization are defined in rfc 2865 while accounting is described by rfc 2866 . authentication and authorization . the user or machine sends a request to a network access server ( nas ) to gain access to a particular network resource using access credentials . the credentials are passed to the nas device via the link-layer protocol—for example , point-to-point protocol ( ppp ) in the case of many dialup or dsl providers or posted in an https secure web form . in turn , the nas sends a radius access request message to the radius server , requesting authorization to grant access via the radius protocol . rfc 2865 remote authentication dial in user service ( radius ) this request includes access credentials , typically in the form of username and password or security certificate provided by the user . additionally , the request may contain other information which the nas knows about the user , such as its network address or phone number , and information regarding the user 's physical point of attachment to the nas . the radius server checks that the information is correct using authentication schemes such as pap , chap or eap . the user 's proof of identification is verified , along with , optionally , other information related to the request , such as the user 's network address or phone number , account status , and specific network service access privileges . historically , radius servers checked the user 's information against a locally stored flat file database . modern radius servers can do this , or can refer to external sources—commonly sql , kerberos , ldap , or active directory servers—to verify the user 's credentials . the radius server then returns one of three responses to the nas : 1 ) access reject , 2 ) access challenge , or 3 ) access accept . ; access reject : the user is unconditionally denied access to all requested network resources . reasons may include failure to provide proof of identification or an unknown or inactive user account . ; access challenge : requests additional information from the user such as a secondary password , pin , token , or card . access challenge is also used in more complex authentication dialogs where a secure tunnel is established between the user machine and the radius server in a way that the access credentials are hidden from the nas . ; access accept : the user is granted access . once the user is authenticated , the radius server will often check that the user is authorized to use the network service requested . a given user may be allowed to use a company 's wireless network , but not its vpn service , for example . again , this information may be stored locally on the radius server , or may be looked up in an external source such as ldap or active directory . each of these three radius responses may include a reply-message attribute which may give a reason for the rejection , the prompt for the challenge , or a welcome message for the accept . the text in the attribute can be passed on to the user in a return web page . authorization attributes are conveyed to the nas stipulating terms of access to be granted . for example , the following authorization attributes may be included in an access-accept : the specific ip address to be assigned to the user the address pool from which the user 's ip address should be chosen the maximum length of time that the user may remain connected an access list , priority queue or other restrictions on a user 's access l2tp parameters vlan parameters quality of service ( qos ) parameters when a client is configured to use radius , any user of the client presents authentication information to the client . this might be with a customizable login prompt , where the user is expected to enter their username and password . alternatively , the user might use a link framing protocol such as the point-to-point protocol ( ppp ) , which has authentication packets which carry this information . once the client has obtained such information , it may choose to authenticate using radius . to do so , the client creates an '' access- request '' containing such attributes as the user 's name , the user 's password , the id of the client and the port id which the user is accessing . when a password is present , it is hidden using a method based on the rsa message digest algorithm md5 . accounting . accounting is described in rfc 2866 . when network access is granted to the user by the nas , an accounting start ( a radius accounting request packet containing an acct-status-type attribute with the value '' start '' ) is sent by the nas to the radius server to signal the start of the user 's network access . '' start '' records typically contain the user 's identification , network address , point of attachment and a unique session identifier . rfc 2866 radius accounting periodically , interim update records ( a radius accounting request packet containing an acct-status-type attribute with the value '' interim-update '' ) may be sent by the nas to the radius server , to update it on the status of an active session . '' interim '' records typically convey the current session duration and information on current data usage . finally , when the user 's network access is closed , the nas issues a final accounting stop record ( a radius accounting request packet containing an acct-status-type attribute with the value '' stop '' ) to the radius server , providing information on the final usage in terms of time , packets transferred , data transferred , reason for disconnect and other information related to the user 's network access . typically , the client sends accounting-request packets until it receives an accounting-response acknowledgement , using some retry interval . the primary purpose of this data is that the user can be billed accordingly ; the data is also commonly used for statistical purposes and for general network monitoring . roaming . radius is commonly used to facilitate roaming between isps , for example : by companies which provide a single global set of credentials that are usable on many public networks ; by independent , but collaborating , institutions issuing their own credentials to their own users , that allow a visitor from one to another to be authenticated by their home institution , such as in eduroam . radius facilitates this by the use of realms , which identify where the radius server should forward the aaa requests for processing . realms . a realm is commonly appended to a user 's user name and delimited with an ' ' sign , resembling an email address domain name . this is known as postfix notation for the realm . another common usage is prefix notation , which involves prepending the realm to the username and using '' as a delimiter . modern radius servers allow any character to be used as a realm delimiter , although in practice ' ' and '' are usually used . realms can also be compounded using both prefix and postfix notation , to allow for complicated roaming scenarios ; for example , somedomain.com\username anotherdomain.com could be a valid username with two realms . although realms often resemble domains , it is important to note that realms are in fact arbitrary text and need not contain real domain names . realm formats are standardized in rfc 4282 , which defines a network access identifier ( nai ) in the form of 'user realm ' . in that specification , the 'realm ' portion is required to be a domain name . however , this practice is not always followed . rfc 7542 replaced rfc 4282 in may 2015 . proxy operations . when a radius server receives an aaa request for a user name containing a realm , the server will reference a table of configured realms . if the realm is known , the server will then proxy the request to the configured home server for that domain . the behavior of the proxying server regarding the removal of the realm from the request ( '' stripping '' ) is configuration-dependent on most servers . in addition , the proxying server can be configured to add , remove or rewrite aaa requests when they are proxied over time again . proxy chaining is possible in radius and authentication/authorization and accounting packets are usually routed between a nas device and a home server through a series of proxies . some of advantages of using proxy chains include scalability improvements , policy implementations and capability adjustments . but in roaming scenarios , the nas , proxies and home server could be typically managed by different administrative entities . hence , the trust factor among the proxies gains more significance under such inter-domain applications . further , the absence of end to end security in radius adds to the criticality of trust among the proxies involved . proxy chains are explained in rfc:2607 . security . roaming with radius exposes the users to various security and privacy concerns . more generally , some roaming partners establish a secure tunnel between the radius servers to ensure that users ' credentials can not be intercepted while being proxied across the internet . this is a concern as the md5 hash built into radius is considered insecure . . packet structure . the radius packet data format is shown to the right . the fields are transmitted from left to right , starting with the code , the identifier , the length , the authenticator and the attributes . radius codes ( decimal ) are assigned as follows : . see also . 802.1x diameter ( protocol ) kerberos ( protocol ) security assertion markup language tacacs tacacs+ . references . bibliography . . external links . radius types an analysis of the radius authentication protocol decoding a sniffer-trace of radius transaction using wireshark to debug radius