Simulated annealing

overview . the state of some physical systems , and the function e ( s ) to be minimized , is analogous to the internal energy of the system in that state . the goal is to bring the system , from an arbitrary initial state , to a state with the minimum possible energy . the basic iteration . at each step , the simulated annealing heuristic considers some neighboring state s of the current state s , and probabilistically decides between moving the system to state s or staying in-state s . these probabilities ultimately lead the system to move to states of lower energy . typically this step is repeated until the system reaches a state that is good enough for the application , or until a given computation budget has been exhausted . the neighbours of a state . optimization of a solution involves evaluating the neighbours of a state of the problem , which are new states produced through conservatively altering a given state . for example , in the travelling salesman problem each state is typically defined as a permutation of the cities to be visited , and the neighbors of any state are the set of permutations produced by swapping any two of these cities . the well-defined way in which the states are altered to produce neighboring states is called a '' move '' , and different moves give different sets of neighboring states . these moves usually result in minimal alterations of the last state , in an attempt to progressively improve the solution through iteratively improving its parts ( such as the city connections in the traveling salesman problem ) . simple heuristics like hill climbing , which move by finding better neighbour after better neighbour and stop when they have reached a solution which has no neighbours that are better solutions , can not guarantee to lead to any of the existing better solutions their outcome may easily be just a local optimum , while the actual best solution would be a global optimum that could be different . metaheuristics use the neighbours of a solution as a way to explore the solution space , and although they prefer better neighbours , they also accept worse neighbours in order to avoid getting stuck in local optima ; they can find the global optimum if run for a long enough amount of time . acceptance probabilities . the probability of making the transition from the current state s to a candidate new state s_\mathrm 190 edges , and the diameter of the graph is n-1 . transition probabilities . to investigate the behavior of simulated annealing on a particular problem , it can be useful to consider the transition probabilities that result from the various design choices made in the implementation of the algorithm . for each edge ( s , s ' ) of the search graph , the transition probability is defined as the probability that the simulated annealing algorithm will move to state s ' when its current state is s . this probability depends on the current temperature as specified by , on the order in which the candidate moves are generated by the function , and on the acceptance probability function . ( note that the transition probability is not simply p ( e , e ' , t ) , because the candidates are tested serially . ) . acceptance probabilities . the specification of , , and is partially redundant . in practice , it 's common to use the same acceptance function for many problems , and adjust the other two functions according to the specific problem . in the formulation of the method by kirkpatrick et al . , the acceptance probability function p ( e , e ' , t ) was defined as 1 if e ' , and \exp ( - ( e'-e ) /t ) otherwise . this formula was superficially justified by analogy with the transitions of a physical system ; it corresponds to the metropolis–hastings algorithm , in the case where t 1 and the proposal distribution of metropolis–hastings is symmetric . however , this acceptance probability is often used for simulated annealing even when the function , which is analogous to the proposal distribution in metropolis–hastings , is not symmetric , or not probabilistic at all . as a result , the transition probabilities of the simulated annealing algorithm do not correspond to the transitions of the analogous physical system , and the long-term distribution of states at a constant temperature t need not bear any resemblance to the thermodynamic equilibrium distribution over states of that physical system , at any temperature . nevertheless , most descriptions of simulated annealing assume the original acceptance function , which is probably hard-coded in many implementations of sa . in 1990 , moscato and fontanari , and independently dueck and scheuer , proposed that a deterministic update ( i.e . one that is not based on the probabilistic acceptance rule ) could speed-up the optimization process without impacting on the final quality . moscato and fontanari conclude from observing the analogous of the '' specific heat '' curve of the '' threshold updating '' annealing originating from their study that '' the stochasticity of the metropolis updating in the simulated annealing algorithm does not play a major role in the search of near-optimal minima '' . instead , they proposed that '' the smoothening of the cost function landscape at high temperature and the gradual definition of the minima during the cooling process are the fundamental ingredients for the success of simulated annealing . '' the method subsequently popularized under the denomination of '' threshold accepting '' due to dueck and scheuer 's denomination . in 2001 , franz , hoffmann and salamon showed that the deterministic update strategy is indeed the optimal one within the large class of algorithms that simulate a random walk on the cost/energy landscape . . efficient candidate generation . when choosing the candidate generator , one must consider that after a few iterations of the simulated annealing algorithm , the current state is expected to have much lower energy than a random state . therefore , as a general rule , one should skew the generator towards candidate moves where the energy of the destination state s ' is likely to be similar to that of the current state . this heuristic ( which is the main principle of the metropolis–hastings algorithm ) tends to exclude '' very good '' candidate moves as well as '' very bad '' ones ; however , the former are usually much less common than the latter , so the heuristic is generally quite effective . in the traveling salesman problem above , for example , swapping two consecutive cities in a low-energy tour is expected to have a modest effect on its energy ( length ) ; whereas swapping two arbitrary cities is far more likely to increase its length than to decrease it . thus , the consecutive-swap neighbour generator is expected to perform better than the arbitrary-swap one , even though the latter could provide a somewhat shorter path to the optimum ( with n-1 swaps , instead of n ( n-1 ) /2 ) . a more precise statement of the heuristic is that one should try first candidate states s ' for which p ( e ( s ) , e ( s ' ) , t ) is large . for the '' standard '' acceptance function p above , it means that e ( s ' ) - e ( s ) is on the order of t or less . thus , in the traveling salesman example above , one could use a function that swaps two random cities , where the probability of choosing a city-pair vanishes as their distance increases beyond t . barrier avoidance . when choosing the candidate generator one must also try to reduce the number of '' deep '' local minima—states ( or sets of connected states ) that have much lower energy than all its neighbouring states . such '' closed catchment basins '' of the energy function may trap the simulated annealing algorithm with high probability ( roughly proportional to the number of states in the basin ) and for a very long time ( roughly exponential on the energy difference between the surrounding states and the bottom of the basin ) . as a rule , it is impossible to design a candidate generator that will satisfy this goal and also prioritize candidates with similar energy . on the other hand , one can often vastly improve the efficiency of simulated annealing by relatively simple changes to the generator . in the traveling salesman problem , for instance , it is not hard to exhibit two tours a , b , with nearly equal lengths , such that ( 1 ) a is optimal , ( 2 ) every sequence of city-pair swaps that converts a to b goes through tours that are much longer than both , and ( 3 ) a can be transformed into b by flipping ( reversing the order of ) a set of consecutive cities . in this example , a and b lie in different '' deep basins '' if the generator performs only random pair-swaps ; but they will be in the same basin if the generator performs random segment-flips . cooling schedule . the physical analogy that is used to justify simulated annealing assumes that the cooling rate is low enough for the probability distribution of the current state to be near thermodynamic equilibrium at all times . unfortunately , the relaxation time—the time one must wait for the equilibrium to be restored after a change in temperature—strongly depends on the '' topography '' of the energy function and on the current temperature . in the simulated annealing algorithm , the relaxation time also depends on the candidate generator , in a very complicated way . note that all these parameters are usually provided as black box functions to the simulated annealing algorithm . therefore , the ideal cooling rate can not be determined beforehand , and should be empirically adjusted for each problem . adaptive simulated annealing algorithms address this problem by connecting the cooling schedule to the search progress . other adaptive approach as thermodynamic simulated annealing , automatically adjusts the temperature at each step based on the energy difference between the two states , according to the laws of thermodynamics . restarts . sometimes it is better to move back to a solution that was significantly better rather than always moving from the current state . this process is called restarting of simulated annealing . to do this we set s and e to sbest and ebest and perhaps restart the annealing schedule . the decision to restart could be based on several criteria . notable among these include restarting based on a fixed number of steps , based on whether the current energy is too high compared to the best energy obtained so far , restarting randomly , etc . related methods . metropolis–hastings algorithm ( a.k.a . particle filter ) combined simulated annealing moves with an acceptance-rejection of the best fitted individuals equipped with an interacting recycling mechanism . quantum annealing uses '' quantum fluctuations '' instead of thermal fluctuations to get through high but thin barriers in the target function . stochastic tunneling attempts to overcome the increasing difficulty simulated annealing runs have in escaping from local minima as the temperature decreases , by 'tunneling ' through barriers . tabu search normally moves to neighbouring states of lower energy , but will take uphill moves when it finds itself stuck in a local minimum ; and avoids cycles by keeping a '' taboo list '' of solutions already seen . dual-phase evolution is a family of algorithms and processes ( to which simulated annealing belongs ) that mediate between local and global search by exploiting phase changes in the search space . lionsolver focuses on combining machine learning with optimization , by adding an internal feedback loop to self-tune the free parameters of an algorithm to the characteristics of the problem , of the instance , and of the local situation around the current solution . genetic algorithms maintain a pool of solutions rather than just one . new candidate solutions are generated not only by '' mutation '' ( as in sa ) , but also by '' recombination '' of two solutions from the pool . probabilistic criteria , similar to those used in sa , are used to select the candidates for mutation or combination , and for discarding excess solutions from the pool . memetic algorithms search for solutions by employing a set of agents that both cooperate and compete in the process ; sometimes the agents ' strategies involve simulated annealing procedures for obtaining high quality solutions before recombining them . annealing has also been suggested as a mechanism for increasing the diversity of the search . graduated optimization digressively '' smooths '' the target function while optimizing . ant colony optimization ( aco ) uses many ants ( or agents ) to traverse the solution space and find locally productive areas . the cross-entropy method ( ce ) generates candidates solutions via a parameterized probability distribution . the parameters are updated via cross-entropy minimization , so as to generate better samples in the next iteration . harmony search mimics musicians in improvisation process where each musician plays a note for finding a best harmony all together . stochastic optimization is an umbrella set of methods that includes simulated annealing and numerous other approaches . particle swarm optimization is an algorithm modelled on swarm intelligence that finds a solution to an optimization problem in a search space , or model and predict social behavior in the presence of objectives . the runner-root algorithm ( rra ) is a meta-heuristic optimization algorithm for solving unimodal and multimodal problems inspired by the runners and roots of plants in nature . intelligent water drops algorithm ( iwd ) which mimics the behavior of natural water drops to solve optimization problems parallel tempering is a simulation of model copies at different temperatures ( or hamiltonians ) to overcome the potential barriers . see also . references . further reading . a . das and b . k . chakrabarti ( eds . ) , ftp : //nozdr.ru/biblio/kolxoz/m/mp/das % 20a . , % 20chakrabarti % 20b.k . % 20 ( eds . ) % 20quantum % 20annealing % 20and % 20related % 20optimization % 20methods % 20 ( lnp0679 , % 20springer , % 202005 ) ( 384s ) _mp_.pdf quantum annealing and related optimization methods , lecture note in physics , vol . 679 , springer , heidelberg ( 2005 ) v.vassilev , a.prahova : '' the use of simulated annealing in the control of flexible manufacturing systems '' , international journal information theories & applications , volume 6/1999 . external links . simulated annealing a javascript app that allows you to experiment with simulated annealing . source code included . '' general simulated annealing algorithm '' an open-source matlab program for general simulated annealing exercises . wikiversity : simulated annealing project a wikiversity project . google in superposition of using , not using quantum computer ars technica discusses the possibility that the d-wave computer being used by google may , in fact , be an efficient simulated annealing co-processor .