Block cipher mode of operation

history and standardization . the earliest modes of operation , ecb , cbc , ofb , and cfb ( see below for all ) , date back to 1981 and were specified in fips 81 , des modes of operation . in 2001 , the us national institute of standards and technology ( nist ) revised its list of approved modes of operation by including aes as a block cipher and adding ctr mode in sp800-38a , recommendation for block cipher modes of operation . finally , in january , 2010 , nist added xts-aes in sp800-38e , recommendation for block cipher modes of operation : the xts-aes mode for confidentiality on storage devices . other confidentiality modes exist which have not been approved by nist . for example , cts is ciphertext stealing mode and available in many popular cryptographic libraries . the block cipher modes ecb , cbc , ofb , cfb , ctr , and xts provide confidentiality , but they do not protect against accidental modification or malicious tampering . modification or tampering can be detected with a separate message authentication code such as cbc-mac , or a digital signature . the cryptographic community recognized the need for dedicated integrity assurances and nist responded with hmac , cmac , and gmac . hmac was approved in 2002 as fips 198 , the keyed-hash message authentication code ( hmac ) , cmac was released in 2005 under sp800-38b , recommendation for block cipher modes of operation : the cmac mode for authentication , and gmac was formalized in 2007 under sp800-38d , recommendation for block cipher modes of operation : galois/counter mode ( gcm ) and gmac . the cryptographic community observed that compositing ( combining ) a confidentiality mode with an authenticity mode could be difficult and error prone . they therefore began to supply modes which combined confidentiality and data integrity into a single cryptographic primitive ( an encryption algorithm ) . these combined modes are referred to as authenticated encryption , ae or '' authenc '' . examples of ae modes are ccm ( sp800-38c ) , gcm ( sp800-38d ) , cwc , eax , iapm , and ocb . modes of operation are defined by a number of national and internationally recognized standards bodies . notable standards organizations include nist , iso ( with iso/iec 10116 ) , the iec , the ieee , ansi , and the ietf . initialization vector ( iv ) . an initialization vector ( iv ) or starting variable ( sv ) is a block of bits that is used by several modes to randomize the encryption and hence to produce distinct ciphertexts even if the same plaintext is encrypted multiple times , without the need for a slower re-keying process . an initialization vector has different security requirements than a key , so the iv usually does not need to be secret . for most block cipher modes it is important that an initialization vector is never reused under the same key , i.e . it must be a cryptographic nonce . many block cipher modes have stronger requirements , such as the iv must be random or pseudorandom . some block ciphers have particular problems with certain initialization vectors , such as all zero iv generating no encryption ( for some keys ) . it is recommended to review relevant iv requirements for the particular block cipher mode in relevant specification , for example sp800-38a . for cbc and cfb , reusing an iv leaks some information about the first block of plaintext , and about any common prefix shared by the two messages . for ofb and ctr , reusing an iv causes key bitstream re-use , which breaks security . this can be seen because both modes effectively create a bitstream that is xored with the plaintext , and this bitstream is dependent on the key and iv only . in cbc mode , the iv must be unpredictable ( random or pseudorandom ) at encryption time ; in particular , the ( previously ) common practice of re-using the last ciphertext block of a message as the iv for the next message is insecure ( for example , this method was used by ssl 2.0 ) . if an attacker knows the iv ( or the previous block of ciphertext ) before the next plaintext is specified , they can check their guess about plaintext of some block that was encrypted with the same key before ( this is known as the tls cbc iv attack ) . for some keys an all-zero initialization vector may generate some block cipher modes ( cfb-8 , ofb-8 ) to get internal state stuck at all-zero . for cfb-8 , an all-zero iv and an all-zero plaintext , causes 1/256 of keys to generate no encryption , plaintext is returned as ciphertext . for ofb-8 , using all zero initialization vector will generate no encryption for 1/256 of keys . ofb-8 encryption returns the plaintext unencrypted for affected keys . some modes ( such as aes-siv and aes-gcm-siv ) are built to be more nonce-misuse resistant , i.e . resilient to scenarios in which the randomness generation is faulty or under the control of the attacker . synthetic initialization vector ( siv ) synthesize an internal iv by running an pseudo-random function ( prf ) construction called s2v on the input ( additional data and plaintext ) , preventing any external data from directly controlling the iv . external nonces / iv may be feed into s2v as an additional data field . aes-gcm-siv synthesize an internal iv by running polyval galois mode of authentication on input ( additional data and plaintext ) , followed by an aes operation . padding . a block cipher works on units of a fixed size ( known as a block size ) , but messages come in a variety of lengths . so some modes ( namely ecb and cbc ) require that the final block be padded before encryption . several padding schemes exist . the simplest is to add null bytes to the plaintext to bring its length up to a multiple of the block size , but care must be taken that the original length of the plaintext can be recovered ; this is trivial , for example , if the plaintext is a c style string which contains no null bytes except at the end . slightly more complex is the original des method , which is to add a single one bit , followed by enough zero bits to fill out the block ; if the message ends on a block boundary , a whole padding block will be added . most sophisticated are cbc-specific schemes such as ciphertext stealing or residual block termination , which do not cause any extra ciphertext , at the expense of some additional complexity . schneier and ferguson suggest two possibilities , both simple : append a byte with value 128 ( hex 80 ) , followed by as many zero bytes as needed to fill the last block , or pad the last block with n bytes all with value n . cfb , ofb and ctr modes do not require any special measures to handle messages whose lengths are not multiples of the block size , since the modes work by xoring the plaintext with the output of the block cipher . the last partial block of plaintext is xored with the first few bytes of the last keystream block , producing a final ciphertext block that is the same size as the final partial plaintext block . this characteristic of stream ciphers makes them suitable for applications that require the encrypted ciphertext data to be the same size as the original plaintext data , and for applications that transmit data in streaming form where it is inconvenient to add padding bytes . common modes . authenticated encryption with additional data ( aead ) modes . a number of modes of operation have been designed to combine secrecy and authentication in a single cryptographic primitive . examples of such modes are , , iapm ( mode ) ( iapm ) , ocb , eax , cwc , ccm , and gcm . authenticated encryption modes are classified as single-pass modes or double-pass modes . some single-pass authenticated encryption algorithms , such as ocb mode , are encumbered by patents , while others were specifically designed and released in a way to avoid such encumberment . in addition , some modes also allow for the authentication of unencrypted associated data , and these are called aead ( authenticated encryption with associated data ) schemes . for example , eax mode is a double-pass aead scheme while ocb mode is single-pass . galois/counter ( gcm ) . galois/counter mode ( gcm ) combines the well-known counter mode of encryption with the new galois mode of authentication . the key-feature is the ease of parallel-computation of the galois field multiplication used for authentication . this feature permits higher throughput than encryption algorithms . gcm is defined for block ciphers with a block size of 128 bits . galois message authentication code ( gmac ) is an authentication-only variant of the gcm which can form an incremental message authentication code . both gcm and gmac can accept initialization vectors of arbitrary length . gcm can take full advantage of parallel processing and implementing gcm can make efficient use of an instruction pipeline or a hardware pipeline . the cbc mode of operation incurs pipeline stalls that hamper its efficiency and performance . like in ctr , blocks are numbered sequentially , and then this block number is combined with an iv and encrypted with a block cipher , usually aes . the result of this encryption is then xored with the plaintext to produce the ciphertext . like all counter modes , this is essentially a stream cipher , and so it is essential that a different iv is used for each stream that is encrypted . the ciphertext blocks are considered coefficients of a polynomial which is then evaluated at a key-dependent point , using finite field arithmetic . the result is then encrypted , producing an authentication tag that can be used to verify the integrity of the data . the encrypted text then contains the iv , ciphertext , and authentication tag . counter with cipher block chaining message authentication code ( ccm ) . ccm mode ( counter with cbc-mac ; ccm ) is an authenticated encryption algorithm designed to provide both authentication and confidentiality . ccm mode is only defined for block ciphers with a block length of 128 bits . . synthetic initialization vector ( siv ) . synthetic initialization vector ( siv ) is a nonce-misuse resistant block cipher mode . siv synthesizes an internal iv using the a pseudorandom function s2v . s2v is a keyed hash is based on cmac , and the input to the function is : additional authenticated data ( zero , one or many aad fields are supported ) plaintext authentication key ( k . siv encrypts the s2v output and the plaintext using aes-ctr , keyed with the encryption key ( k . siv can support external nonce-based authenticated encryption , in which case one of the authenticated data fields is utilized for this purpose . rfc5297 specifies that for interoperability purposes the last authenticated data field should be used external nonce . due to the use of two keys , the authentication key k and encryption key k , naming schemes for siv aead-variants may lead to some confusion ; for example aead_aes_siv_cmac_256 refers to aes-siv with two aes-128 keys and not aes-256 . aes-gcm-siv . aes-gcm-siv is a mode of operation for the advanced encryption standard which provides similar performance to galois/counter mode as well as misuse resistance in the event of the reuse of a cryptographic nonce . the construction is defined in rfc 8452 . aes-gcm-siv synthesizes the internal iv . it derives a hash of the additional authenticated data and plaintext using the polyval galois hash function . the hash is then encrypted an aes-key , and used as authentication tag and aes-ctr initialization vector . aes-gcm-siv is an improvement over the very similarly named algorithm gcm-siv , with a few very small changes ( e.g . how aes-ctr is initialized ) , but which yields practical benefits to its security '' this addition allows for encrypting up to 2 50 messages with the same key , compared to the significant limitation of only 2 32 messages that were allowed with gcm-siv . '' . confidentiality only modes . many modes of operation have been defined . some of these are described below . the purpose of cipher modes is to mask patterns which exist in encrypted data , as illustrated in the description of the ecb-weakness . different cipher modes mask patterns by cascading outputs from the cipher block or other globally deterministic variables into the subsequent cipher block . the inputs of the listed modes are summarized in the following table : ( source : sp800-38a table d.2 : summary of effect of bit errors on decryption ) it might be observed , for example , that a one-block error in the transmitted ciphertext would result in a one-block error in the reconstructed plaintext for ecb mode encryption , while in cbc mode such an error would affect two blocks . some felt that such resilience was desirable in the face of random errors ( e.g . , line noise ) , while others argued that error correcting increased the scope for attackers to maliciously tamper with a message . however , when proper integrity protection is used , such an error will result ( with high probability ) in the entire message being rejected . if resistance to random error is desirable , error-correcting codes should be applied to the ciphertext before transmission . other modes and other cryptographic primitives . many more modes of operation for block ciphers have been suggested . some have been accepted , fully described ( even standardized ) , and are in use . others have been found insecure , and should never be used . still others do n't categorize as confidentiality , authenticity , or authenticated encryption – for example key feedback mode and davies–meyer hashing . nist maintains a list of proposed modes for block ciphers at modes development . disk encryption often uses special purpose modes specifically designed for the application . tweakable narrow-block encryption modes ( lrw , xex , and xts ) and wide-block encryption modes ( cmc and eme ) are designed to securely encrypt sectors of a disk ( see disk encryption theory ) . many modes use an initialization vector ( iv ) which , depending on the mode , may have requirements such as being only used once ( a nonce ) or being unpredictable ahead of its publication , etc . reusing an iv with the same key in ctr , gcm or ofb mode results in xoring the same keystream with two or more plaintexts , a clear misuse of a stream , with a catastrophic loss of security . deterministic authenticated encryption modes such as the nist key wrap algorithm and the siv ( rfc 5297 ) aead mode do not require an iv as an input , and return the same ciphertext and authentication tag every time for a given plaintext and key . other iv misuse-resistant modes such as aes-gcm-siv benefit from an iv input , for example in the maximum amount of data that can be safely encrypted with one key , while not failing catastrophically if the same iv is used multiple times . block ciphers can also be used in other cryptographic protocols . they are generally used in modes of operation similar to the block modes described here . as with all protocols , to be cryptographically secure , care must be taken to design these modes of operation correctly . there are several schemes which use a block cipher to build a cryptographic hash function . see one-way compression function for descriptions of several such methods . cryptographically secure pseudorandom number generators ( csprngs ) can also be built using block ciphers . message authentication codes ( macs ) are often built from block ciphers . cbc-mac , omac and pmac are examples . see also . disk encryption message authentication code authenticated encryption one-way compression function . references .