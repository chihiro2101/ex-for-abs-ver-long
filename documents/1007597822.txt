Network Time Protocol

history . in 1979 , network time synchronization technology was used in what was possibly the first public demonstration of internet services running over a trans-atlantic satellite network , at the national computer conference in new york . the technology was later described in the 1981 internet engineering note ( ien ) 173 and a public protocol was developed from it that was documented in . the technology was first deployed in a local area network as part of the hello routing protocol and implemented in the fuzzball router , an experimental operating system used in network prototyping , where it ran for many years . other related network tools were available both then and now . they include the daytime and time protocols for recording the time of events , as well as the icmp timestamp and ip timestamp option . more complete synchronization systems , although lacking ntp 's data analysis and clock disciplining algorithms , include the unix daemon timed , which uses an election algorithm to appoint a server for all the clients ; and the digital time synchronization service ( dtss ) , which uses a hierarchy of servers similar to the ntp stratum model . in 1985 , ntp version 0 ( ntpv0 ) was implemented in both fuzzball and unix , and the ntp packet header and round-trip delay and offset calculations , which have persisted into ntpv4 , were documented in . despite the relatively slow computers and networks available at the time , accuracy of better than 100 milliseconds was usually obtained on atlantic spanning links , with accuracy of tens of milliseconds on ethernet networks . in 1988 , a much more complete specification of the ntpv1 protocol , with associated algorithms , was published in . it drew on the experimental results and clock filter algorithm documented in and was the first version to describe the client-server and peer-to-peer modes . in 1991 , the ntpv1 architecture , protocol and algorithms were brought to the attention of a wider engineering community with the publication of an article by david l . mills in the ieee transactions on communications . in 1989 , was published defining ntpv2 by means of a state machine , with pseudocode to describe its operation . it introduced a management protocol and digital signature scheme which have both survived into ntpv4 , along with the bulk of the algorithm . however the design of ntpv2 was criticized for lacking formal correctness by the dtss community , and the clock selection procedure was modified to incorporate marzullo 's algorithm for ntpv3 onwards . in 1992 , defined ntpv3 . the rfc included an analysis of all sources of error , from the master clock down to the final client , which enabled the calculation of a metric that helps choose the best server where several candidates appear to disagree . broadcast mode was introduced . in subsequent years , as new features were added and algorithm improvements were made , it became apparent that a new protocol version was required . in 2010 , was published containing a proposed specification for ntpv4 . the protocol has significantly moved on since then , and as of 2014 , an updated rfc has yet to be published . following the retirement of mills from the university of delaware , the reference implementation is currently maintained as an open source project led by harlan stenn . . clock strata . ntp uses a hierarchical , semi-layered system of time sources . each level of this hierarchy is termed a stratum and is assigned a number starting with zero for the reference clock at the top . a server synchronized to a stratum n server runs at stratum n + 1 . the number represents the distance from the reference clock and is used to prevent cyclical dependencies in the hierarchy . stratum is not always an indication of quality or reliability ; it is common to find stratum 3 time sources that are higher quality than other stratum 2 time sources . a brief description of strata 0 , 1 , 2 and 3 is provided below . ; stratum 0 : these are high-precision timekeeping devices such as atomic clocks , gps or other radio clocks . they generate a very accurate pulse per second signal that triggers an interrupt and timestamp on a connected computer . stratum 0 devices are also known as reference clocks . ntp servers can not advertise themselves as stratum 0 . a stratum field set to 0 in ntp packet indicates an unspecified stratum . rfc 5905 , p . 21 ; stratum 1 : these are computers whose system time is synchronized to within a few microseconds of their attached stratum 0 devices . stratum 1 servers may peer with other stratum 1 servers for sanity check and backup . they are also referred to as primary time servers . ; stratum 2 : these are computers that are synchronized over a network to stratum 1 servers . often a stratum 2 computer queries several stratum 1 servers . stratum 2 computers may also peer with other stratum 2 computers to provide more stable and robust time for all devices in the peer group . ; stratum 3 : these are computers that are synchronized to stratum 2 servers . they employ the same algorithms for peering and data sampling as stratum 2 , and can themselves act as servers for stratum 4 computers , and so on . the upper limit for stratum is 15 ; stratum 16 is used to indicate that a device is unsynchronized . the ntp algorithms on each computer interact to construct a bellman-ford shortest-path spanning tree , to minimize the accumulated round-trip delay to the stratum 1 servers for all the clients . in addition to stratum , the protocol is able to identify the synchronization source for each server in terms of reference identifier ( refid ) . , where : t 0 is the client 's timestamp of the request packet transmission , : t 1 is the server 's timestamp of the request packet reception , : t 2 is the server 's timestamp of the response packet transmission and : t 3 is the client 's timestamp of the response packet reception . to derive the expression for the offset , note that for the request packet , : t_0 + \theta + \delta/2 t_1 and for the response packet , : t_3 + \theta - \delta/2 t_2 solving for θ yields the definition of the time offset . the values for θ and δ are passed through filters and subjected to statistical analysis . outliers are discarded and an estimate of time offset is derived from the best three remaining candidates . the clock frequency is then adjusted to reduce the offset gradually , creating a feedback loop . accurate synchronization is achieved when both the incoming and outgoing routes between the client and the server have symmetrical nominal delay . if the routes do not have a common nominal delay , a systematic bias exists of half the difference between the forward and backward travel times . . software implementations . reference implementation . the ntp reference implementation , along with the protocol , has been continuously developed for over 20 years . backwards compatibility has been maintained as new features have been added . it contains several sensitive algorithms , especially to discipline the clock , that can misbehave when synchronized to servers that use different algorithms . the software has been ported to almost every computing platform , including personal computers . it runs as a daemon called ntpd under unix or as a service under windows . reference clocks are supported and their offsets are filtered and analysed in the same way as remote servers , although they are usually polled more frequently . this implementation was audited in 2017 , finding numerous potential security issues . . sntp . simple network time protocol ( sntp ) is a less complex implementation of ntp , using the same protocol but without requiring the storage of state over extended periods of time . it is used in some embedded systems and in applications where full ntp capability is not required . . windows time . all microsoft windows versions since windows 2000 include the windows time service ( w32time ) , which has the ability to synchronize the computer clock to an ntp server . w32time was originally implemented for the purpose of the kerberos version 5 authentication protocol , which required time to be within 5 minutes of the correct value to prevent replay attacks . the version in windows 2000 and windows xp only implements sntp , and violates several aspects of the ntp version 3 standard . beginning with windows server 2003 and windows vista , a compliant implementation of ntp is included . microsoft states that w32time can not reliably maintain time synchronization with one second accuracy . if higher accuracy is desired , microsoft recommends using a newer version of windows or different ntp implementation . windows 10 and windows server 2016 support 1 & nbsp ; ms time accuracy under certain operating conditions . . openntpd . in 2004 , henning brauer presented openntpd , an ntp implementation with a focus on security and encompassing a privilege separated design . whilst it is aimed more closely at the simpler generic needs of openbsd users , it also includes some protocol security improvements while still being compatible with existing ntp servers . a portable version is available in linux package repositories . ntimed . a new ntp client , ntimed , was started by poul-henning kamp in 2014 . the new implementation is sponsored by the linux foundation as a replacement for the reference implementation , as it was determined to be easier to write a new implementation from scratch than to reduce the size of the reference implementation . although it has not been officially released , ntimed can synchronize clocks reliably . . ntpsec . ntpsec is a fork of the reference implementation that has been systematically security-hardened . the fork point was in june 2015 and was in response to a rash of compromises in 2014 . the first production release shipped in october 2017 . between removal of unsafe features , removal of support for obsolete hardware , and removal of support for obsolete unix variants , ntpsec has been able to pare away 75 % of the original codebase , making the remainder more auditable . a 2017 audit of the code showed eight security issues , including two that were not present in the original reference implementation , but ntpsec did not suffer from eight other issues that remained in the reference implementation . . chrony . chrony comes by default in red hat distributions and is available in the ubuntu repositories . chrony is aimed at ordinary computers , which are unstable , go into sleep mode or have intermittent connection to the internet . chrony is also designed for virtual machines , a much more unstable environment . it is characterized by low resource consumption ( cost ) and supports precision time protocol hardware for greater timestamp precision . it has two main components : chronyd , a daemon that is executed when the computer starts , and chronyc , a command line interface to the user for its configuration . it has been evaluated as very safe and with just a few incidents , its advantage is the versatility of its code , written from scratch to avoid unnecessary complexity . chrony is available under gnu general public license version 2 , was created by richard curnow in 1997 and is currently maintained by miroslav lichvar . . leap seconds . on the day of a leap second event , ntpd receives notification from either a configuration file , an attached reference clock , or a remote server . although the ntp clock is actually halted during the event , because of the requirement that time must appear to be monotonically increasing , any processes that query the system time cause it to increase by a tiny amount , preserving the order of events . if a negative leap second should ever become necessary , it would be deleted with the sequence 23:59:58 , 00:00:00 , skipping 23:59:59 . an alternative implementation , called leap smearing , consists in introducing the leap second incrementally during a period of 24 hours , from noon to noon in utc time . this implementation is used by google ( both internally and on their public ntp servers ) and by amazon aws . . security concerns . only a few other security problems have been identified in the reference implementation of the ntp codebase , but those that appeared in 2009 were cause for significant concern . the protocol has been undergoing revision and review over its entire history . the codebase for the reference implementation has undergone security audits from several sources for several years . a stack buffer overflow exploit was discovered and patched in 2014 . apple was concerned enough about this vulerability that it used its auto-update capability for the first time . some implementation errors are basic , such as a missing return statement in a routine , that can lead to unlimited access to systems that are running some versions of ntp in the root daemon . systems that do not use the root daemon , such as bsd , are not subject to this flaw . a 2017 security audit of three ntp implementations , conducted on behalf of the linux foundation 's core infrastructure initiative , suggested that both ntp ntp securitynotice page nvd nist product search ntp and ntpsec nvd nist product search ntpsec were more problematic than chrony nvd nist product search chrony from a security standpoint . ntp servers can be susceptible to man-in-the-middle attacks unless packets are cryptographically signed for authentication . the computational overhead involved can make this impractical on busy servers , particularly during denial of service attacks . ntp message spoofing from a man-in-the-middle attack can be used to move clocks on client computers and allow a number of attacks based on bypassing of cryptographic key expiration . some of the services affected by fake ntp messages identified are tls , dnssec , various caching schemes ( such as dns cache ) , bgp , bitcoin and a number of persistent login schemes . ntp has been used in distributed denial of service attacks . a small query is sent to an ntp server with the return address spoofed to be the target address . similar to the dns amplification attack , the server responds with a much larger reply that allows an attacker to substantially increase the amount of data being sent to the target . to avoid participating in an attack , ntp server software can be upgraded or servers can be configured to ignore external queries .