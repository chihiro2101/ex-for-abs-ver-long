Domain Name System-based Blackhole List

history . the first dnsbl was the real-time blackhole list ( rbl ) , created in 1997 , at first as a border gateway protocol ( bgp ) feed by paul vixie , and then as a dnsbl by eric ziegast as part of vixie 's mail abuse prevention system ( maps ) ; dave rand at abovenet was its first subscriber . the very first version of the rbl was not published as a dnsbl , but rather a list of networks transmitted via bgp to routers owned by subscribers so that network operators could drop all tcp/ip traffic for machines used to send spam or host spam supporting services , such as a website . the inventor of the technique later commonly called a dnsbl was eric ziegast while employed at vixie enterprises . the term '' blackhole '' refers to a networking black hole , an expression for a link on a network that drops incoming traffic instead of forwarding it normally . the intent of the rbl was that sites using it would refuse traffic from sites which supported spam — whether by actively sending spam , or in other ways . before an address would be listed on the rbl , volunteers and maps staff would attempt repeatedly to contact the persons responsible for it and get its problems corrected . such effort was considered very important before blackholing all network traffic , but it also meant that spammers and spam supporting isps could delay being put on the rbl for long periods while such discussions went on . later , the rbl was also released in a dnsbl form and paul vixie encouraged the authors of sendmail and other mail software to implement rbl support in their clients . these allowed the mail software to query the rbl and reject mail from listed sites on a per-mail-server basis instead of blackholing all traffic . soon after the advent of the rbl , others started developing their own lists with different policies . one of the first was alan brown 's open relay behavior-modification system ( orbs ) . this used automated testing to discover and list mail servers running as open mail relays—exploitable by spammers to carry their spam . orbs was controversial at the time because many people felt running an open relay was acceptable , and that scanning the internet for open mail servers could be abusive . in 2003 , a number of dnsbls came under denial-of-service attacks ( dos ) . since no party has admitted to these attacks nor been discovered responsible , their purpose is a matter of speculation . however , many observers believe the attacks are perpetrated by spammers in order to interfere with the dnsbls ' operation or hound them into shutting down . in august 2003 , the firm osirusoft , an operator of several dnsbls including one based on the spews data set , shut down its lists after suffering weeks of near-continuous attack . technical specifications for dnsbls came relatively late in rfc5782 . . uri dnsbls . a uniform resource identifier ( uri ) dnsbl is a dnsbl that lists the domain names and sometimes also ip addresses which are found in the '' clickable '' links contained in the body of spams , but generally not found inside legitimate messages . uri dnsbls were created when it was determined that much spam made it past spam filters during that short time frame between the first use of a spam-sending ip address and the point where that sending ip address was first listed on major sending-ip-based dnsbls . in many cases , such elusive spams contain in their links domain names or ip addresses ( collectively referred to as a uris ) where that uri was already spotted in previously caught spam and where that uri is not found in non-spam e-mail . therefore , when a spam filter extracts all uris from a message and checks them against a uri dnsbl , then the spam can be blocked even if the sending ip for that spam has not yet been listed on any sending ip dnsbl . of the three major uri dnsbls , the oldest and most popular is surbl . after surbl was created , some of the volunteers for surbl started the second major uri dnsbl , uribl . in 2008 , another long-time surbl volunteer started another uri dnsbl , ivmuri . the spamhaus project provides the spamhaus domain block list ( dbl ) which they describe as domains '' found in spam messages '' . the dbl is intended as both a uribl and rhsbl , to be checked against both domains in a message 's envelope and headers and domains in urls in message bodies . unlike other uribls , the dbl only lists domain names , not ip addresses , since spamhaus provides other lists of ip addresses . uri dnsbls are often confused with rhsbls ( right hand side bls ) . but they are different . a uri dnsbl lists domain names and ips found in the body of the message . an rhsbl lists the domain names used in the '' from '' or '' reply-to '' e-mail address . rhsbls are of debatable effectiveness since many spams either use forged '' from '' addresses or use '' from '' addresses containing popular freemail domain names , such as gmail.com , yahoo.com , or hotmail.com uri dnsbls are more widely used than rhsbls , are very effective , and are used by the majority of spam filters . principle . to operate a dnsbl requires three things : a domain to host it under , a nameserver for that domain , and a list of addresses to publish . it is possible to serve a dnsbl using any general-purpose dns server software . however this is typically inefficient for zones containing large numbers of addresses , particularly dnsbls which list entire classless inter-domain routing netblocks . for the large resource consumption when using software designed as the role of a domain name server , there are role-specific software applications designed specifically for servers with a role of a dns blacklist . the hard part of operating a dnsbl is populating it with addresses . dnsbls intended for public use usually have specific , published policies as to what a listing means , and must be operated accordingly to attain or sustain public confidence . dnsbl queries . when a mail server receives a connection from a client , and wishes to check that client against a dnsbl ( let 's say , dnsbl.example.net ) , it does more or less the following : take the client 's ip address—say , 192.168.42.23—and reverse the order of octets , yielding 23.42.168.192 . append the dnsbl 's domain name : 23.42.168.192.dnsbl.example.net . look up this name in the dns as a domain name ( '' a '' record ) . this will return either an address , indicating that the client is listed ; or an '' nxdomain '' ( '' no such domain '' ) code , indicating that the client is not . optionally , if the client is listed , look up the name as a text record ( '' txt '' record ) . most dnsbls publish information about why a client is listed as txt records . looking up an address in a dnsbl is thus similar to looking it up in reverse-dns . the differences are that a dnsbl lookup uses the '' a '' rather than '' ptr '' record type , and uses a forward domain ( such as dnsbl.example.net above ) rather than the special reverse domain in-addr.arpa . there is an informal protocol for the addresses returned by dnsbl queries which match . most dnsbls return an address in the 127.0.0.0/8 ip loopback network . the address 127.0.0.2 indicates a generic listing . other addresses in this block may indicate something specific about the listing—that it indicates an open relay , proxy , spammer-owned host , etc . for details see rfc 5782 . uri dnsbl . a uri dnsbl query ( and an rhsbl query ) is fairly straightforward . the domain name to query is prepended to the dns list host as follows : example.net.dnslist.example.com where dnslist.example.com is the dns list host and example.net is the queried domain . generally if an a record is returned the name is listed . dnsbl policies . different dnsbls have different policies . dnsbl policies differ from one another on three fronts : goals . what does the dnsbl seek to list ? is it a list of open-relay mail servers or open proxies—or of ip addresses known to send spam—or perhaps of ip addresses belonging to isps that harbor spammers ? nomination . how does the dnsbl discover addresses to list ? does it use nominations submitted by users ? spam-trap addresses or honeypots ? listing lifetime . how long does a listing last ? are they automatically expired , or only removed manually ? what can the operator of a listed host do to have it delisted ? . types . in addition to the different types of listed entities ( ip addresses for traditional dnsbls , host and domain names for rhsbls , uris for uribls ) there is a wide range of semantic variations between lists as to what a listing means . list maintainers themselves have been divided on the issues of whether their listings should be seen as statements of objective fact or subjective opinion and on how their lists should best be used . as a result , there is no definitive taxonomy for dnsbls . some names defined here ( e.g . '' yellow '' and '' nobl '' ) are varieties that are not in widespread use and so the names themselves are not in widespread use , but should be recognized by many spam control specialists . ; white list : a listing is an affirmative indication of essentially absolute trust ; black list : a listing is a negative indication of essentially absolute distrust ; grey list : most frequently seen as one word ( greylist or greylisting ) not involving dnsbls directly , but using temporary deferral of mail from unfamiliar sources to allow for the development of a public reputation ( such as dnsbl listings ) or to discourage speed-focused spamming . occasionally used to refer to actual dnsbls on which listings denote distinct non-absolute levels and forms of trust or distrust . ; yellow list : a listing indicates that the source is known to produce a mixture of spam and non-spam to a degree that makes checking other dnsbls of any sort useless . ; nobl list : a listing indicates that the source is believed to send no spam and should not be subjected to blacklist testing , but is not quite as trusted as a whitelisted source . usage . most message transfer agents ( mta ) as of july 2016 , 30 out of 41 mtas listed in comparison of mail servers antispam features are known to support dnsbl , 1 does n't , and the remaining 10 are not known . can be configured to absolutely block or ( less commonly ) to accept email based on a dnsbl listing . this is the oldest usage form of dnsbls . depending on the specific mta , there can be subtle distinctions in configuration that make list types such as yellow and nobl useful or pointless because of how the mta handles multiple dnsbls . a drawback of using the direct dnsbl support in most mtas is that sources not on any list require checking all of the dnsbls being used with relatively little utility to caching the negative results . in some cases this can cause a significant slowdown in mail delivery . using white , yellow , and nobl lists to avoid some lookups can be used to alleviate this in some mtas . dnsbls can be used in rule based spam analysis software like spamassassin where each dnsbl has its own rule . each rule has a specific positive or negative weight which is combined with other types of rules to score each message . this allows for the use of rules that act ( by whatever criteria are available in the specific software ) to '' whitelist '' mail that would otherwise be rejected due to a dnsbl listing or due to other rules . this can also have the problem of heavy dns lookup load for no useful results , but it may not delay mail as much because scoring makes it possible for lookups to be done in parallel and asynchronously while the filter is checking the message against the other rules . it is possible with some toolsets to blend the binary testing and weighted rule approaches . one way to do this is to first check white lists and accept the message if the source is on a white list , bypassing all other testing mechanisms . a technique developed by junk email filter uses yellow lists and nobl lists to mitigate the false positives that occur routinely when using black lists that are not carefully maintained to avoid them . some dnsbls have been created for uses other than filtering email for spam , but rather for demonstration , informational , rhetorical , and testing control purposes . examples include the '' no false negatives list , '' '' lucky sevens list , '' '' fibonacci 's list , '' various lists encoding geoip information , and random selection lists scaled to match coverage of another list , useful as a control for determining whether that list 's effects are distinguishable from random rejections . criticism . some end-users and organizations have concerns regarding the concept of dnsbls or the specifics of how they are created and used . some of the criticisms include : legitimate emails blocked along with spam from shared mailservers . when an isp 's shared mailserver has one or more compromised machines sending spam , it can become listed on a dnsbl . end-users assigned to that same shared mailserver may find their emails blocked by receiving mailservers using such a dnsbl . in may 2016 , the sorbs system was blocking the smtp servers of telstra australia , australia 's largest internet service provider . this is no surprise as at any one time , there would be thousands of computers connected to this mail server infected by zombie type viruses sending spam . the effect is to cut off all the legitimate emails from the users of the telstra australia system . lists of dynamic ip addresses . this type of dnsbl lists ip addresses submitted by isps as dynamic and therefore presumably unsuitable to send email directly ; the end-user is supposed to use the isp 's mailserver for all sending of email . but these lists can also accidentally include static addresses , which may be legitimately used by small-business owners or other end-users to host small email servers . lists that include '' spam-support operations '' , such as maps rbl . a spam-support operation is a site that may not directly send spam , but provides commercial services for spammers , such as hosting of web sites that are advertised in spam . refusal to accept mail from spam-support operations is intended as a boycott to encourage such sites to cease doing business with spammers , at the expense of inconveniencing non-spammers who use the same site as spammers . some lists have unclear listing criteria and delisting may not happen automatically nor quickly . a few dnsbl operators will request payment ( e.g . uceprotect.net ) or donation ( e.g . sorbs ) . some of the many listing/delisting policies can be found in the comparison of dns blacklists article . because lists have varying methods for adding ip addresses and/or uris , it can be difficult for senders to configure their systems appropriately to avoid becoming listed on a dnsbl . for example , the uceprotect dnsbl seems to list ip addresses merely once they have validated a recipient address or established a tcp connection , even if no spam message is ever delivered . despite the criticisms , few people object to the principle that mail-receiving sites should be able to reject undesired mail systematically . one person who does is john gilmore , who deliberately operates an open mail relay . gilmore accuses dnsbl operators of violating antitrust law . : for joe blow to refuse emails is legal ( though it 's bad policy , akin to '' shooting the messenger '' ) . but if joe and ten million friends all gang up to make a blacklist , they are exercising illegal monopoly power . a number of parties , such as the electronic frontier foundation and peacefire , have raised concerns about some use of dnsbls by isps . one joint statement issued by a group including eff and peacefire addressed '' stealth blocking '' , in which isps use dnsbls or other spam-blocking techniques without informing their clients . spammers have pursued lawsuits against dnsbl operators on similar grounds : in 2003 , a newly formed corporation calling itself '' emarketersamerica '' filed suit against a number of dnsbl operators in florida court . backed by spammer eddy marin , the company claimed to be a trade organization of '' email marketers '' and that dnsbl operators spamhaus and spews were engaged in restraint of trade . the suit was eventually dismissed for lack of standing . in 2006 , a us court ordered spamhaus to pay 11,715,000 in damages to the spammer '' e360 insight llc '' . the order was a default judgment , as spamhaus ( which is a uk operation ) had refused to recognize the court 's jurisdiction and did not defend itself in the e360 lawsuit . this decision was later overturned by an appeals court .