Exim

origin . the first version of exim was written in 1995 by philip hazel for use in the university of cambridge computing service â€™ s e-mail systems . the name initially stood for experimental internet mailer . philip hazel the exim smtp mail server ( preface ) it was originally based on an older mta , smail-3 , but it has since diverged from smail-3 in its design and philosophy . . design model . exim , like smail , still follows the sendmail design model , where a executable controls all the facilities of the mta . exim has well-defined stages during which it gains or loses privileges . exim 's security has had a number of serious security problems diagnosed over the years . since the redesigned version 4 was released there have been four remote code execution flaws and one conceptual flaw concerning how much trust it is appropriate to place in the run-time user ; the latter was fixed in a security lockdown in revision 4.73 , one of the very rare occasions when exim has broken backward compatibility with working configurations . configuration . exim is highly configurable and therefore has features that are lacking in other mtas . it has always had substantial facilities for mail policy controls , providing facilities for the administrator to control who may send or relay mail through the system . in version 4.x this has matured to an access control list based system allowing very detailed and flexible controls . the integration of a framework for content scanning , which allowed for easier integration of anti-virus and anti-spam measures , happened in the 4.x releases . this made exim very suitable for enforcing diverse mail policies . the configuration is done through a ( typically single ) configuration file , which must include the main section with generic settings and variables , as well as the following optional sections : the access control list ( acl ) section which defines behaviour during the smtp sessions , the routers section which includes a number of processing elements which operate on addresses ( the delivery logic ) , each tried in turn , the transports section which includes processing elements which transmit actual messages to destinations , the retry section where policy on retrying messages that fail to get delivered at the first attempt is defined , the rewrite section , defining if and how the mail system will rewrite addresses on incoming e-mails the authenticators ' section with settings for smtp auth , a rule per auth mechanism . the configuration file permits inclusion of other files , which leads to two different configuration styles . configuration styles . there are two main schools of configuration style for exim . the native school keeps the exim configuration in one file and external files are only used as data sources ; this is strongly influenced by philip hazel 's preferences and notes on performance as the configuration file is re-read at every exec , which happens post-fork for receiving inbound connections and at delivery . the second commonly encountered style is the debian style which is designed to make it easier to have an installed application automatically provide mail integration support without having the administrator edit configuration files . there are a couple of variants of this and debian provide documentation of their approach as part of the packages . in these approaches , a debconf configuration file is used to build the exim configuration file , together with templates and directories with configuration fragments . the meta-config is tuned with macros which have names starting . when the supervisor for exim is invoked it re-processes the configuration files producing a single-file configuration that the exim binary uses . because the debian approach diverges significantly from the exim one it is common to find a lack of support for the debian approach on the regular exim mailing-lists , with people advised to ask debian questions on the debian-managed mailing-list . the ubuntu packaging still advises users to use the debian mailing-list . documentation . exim has extensive and exhaustive documentation ; if a feature or some behaviour is not documented then this is classed as a bug . the documentation consists of the exim specification and two ancillary files : the experimental specification for features that might disappear and '' newstuff '' , which tracks very recent changes that might not have been fully integrated into the main specification . the exim specification is available in multiple formats , including online in html and in plain-text for fast searching . the document preparation system ensures that the plain-text format is highly usable . performance . exim has been deployed in busy environments , often handling thousands of emails per hour efficiently . exim is designed to deliver email immediately , without queueing . however , its queue processing performance is comparatively poor when queues are large ( which happens rarely on typical low-traffic sites but can happen regularly on high-traffic sites ) . unlike qmail , postfix , and zmailer , exim does not have a central queue manager ( i.e . an equivalent of qmail-send , qmgr , or scheduler ) . there is thus no centralized load balancing , either of queue processing ( leading to disproportionate amounts of time being spent on processing the same queue entries repeatedly ) or of system-wide remote transport concurrency ( leading to a '' thundering herd problem '' when multiple messages addressed to a single domain are submitted at once ) . in philip hazel 's own words : news : //news.gmane.org/pine.soc.4.61.0412010932030.9481 % 40draco.cus.cam.ac.uk posting by philip hazel : '' the bottom line is that exim does not perform particularly well in environments where the queue regularly gets very large . it was never designed for this ; deliveries from the queue were always intended to be 'exceptions ' rather than the norm . '' in 1997 , hazel replaced exim 's posix regular expression library written by henry spencer with a new library he developed called pcre ( perl compatible regular expressions ) . perl regular expressions are much more powerful than posix and other common regular expressions , and pcre has become popular in applications other than exim . updates . historically , exim used a peculiar version numbering scheme where the first decimal digit is updated only whenever the main documentation is fully up to date ; until that time , changes were accumulated in the file newstuff . for this reason , a 0.01 version change can signify important changes , not necessarily fully documented . [ exim & 93 ; exim 4.21 released in 2005 , changes to exim 's version numbering were on the table of discussion . in more recent times , the document preparation system for exim has been overhauled and changes are much more likely to just go immediately into the exim specification . the 4.70 release just followed on naturally from 4.69 and the 4.6x releases had up-to-date documentation . philip hazel retired from the university of cambridge in 2007 and maintenance of exim transitioned to a team of maintainers . exim continues to be maintained actively , with frequent releases . see also . comparison of mail servers list of mail servers . references . bibliography . . external links . exim wiki debian information on their packaging of exim