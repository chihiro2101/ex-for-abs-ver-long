Curry's paradox

in natural language . claims of the form '' if a , then b '' are called conditional claims . curry 's paradox uses a particular kind of self-referential conditional sentence , as demonstrated in this example : even though germany does not border china , the example sentence certainly is a natural-language sentence , and so the truth of that sentence can be analyzed . the paradox follows from this analysis . the analysis consists of two steps . first , common natural-language proof techniques can be used to prove that the example sentence is true . second , the truth of the example sentence can be used to prove that germany borders china . because germany does not border china , this suggests that there has been an error in one of the proofs . the claim '' germany borders china '' could be replaced by any other claim , and the sentence would still be provable . thus every sentence appears to be provable . because the proof uses only well-accepted methods of deduction , and because none of these methods appears to be incorrect , this situation is paradoxical . a parallel example is explained in the stanford encyclopedia of philosophy . see . informal proof . the standard method for proving conditional sentences ( sentences of the form '' if a , then b '' ) is called a '' conditional proof '' . in this method , in order to prove '' if a , then b '' , first a is assumed and then with that assumption b is shown to be true . to produce curry 's paradox , as described in the two steps above , apply this method to the sentence '' if this sentence is true , then germany borders china '' . here a , '' this sentence is true '' , refers to the overall sentence , while b is '' germany borders china '' . so , assuming a is the same as assuming '' if a , then b '' . therefore , in assuming a , we have assumed both a and '' if a , then b '' . therefore b is true , by modus ponens , and we have proven '' if this sentence is true , then 'germany borders china ' is true . '' in the usual way , by assuming the hypothesis and deriving the conclusion . now , because we have proved '' if this sentence is true , then 'germany borders china ' is true '' , then we can again apply modus ponens , because we know that the claim '' this sentence is true '' is correct . in this way , we can deduce that germany borders china . formal proof . sentential logic . the example in the previous section used unformalized , natural-language reasoning . curry 's paradox also occurs in some varieties of formal logic . in this context , it shows that if we assume there is a formal sentence ( x → y ) , where x itself is equivalent to ( x → y ) , then we can prove y with a formal proof . one example of such a formal proof is as follows . for an explanation of the logic notation used in this section , refer to the logic notation . x : ( x → y ) x → x x → ( x → y ) x → y x y an alternative proof is via peirce 's law . if x x → y then ( x → y ) → x . this together with peirce 's law ( ( x → y ) → x ) → x and modus ponens implies x and subsequently y ( as in above proof ) . therefore , if y is an unprovable statement in a formal system , there is no statement x in that system such that x is equivalent to the implication ( x → y ) . by contrast , the previous section shows that in natural ( unformalized ) language , for every natural language statement y there is a natural language statement z such that z is equivalent to ( z → y ) in natural language . namely , z is '' if this sentence is true then y '' . in specific cases where the classification of y is already known , few steps are needed to reveal the contradiction . for example , when y is '' germany borders china , '' it is known that y is false . x ( x → y ) x ( x → false ) x ( ¬x ∨ false ) x ¬x . naive set theory . even if the underlying mathematical logic does not admit any self-referential sentences , certain forms of naive set theory are still vulnerable to curry 's paradox . in set theories that allow unrestricted comprehension , we can nevertheless prove any logical statement y by examining the set can only represent +2 . however there is no convenient way to restrict the lambda abstraction to one value or to assure that there is a value . lambda calculus allows recursion by passing the same function that is called as a parameter . this allows situations where f\ x y has multiple or no solutions for f . lambda calculus may be considered as part of mathematics if only lambda abstractions that represent a single solution to an equation are allowed . other lambda abstractions are incorrect in mathematics . curry 's paradox and other paradoxes arise in lambda calculus because of the inconsistency of lambda calculus considered as a deductive system . see also deductive lambda calculus . domain of lambda calculus terms . lambda calculus is a consistent theory in its own domain . however , it is not consistent to add the lambda abstraction definition to mathematics . lambda terms describe values from the lambda calculus domain . each lambda term has a value in that domain . when translating expressions from mathematics to lambda calculus , the domain of lambda calculus terms is not always isomorphic to the domain of the mathematical expressions . this lack of isomorphism is the source of the apparent contradictions . resolution in unrestricted languages . there are many language constructs that implicitly invoke an equation that may have none or many solutions . the sound resolution to this problem is to syntactically link these expressions to an existentially quantified variable . the variable represents the multiple values in a way that is meaningful in common human reasoning , but is also valid in mathematics . for example , a natural language that allows the eval function is not mathematically consistent . but each call to eval in that natural language may be translated into mathematics in a way that is consistent . the translation of eval ( s ) into mathematics is so where s '' eval ( s ) → y '' , if y is false , then the x x → y is false , but this is a falsehood , not a paradox . the existence of the variable x was implicit in the natural language . the variable x is created when the natural language is translated into mathematics . this allows us to use natural language , with natural semantics , while maintaining mathematical integrity . resolution in formal logic . the argument in formal logic starts with assuming the validity of naming ( x → y ) as x . however , this is not a valid starting point . first we must deduce the validity of the naming . the following theorem is easily proved and represents such a naming : in the above statement the formula a is named as x . now attempt to instantiate the formula with ( x → y ) for a . however , this is not possible , as the scope of \exists x is inside the scope of \forall a . the order of the quantifiers may be reversed using skolemization : however , now instantiation gives which is not the starting point for the proof and does not lead to a contradiction . there are no other instantiations for a that lead to the starting point of the paradox . resolution in set theory . in zermelo–fraenkel set theory ( zfc ) , the axiom schema of specification is replaced with a group of axioms that allow construction of sets . so curry 's paradox can not be stated in zfc . zfc evolved in response to russell 's paradox . see also . russell 's paradox girard 's paradox kleene–rosser paradox liar paradox list of paradoxes richard 's paradox zermelo–fraenkel set theory fixed-point combinator deductive lambda calculus let expression . references . external links . penguins rule the universe : a proof that penguins rule the universe , a brief and entertaining discussion of curry 's paradox .