what is a pattern ? when a designer designs something – whether a house , computer program , or lamp – they must make many decisions about how to solve problems each pattern has a name , a descriptive entry , and some cross-references , much like a dictionary entry a documented pattern should explain why that solution is good in the pattern 's contexts patterns might be invented or found and studied , such as the naturally occurring patterns of design that characterize human environments like all languages , a pattern language has vocabulary , syntax , and grammar – but a pattern language applies to some complex activity other than communication in pattern languages for design , the parts break down in this way : the language description – the vocabulary – is a collection of named , described solutions to problems in a field of interest so , for example , the language for architecture describes items like : settlements , buildings , rooms , windows , latches , etc each solution includes syntax , a description that shows where the solution fits in a larger , more comprehensive or more abstract design for example , rooms have ways to get light , and ways to get people in and out in christopher alexander 's book a pattern language , the patterns are in decreasing order by size , with a separate alphabetic index the web of relationships in the index of the language provides many paths through the design process this simplifies the design work because designers can start the process from any part of the problem they understand and work toward the unknown parts just as words must have grammar and semantic relationships to each other in order to make a spoken language useful , design patterns must be related to each other in position and utility order to form a pattern language occasionally , the smaller problems have no solution , and a different larger solution must be selected when this happens , it 's common for a designer to realize that the problem is actually part of a larger solution in the language , therefore , each pattern has to indicate its relationships to other patterns and to the language as a whole this gives the designer using the language a great deal of guidance about the related problems that must be solved the most difficult part of having an outside expert apply a pattern language is in fact to get a reliable , complete list of the problems to be solved the desire to empower users of architecture was , in fact , what led alexander to undertake a pattern language project for architecture in the first place the idea expressed in a pattern should be general enough to be applied in very different systems within its context , but still specific enough to give constructive guidance for instance , alexander 's pattern '' a place to wait '' addresses bus stops in the same way as waiting rooms in a surgery , while still proposing helpful and constructive solutions still , the problems and solutions described in a pattern can vary in their level of abstraction and generality on the one side , and specificity on the other side alexander gives each pattern a rating by zero , one or two stars , indicating how well they are proven in real-world examples alexander draws a parallel to the hierarchy of a grammar – that is one argument for him to speak of a pattern language the idea of linking is generally accepted among pattern authors , though the semantic rationale behind the links may vary in design patterns , make only little use of pattern linking – possibly because it did not make that much sense for their collection of patterns a recipe or other sequential set of steps to be followed , with only one correct path from start to finish , is also not a pattern language the framework and philosophy of the '' pattern language '' approach was initially popularized in the book a pattern language that was written by christopher alexander and five colleagues at the center for environmental structure in berkeley , california in the late 1970s examples since the 1990s include software design patterns in software engineering and , more generally , architectural pattern ( computer science ) , as well as interaction design patterns leitner , helmut ( 2015 ) : pattern theory : introduction and perspectives on the tracks of christopher alexander 