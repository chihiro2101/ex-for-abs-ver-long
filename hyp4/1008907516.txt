despite the increase in ivr technology during the 1970s , the technology was considered complex and expensive for automating tasks in call centers the first commercial application of ivr was an order entry inventory control system designed and developed by steven schmidt in 1973 early voice response systems were dsp technology based and limited to small vocabularies in the early 1980s , leon ferber 's perception technology became the first mainstream market competitor , after hard drive technology ( read/write random-access to digitized voice data ) had reached a cost-effective price point at that time , a system could store digitized speech on disk , play the appropriate spoken message , and process the human 's dtmf response as call centers began to migrate to multimedia in the late 1990s , companies started to invest in computer telephony integration ( cti ) with ivr systems ivr became vital for call centers deploying universal queuing and routing solutions and acted as an agent which collected customer data to enable intelligent routing decisions with improvements in technology , systems could use speaker-independent voice recognition of a limited vocabulary instead of requiring the person to use dtmf signaling dtmf decoding and speech recognition are used to interpret the caller 's response to voice prompts this information can be used to profile the caller and route the call to an agent with a particular skill set ) interactive voice response can be used to front-end a call center operation by identifying the needs of the caller account numbers from the ivr are often compared to caller id data for security reasons and additional ivr responses are required if the caller id does not match the account record a traditional ivr depended upon proprietary programming or scripting languages , whereas modern ivr applications are generated in a similar way to web pages , using standards such as voicexml , ccxml , srgs and ssml the ability to use xml-driven applications allows a web server to act as the application server , freeing the ivr developer to focus on the call flow ivr speech recognition interactions ( call flows ) are designed using 3 approaches to prompt for and recognize user input : directed , open-ended , and mixed dialogue the open-ended prompt requires a greater degree of natural language processing to extract the relevant information from the phrase ( i.e arus increase the number of information calls handled and provide consistent quality in information retrieval when an ivr system answers multiple phone numbers , the use of dnis ensures that the correct application and language is executed the caller can be given the option to wait in the queue , choose an automated service , or request a callback cti can transfer relevant information about the individual customer and the ivr dialog from the ivr to the agent desktop using a screen pop , making for a more effective and efficient service the use of video gives ivr systems the ability to implement multimodal interaction with the caller due to the introduction of instant messaging ( im ) in contact centers , agents can handle up to 6 different im conversations at the same time , which increases agent productivity ivr applications can also be hosted on the public network , without contact center integration it is also possible to deploy two-prong ivr services where the initial ivr application is used to route the call to the appropriate contact center 